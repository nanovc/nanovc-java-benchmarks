"Name","Total Time","Total Time (CPU)","Invocations"
"Test worker","58,8 ms (-0%)","0,0 ms (0%)","1Â 850"
" io.nanovc.memory.OperationalDecompositionTests.NC ()","26,7 ms (-0%)","0,0 ms (0%)","1"
"  io.nanovc.memory.NanoVCOperationalDecompositionTests.commit ()","18,1 ms (-0%)","0,0 ms (0%)","1"
"   io.nanovc.memory.strings.StringNanoRepo.commit (io.nanovc.areas.StringHashMapArea, String, io.nanovc.areas.StringAreaAPI)","16,7 ms (-0%)","0,0 ms (0%)","1"
"    io.nanovc.memory.MemoryRepoEngineBase.commit (io.nanovc.AreaAPI, String, io.nanovc.areas.StringAreaAPI, io.nanovc.memory.MemoryRepoAPI, io.nanovc.ByteArrayIndex, io.nanovc.ClockAPI)","16,7 ms (-0%)","0,0 ms (0%)","1"
"     io.nanovc.memory.MemoryRepoEngineBase.constructCommit (io.nanovc.AreaAPI, String, io.nanovc.areas.StringAreaAPI, io.nanovc.ByteArrayIndex, io.nanovc.ClockAPI)","16,6 ms (-0%)","0,0 ms (0%)","1"
"      io.nanovc.areas.HashMapArea$1.next ()","4,92 ms (-0%)","0,0 ms (0%)","1"
"       io.nanovc.areas.HashMapArea$1.next ()","4,91 ms (-0%)","0,0 ms (0%)","1"
"        Self time","4,84 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.get (int)","0,039 ms (-0%)","0,0 ms (0%)","48"
"         Self time","0,030 ms (-0%)","0,0 ms (0%)","48"
"         java.util.ArrayList.elementData (int)","0,009 ms (-0%)","0,0 ms (0%)","48"
"        io.nanovc.RepoPath.at (String)","0,020 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.get (Object)","0,008 ms (-0%)","0,0 ms (0%)","4"
"         Self time","0,005 ms (-0%)","0,0 ms (0%)","4"
"         java.util.HashMap.hash (Object)","0,001 ms (-0%)","0,0 ms (0%)","4"
"         java.util.HashMap.getNode (int, Object)","0,001 ms (-0%)","0,0 ms (0%)","4"
"        java.util.HashMap.hash (Object)","0,003 ms (-0%)","0,0 ms (0%)","4"
"        java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","4"
"       Self time","0,010 ms (-0%)","0,0 ms (0%)","1"
"      io.nanovc.clocks.AbstractClockWithVMNanos.now ()","3,62 ms (-0%)","0,0 ms (0%)","1"
"       io.nanovc.clocks.AbstractClockWithVMNanos.now ()","3,61 ms (-0%)","0,0 ms (0%)","1"
"        io.nanovc.clocks.ClockWithVMNanos.createNewEpoch ()","2,18 ms (-0%)","0,0 ms (0%)","1"
"         Self time","2,14 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.get (int)","0,032 ms (-0%)","0,0 ms (0%)","36"
"          Self time","0,024 ms (-0%)","0,0 ms (0%)","36"
"          java.util.ArrayList.elementData (int)","0,008 ms (-0%)","0,0 ms (0%)","36"
"         java.util.HashMap.get (Object)","0,005 ms (-0%)","0,0 ms (0%)","3"
"          Self time","0,003 ms (-0%)","0,0 ms (0%)","3"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","3"
"          java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","3"
"         java.util.HashMap.hash (Object)","0,003 ms (-0%)","0,0 ms (0%)","9"
"         java.util.HashMap.getNode (int, Object)","0,001 ms (-0%)","0,0 ms (0%)","9"
"        Self time","1,37 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.get (int)","0,021 ms (-0%)","0,0 ms (0%)","24"
"         Self time","0,016 ms (-0%)","0,0 ms (0%)","24"
"         java.util.ArrayList.elementData (int)","0,004 ms (-0%)","0,0 ms (0%)","24"
"        io.nanovc.clocks.ClockWithVMNanos.nowNanos ()","0,016 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.get (Object)","0,005 ms (-0%)","0,0 ms (0%)","2"
"         Self time","0,004 ms (-0%)","0,0 ms (0%)","2"
"         java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"         java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"        java.util.HashMap.hash (Object)","0,003 ms (-0%)","0,0 ms (0%)","8"
"        java.util.HashMap.getNode (int, Object)","0,001 ms (-0%)","0,0 ms (0%)","8"
"       Self time","0,012 ms (-0%)","0,0 ms (0%)","1"
"      io.nanovc.memory.MemoryRepoEngineBase.createSnapshotArea ()","2,83 ms (-0%)","0,0 ms (0%)","1"
"       Self time","2,51 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.get (int)","0,316 ms (-0%)","0,0 ms (0%)","12"
"        Self time","0,309 ms (-0%)","0,0 ms (0%)","12"
"        java.util.ArrayList.elementData (int)","0,006 ms (-0%)","0,0 ms (0%)","12"
"       java.util.HashMap.get (Object)","0,003 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"        java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"       java.util.HashMap.hash (Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"       java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"      io.nanovc.areas.HashMapArea.iterator ()","2,18 ms (-0%)","0,0 ms (0%)","1"
"       Self time","2,16 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.get (int)","0,017 ms (-0%)","0,0 ms (0%)","12"
"        Self time","0,014 ms (-0%)","0,0 ms (0%)","12"
"        java.util.ArrayList.elementData (int)","0,003 ms (-0%)","0,0 ms (0%)","12"
"       java.util.HashMap.entrySet ()","0,003 ms (-0%)","0,0 ms (0%)","1"
"       java.util.HashMap.get (Object)","0,002 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"        java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"       java.util.HashMap.hash (Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"       java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"      io.nanovc.indexes.HashWrapperByteArrayIndex.addOrLookup (byte[])","1,57 ms (-0%)","0,0 ms (0%)","1"
"       Self time","1,52 ms (-0%)","0,0 ms (0%)","1"
"       java.util.HashMap.computeIfAbsent (Object, java.util.function.Function)","0,035 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,028 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.hash (Object)","0,003 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.resize ()","0,002 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,001 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.get (int)","0,008 ms (-0%)","0,0 ms (0%)","12"
"        Self time","0,006 ms (-0%)","0,0 ms (0%)","12"
"        java.util.ArrayList.elementData (int)","0,002 ms (-0%)","0,0 ms (0%)","12"
"       java.util.HashMap.get (Object)","0,006 ms (-0%)","0,0 ms (0%)","2"
"        Self time","0,003 ms (-0%)","0,0 ms (0%)","2"
"        java.util.HashMap.hash (Object)","0,001 ms (-0%)","0,0 ms (0%)","2"
"        java.util.HashMap.getNode (int, Object)","0,001 ms (-0%)","0,0 ms (0%)","2"
"       java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"       java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"      io.nanovc.areas.ByteArrayHashMapArea.putBytes (io.nanovc.RepoPath, byte[])","0,800 ms (-0%)","0,0 ms (0%)","1"
"       io.nanovc.areas.ByteArrayHashMapArea.createContentFor (byte[])","0,685 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,670 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.get (int)","0,011 ms (-0%)","0,0 ms (0%)","12"
"         Self time","0,006 ms (-0%)","0,0 ms (0%)","12"
"         java.util.ArrayList.elementData (int)","0,005 ms (-0%)","0,0 ms (0%)","12"
"        java.util.HashMap.get (Object)","0,002 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"         java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"        java.util.HashMap.hash (Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.nanovc.PathBase.toAbsolutePath ()","0,064 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,037 ms (-0%)","0,0 ms (0%)","1"
"        io.nanovc.PathBase.isAbsolute (String)","0,016 ms (-0%)","0,0 ms (0%)","1"
"        io.nanovc.RepoPath.createInstance (String)","0,010 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,008 ms (-0%)","0,0 ms (0%)","1"
"         io.nanovc.RepoPath.createInstance (String)","0,001 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,040 ms (-0%)","0,0 ms (0%)","1"
"       java.util.HashMap.put (Object, Object)","0,010 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,007 ms (-0%)","0,0 ms (0%)","1"
"         java.util.HashMap.resize ()","0,003 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,003 ms (-0%)","0,0 ms (0%)","1"
"         java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,347 ms (-0%)","0,0 ms (0%)","1"
"      io.nanovc.memory.strings.StringMemoryRepoEngine.createCommit ()","0,318 ms (-0%)","0,0 ms (0%)","1"
"       io.nanovc.memory.strings.StringMemoryRepoEngine.createCommit ()","0,306 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,012 ms (-0%)","0,0 ms (0%)","1"
"      io.nanovc.content.ContentWithByteArrayBase.asByteArray ()","0,042 ms (-0%)","0,0 ms (0%)","1"
"       io.nanovc.content.StringContentBase.getEfficientByteArray ()","0,026 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,021 ms (-0%)","0,0 ms (0%)","1"
"        io.nanovc.content.StringContent.getCharset ()","0,004 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,016 ms (-0%)","0,0 ms (0%)","1"
"      io.nanovc.areas.HashMapArea$1.hasNext ()","0,011 ms (-0%)","0,0 ms (0%)","2"
"     Self time","0,023 ms (-0%)","0,0 ms (0%)","1"
"     java.util.HashMap.put (Object, Object)","0,008 ms (-0%)","0,0 ms (0%)","1"
"      java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,006 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,004 ms (-0%)","0,0 ms (0%)","1"
"       java.util.HashMap.resize ()","0,002 ms (-0%)","0,0 ms (0%)","1"
"      java.util.HashMap.hash (Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"      Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"    Self time","0,027 ms (-0%)","0,0 ms (0%)","1"
"   Self time","1,35 ms (-0%)","0,0 ms (0%)","1"
"   java.util.ArrayList.get (int)","0,022 ms (-0%)","0,0 ms (0%)","24"
"    Self time","0,016 ms (-0%)","0,0 ms (0%)","24"
"    java.util.ArrayList.elementData (int)","0,005 ms (-0%)","0,0 ms (0%)","24"
"   io.nanovc.CommitTags.none ()","0,015 ms (-0%)","0,0 ms (0%)","1"
"   java.util.HashMap.get (Object)","0,003 ms (-0%)","0,0 ms (0%)","2"
"    Self time","0,002 ms (-0%)","0,0 ms (0%)","2"
"    java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"    java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"   java.util.HashMap.hash (Object)","0,001 ms (-0%)","0,0 ms (0%)","2"
"   java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"  io.nanovc.memory.NanoVCOperationalDecompositionTests.newContent ()","8,56 ms (-0%)","0,0 ms (0%)","1"
"   io.nanovc.areas.StringHashMapArea.putString (String, String)","8,5 ms (-0%)","0,0 ms (0%)","1"
"    io.nanovc.areas.StringHashMapArea.createContentFor (String)","8,2 ms (-0%)","0,0 ms (0%)","1"
"     Self time","7,86 ms (-0%)","0,0 ms (0%)","1"
"     java.util.ArrayList.get (int)","0,098 ms (-0%)","0,0 ms (0%)","84"
"      Self time","0,071 ms (-0%)","0,0 ms (0%)","84"
"      java.util.ArrayList.elementData (int)","0,027 ms (-0%)","0,0 ms (0%)","84"
"     java.util.HashMap.get (Object)","0,028 ms (-0%)","0,0 ms (0%)","7"
"      Self time","0,024 ms (-0%)","0,0 ms (0%)","7"
"      java.util.HashMap.hash (Object)","0,002 ms (-0%)","0,0 ms (0%)","7"
"      java.util.HashMap.getNode (int, Object)","0,001 ms (-0%)","0,0 ms (0%)","7"
"     io.nanovc.content.StringContent.<clinit> ()","0,020 ms (-0%)","0,0 ms (0%)","1"
"     java.util.HashMap.hash (Object)","0,006 ms (-0%)","0,0 ms (0%)","13"
"     java.util.HashMap.getNode (int, Object)","0,002 ms (-0%)","0,0 ms (0%)","13"
"    Self time","0,020 ms (-0%)","0,0 ms (0%)","1"
"    java.util.HashMap.put (Object, Object)","0,007 ms (-0%)","0,0 ms (0%)","1"
"     java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,005 ms (-0%)","0,0 ms (0%)","1"
"      java.util.HashMap.resize ()","0,002 ms (-0%)","0,0 ms (0%)","1"
"      Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"      java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","1"
"     Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"     java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"   Self time","0,515 ms (-0%)","0,0 ms (0%)","1"
"  Self time","0,018 ms (-0%)","0,0 ms (0%)","1"
" java.util.ArrayList.forEach (java.util.function.Consumer)","15,0 ms (-0%)","0,0 ms (0%)","98"
"  Self time","14,7 ms (-0%)","0,0 ms (0%)","98"
"  java.util.ArrayList.remove (Object)","0,174 ms (-0%)","0,0 ms (0%)","7"
"   Self time","0,168 ms (-0%)","0,0 ms (0%)","7"
"   java.util.ArrayList.fastRemove (Object[], int)","0,006 ms (-0%)","0,0 ms (0%)","7"
"  java.util.HashMap.put (Object, Object)","0,090 ms (-0%)","0,0 ms (0%)","14"
"   java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,061 ms (-0%)","0,0 ms (0%)","14"
"    Self time","0,046 ms (-0%)","0,0 ms (0%)","14"
"    java.util.HashMap.resize ()","0,014 ms (-0%)","0,0 ms (0%)","7"
"   Self time","0,024 ms (-0%)","0,0 ms (0%)","14"
"   java.util.HashMap.hash (Object)","0,004 ms (-0%)","0,0 ms (0%)","14"
"  java.util.ArrayList.isEmpty ()","0,041 ms (-0%)","0,0 ms (0%)","16"
"  java.util.ArrayList.add (Object)","0,015 ms (-0%)","0,0 ms (0%)","7"
"   Self time","0,011 ms (-0%)","0,0 ms (0%)","7"
"   java.util.ArrayList.add (Object, Object[], int)","0,003 ms (-0%)","0,0 ms (0%)","7"
"  java.util.HashMap.containsKey (Object)","0,013 ms (-0%)","0,0 ms (0%)","2"
"   Self time","0,009 ms (-0%)","0,0 ms (0%)","2"
"   java.util.HashMap.hash (Object)","0,002 ms (-0%)","0,0 ms (0%)","2"
"   java.util.HashMap.getNode (int, Object)","0,001 ms (-0%)","0,0 ms (0%)","2"
"  java.util.ArrayList.elementAt (Object[], int)","0,011 ms (-0%)","0,0 ms (0%)","18"
"  java.util.ArrayList.get (int)","0,010 ms (-0%)","0,0 ms (0%)","7"
"   Self time","0,007 ms (-0%)","0,0 ms (0%)","7"
"   java.util.ArrayList.elementData (int)","0,002 ms (-0%)","0,0 ms (0%)","7"
"  java.util.HashMap.tableSizeFor (int)","0,010 ms (-0%)","0,0 ms (0%)","7"
" java.util.HashMap.put (Object, Object)","14,4 ms (-0%)","0,0 ms (0%)","196"
"  java.util.HashMap.hash (Object)","12,7 ms (-0%)","0,0 ms (0%)","196"
"  Self time","0,908 ms (-0%)","0,0 ms (0%)","196"
"  java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,776 ms (-0%)","0,0 ms (0%)","196"
"   Self time","0,684 ms (-0%)","0,0 ms (0%)","196"
"   java.util.HashMap.resize ()","0,046 ms (-0%)","0,0 ms (0%)","28"
"   java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,045 ms (-0%)","0,0 ms (0%)","98"
" java.util.HashMap.getNode (int, Object)","0,637 ms (-0%)","0,0 ms (0%)","185"
" java.util.ArrayList.addAll (java.util.Collection)","0,546 ms (-0%)","0,0 ms (0%)","85"
"  java.util.ArrayList.toArray ()","0,433 ms (-0%)","0,0 ms (0%)","85"
"  Self time","0,102 ms (-0%)","0,0 ms (0%)","85"
"  java.util.ArrayList.grow (int)","0,010 ms (-0%)","0,0 ms (0%)","14"
" java.util.ArrayList.spliterator ()","0,488 ms (-0%)","0,0 ms (0%)","381"
" java.util.HashMap.prepareArray (Object[])","0,373 ms (-0%)","0,0 ms (0%)","252"
" java.util.ArrayList.add (Object)","0,344 ms (-0%)","0,0 ms (0%)","131"
"  java.util.ArrayList.add (Object, Object[], int)","0,209 ms (-0%)","0,0 ms (0%)","131"
"   java.util.ArrayList.grow ()","0,135 ms (-0%)","0,0 ms (0%)","65"
"    java.util.ArrayList.grow (int)","0,089 ms (-0%)","0,0 ms (0%)","65"
"    Self time","0,045 ms (-0%)","0,0 ms (0%)","65"
"   Self time","0,074 ms (-0%)","0,0 ms (0%)","131"
"  Self time","0,135 ms (-0%)","0,0 ms (0%)","131"
" java.util.ArrayList.get (int)","0,304 ms (-0%)","0,0 ms (0%)","116"
"  Self time","0,233 ms (-0%)","0,0 ms (0%)","116"
"  java.util.ArrayList.elementData (int)","0,070 ms (-0%)","0,0 ms (0%)","116"
" java.util.ArrayList.hashCode ()","0,168 ms (-0%)","0,0 ms (0%)","35"
"  java.util.ArrayList.hashCodeRange (int, int)","0,089 ms (-0%)","0,0 ms (0%)","35"
"  Self time","0,061 ms (-0%)","0,0 ms (0%)","35"
"  java.util.ArrayList.checkForComodification (int)","0,016 ms (-0%)","0,0 ms (0%)","35"
" io.nanovc.memory.OperationalDecompositionTests.beforeEachTest ()","0,155 ms (-0%)","0,0 ms (0%)","7"
"  io.nanovc.memory.NanoVCOperationalDecompositionTests.createRepo ()","0,118 ms (-0%)","0,0 ms (0%)","7"
"   Self time","0,110 ms (-0%)","0,0 ms (0%)","7"
"   java.util.HashMap.tableSizeFor (int)","0,008 ms (-0%)","0,0 ms (0%)","7"
"  Self time","0,036 ms (-0%)","0,0 ms (0%)","7"
" java.util.HashMap.get (Object)","0,092 ms (-0%)","0,0 ms (0%)","13"
"  Self time","0,064 ms (-0%)","0,0 ms (0%)","13"
"  java.util.HashMap.hash (Object)","0,016 ms (-0%)","0,0 ms (0%)","13"
"  java.util.HashMap.getNode (int, Object)","0,010 ms (-0%)","0,0 ms (0%)","13"
" java.util.HashMap.hash (Object)","0,086 ms (-0%)","0,0 ms (0%)","185"
" java.util.ArrayList.listIterator (int)","0,060 ms (-0%)","0,0 ms (0%)","21"
"  Self time","0,051 ms (-0%)","0,0 ms (0%)","21"
"  java.util.ArrayList.rangeCheckForAdd (int)","0,008 ms (-0%)","0,0 ms (0%)","21"
" java.util.ArrayList.iterator ()","0,045 ms (-0%)","0,0 ms (0%)","34"
" java.util.HashMap.tableSizeFor (int)","0,030 ms (-0%)","0,0 ms (0%)","42"
" java.util.HashMap.containsKey (Object)","0,024 ms (-0%)","0,0 ms (0%)","7"
"  Self time","0,018 ms (-0%)","0,0 ms (0%)","7"
"  java.util.HashMap.hash (Object)","0,003 ms (-0%)","0,0 ms (0%)","7"
"  java.util.HashMap.getNode (int, Object)","0,003 ms (-0%)","0,0 ms (0%)","7"
" java.util.ArrayList.sort (java.util.Comparator)","0,018 ms (-0%)","0,0 ms (0%)","7"
" java.util.ArrayList.toArray ()","0,016 ms (-0%)","0,0 ms (0%)","7"
" java.util.ArrayList.isEmpty ()","0,014 ms (-0%)","0,0 ms (0%)","34"
" java.util.HashMap.remove (Object)","0,008 ms (-0%)","0,0 ms (0%)","2"
"  java.util.HashMap.removeNode (int, Object, Object, boolean, boolean)","0,006 ms (-0%)","0,0 ms (0%)","2"
"  Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"  java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
" java.util.ArrayList.elementAt (Object[], int)","0,002 ms (-0%)","0,0 ms (0%)","7"
" java.util.ArrayList.remove (Object)","0,002 ms (-0%)","0,0 ms (0%)","2"
"  Self time","0,002 ms (-0%)","0,0 ms (0%)","2"
"  java.util.ArrayList.fastRemove (Object[], int)","0,0 ms (0%)","0,0 ms (0%)","1"
" java.util.ArrayList.clear ()","0,001 ms (-0%)","0,0 ms (0%)","2"
