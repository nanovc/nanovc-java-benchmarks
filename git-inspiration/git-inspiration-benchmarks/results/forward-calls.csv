"Name","Total Time","Total Time (CPU)","Invocations"
"Test worker","54,4 ms (-0%)","49,8 ms (-0%)","2Â 247"
" io.nanovc.memory.OperationalDecompositionTests.NCMCDC ()","31,9 ms (-0%)","41,5 ms (-0%)","1"
"  io.nanovc.memory.GitInspirationOperationalDecompositionTests.commit ()","29,4 ms (-0%)","41,6 ms (-0%)","3"
"   io.git.nanovc.RepoHandler.commitAll (String, boolean)","29,1 ms (-0%)","41,6 ms (-0%)","3"
"    io.git.nanovc.RepoEngine.commitAll (io.git.nanovc.Repo, String, String, java.time.ZonedDateTime, String, java.time.ZonedDateTime, boolean)","19,9 ms (-0%)","15,0 ms (-0%)","3"
"     io.git.nanovc.RepoEngine.commitAll_UseCommitParentHashes (io.git.nanovc.Repo, String, String, java.time.ZonedDateTime, String, java.time.ZonedDateTime, boolean, String[])","18,3 ms (-0%)","15,1 ms (-0%)","3"
"      io.git.nanovc.RepoEngine.write_tree (io.git.nanovc.Repo)","14,5 ms (-0%)","15,2 ms (-0%)","3"
"       io.git.nanovc.RepoEngine.hash_object_write (io.git.nanovc.Repo, io.git.nanovc.RepoObject)","8,38 ms (-0%)","15,4 ms (-0%)","5"
"        io.git.nanovc.RepoObject.getByteArray ()","6,18 ms (-0%)","0,0 ms (0%)","5"
"         io.git.nanovc.Tree.writeContentToStream (java.io.DataOutputStream)","6,6 ms (-0%)","0,0 ms (0%)","3"
"          Self time","6,0 ms (-0%)","0,0 ms (0%)","3"
"          io.git.nanovc.Tree$1.<clinit> ()","0,042 ms (-0%)","0,0 ms (0%)","1"
"           Self time","0,025 ms (-0%)","0,0 ms (0%)","1"
"           io.git.nanovc.ObjectType.values ()","0,017 ms (-0%)","0,0 ms (0%)","1"
"          java.util.ArrayList.get (int)","0,011 ms (-0%)","0,0 ms (0%)","3"
"           Self time","0,008 ms (-0%)","0,0 ms (0%)","3"
"           java.util.ArrayList.elementData (int)","0,002 ms (-0%)","0,0 ms (0%)","3"
"          java.util.ArrayList.iterator ()","0,002 ms (-0%)","0,0 ms (0%)","3"
"          java.util.HashMap.get (Object)","0,002 ms (-0%)","0,0 ms (0%)","1"
"           Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"           java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,095 ms (-0%)","0,0 ms (0%)","5"
"         io.git.nanovc.Blob.writeContentToStream (java.io.DataOutputStream)","0,028 ms (-0%)","0,0 ms (0%)","2"
"        io.git.nanovc.RepoEngine.hash_object (io.git.nanovc.ObjectType, byte[])","1,42 ms (-0%)","15,5 ms (-0%)","5"
"         Self time","1,36 ms (-0%)","15,6 ms (-0%)","5"
"         io.git.nanovc.Hex.<clinit> ()","0,022 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.Hex.bytesToHex (byte[])","0,021 ms (-0%)","0,0 ms (0%)","5"
"         java.util.ArrayList.get (int)","0,009 ms (-0%)","0,0 ms (0%)","6"
"          Self time","0,008 ms (-0%)","0,0 ms (0%)","6"
"          java.util.ArrayList.elementData (int)","0,001 ms (-0%)","0,0 ms (0%)","6"
"         java.util.HashMap.get (Object)","0,003 ms (-0%)","0,0 ms (0%)","2"
"          Self time","0,002 ms (-0%)","0,0 ms (0%)","2"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"          java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"         java.util.HashMap.hash (Object)","0,001 ms (-0%)","0,0 ms (0%)","2"
"         java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"        io.git.nanovc.RepoObjectStore.put (io.git.nanovc.RepoObject)","0,684 ms (-0%)","0,0 ms (0%)","5"
"         Self time","0,551 ms (-0%)","0,0 ms (0%)","5"
"         java.util.HashMap.computeIfAbsent (Object, java.util.function.Function)","0,094 ms (-0%)","0,0 ms (0%)","5"
"          Self time","0,056 ms (-0%)","0,0 ms (0%)","5"
"          io.git.nanovc.RepoObjectStore.lambda$put$0 (String)","0,033 ms (-0%)","0,0 ms (0%)","5"
"          java.util.HashMap.resize ()","0,002 ms (-0%)","0,0 ms (0%)","1"
"          java.util.HashMap.hash (Object)","0,001 ms (-0%)","0,0 ms (0%)","5"
"          java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,001 ms (-0%)","0,0 ms (0%)","5"
"         java.util.HashMap.put (Object, Object)","0,026 ms (-0%)","0,0 ms (0%)","10"
"          java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,014 ms (-0%)","0,0 ms (0%)","10"
"           java.util.HashMap.resize ()","0,006 ms (-0%)","0,0 ms (0%)","6"
"           Self time","0,006 ms (-0%)","0,0 ms (0%)","10"
"           java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,001 ms (-0%)","0,0 ms (0%)","10"
"          Self time","0,009 ms (-0%)","0,0 ms (0%)","10"
"          java.util.HashMap.hash (Object)","0,001 ms (-0%)","0,0 ms (0%)","10"
"         java.util.HashMap.containsKey (Object)","0,010 ms (-0%)","0,0 ms (0%)","5"
"          Self time","0,006 ms (-0%)","0,0 ms (0%)","5"
"          java.util.HashMap.hash (Object)","0,001 ms (-0%)","0,0 ms (0%)","5"
"          java.util.HashMap.getNode (int, Object)","0,001 ms (-0%)","0,0 ms (0%)","5"
"         java.util.HashMap.get (Object)","0,002 ms (-0%)","0,0 ms (0%)","1"
"          Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,070 ms (-0%)","0,0 ms (0%)","5"
"        io.git.nanovc.Blob.getObjectType ()","0,015 ms (-0%)","0,0 ms (0%)","2"
"        io.git.nanovc.Tree.getObjectType ()","0,004 ms (-0%)","0,0 ms (0%)","3"
"       Self time","4,84 ms (-0%)","0,0 ms (0%)","3"
"       io.git.nanovc.PathBase.splitIntoParts ()","0,936 ms (-0%)","0,0 ms (0%)","2"
"        Self time","0,902 ms (-0%)","0,0 ms (0%)","2"
"        java.util.ArrayList.subList (int, int)","0,012 ms (-0%)","0,0 ms (0%)","2"
"        java.util.ArrayList.add (Object)","0,006 ms (-0%)","0,0 ms (0%)","4"
"         java.util.ArrayList.add (Object, Object[], int)","0,004 ms (-0%)","0,0 ms (0%)","4"
"          java.util.ArrayList.grow ()","0,003 ms (-0%)","0,0 ms (0%)","2"
"           java.util.ArrayList.grow (int)","0,002 ms (-0%)","0,0 ms (0%)","2"
"           Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"          Self time","0,001 ms (-0%)","0,0 ms (0%)","4"
"         Self time","0,002 ms (-0%)","0,0 ms (0%)","4"
"        io.git.nanovc.PathBase.lambda$splitIntoParts$0 (String)","0,006 ms (-0%)","0,0 ms (0%)","4"
"        java.util.ArrayList.get (int)","0,002 ms (-0%)","0,0 ms (0%)","2"
"         Self time","0,002 ms (-0%)","0,0 ms (0%)","2"
"         java.util.ArrayList.elementData (int)","0,0 ms (0%)","0,0 ms (0%)","2"
"        java.util.HashMap.get (Object)","0,002 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"         java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.PathBase.lambda$splitIntoParts$1 (int)","0,002 ms (-0%)","0,0 ms (0%)","2"
"       io.git.nanovc.ObjectType.<clinit> ()","0,074 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.PathBase.resolve (String)","0,068 ms (-0%)","0,0 ms (0%)","2"
"        Self time","0,041 ms (-0%)","0,0 ms (0%)","2"
"        io.git.nanovc.RepoPath.createInstance (String)","0,019 ms (-0%)","0,0 ms (0%)","2"
"         Self time","0,018 ms (-0%)","0,0 ms (0%)","2"
"         io.git.nanovc.RepoPath.createInstance (String)","0,001 ms (-0%)","0,0 ms (0%)","2"
"        io.git.nanovc.PathBase.isAbsolute (String)","0,006 ms (-0%)","0,0 ms (0%)","2"
"       java.util.HashMap.put (Object, Object)","0,041 ms (-0%)","0,0 ms (0%)","10"
"        java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,025 ms (-0%)","0,0 ms (0%)","10"
"         Self time","0,012 ms (-0%)","0,0 ms (0%)","10"
"         java.util.HashMap.resize ()","0,011 ms (-0%)","0,0 ms (0%)","10"
"         java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,002 ms (-0%)","0,0 ms (0%)","10"
"        Self time","0,009 ms (-0%)","0,0 ms (0%)","10"
"        java.util.HashMap.hash (Object)","0,006 ms (-0%)","0,0 ms (0%)","10"
"       java.util.ArrayList.get (int)","0,038 ms (-0%)","0,0 ms (0%)","21"
"        Self time","0,030 ms (-0%)","0,0 ms (0%)","21"
"        java.util.ArrayList.elementData (int)","0,007 ms (-0%)","0,0 ms (0%)","21"
"       java.util.HashMap.get (Object)","0,028 ms (-0%)","0,0 ms (0%)","16"
"        Self time","0,020 ms (-0%)","0,0 ms (0%)","16"
"        java.util.HashMap.hash (Object)","0,004 ms (-0%)","0,0 ms (0%)","16"
"        java.util.HashMap.getNode (int, Object)","0,003 ms (-0%)","0,0 ms (0%)","16"
"       io.git.nanovc.RepoPath.atRoot ()","0,028 ms (-0%)","0,0 ms (0%)","5"
"       java.util.ArrayList.add (Object)","0,024 ms (-0%)","0,0 ms (0%)","7"
"        java.util.ArrayList.add (Object, Object[], int)","0,019 ms (-0%)","0,0 ms (0%)","7"
"         java.util.ArrayList.grow ()","0,012 ms (-0%)","0,0 ms (0%)","7"
"          java.util.ArrayList.grow (int)","0,008 ms (-0%)","0,0 ms (0%)","7"
"          Self time","0,003 ms (-0%)","0,0 ms (0%)","7"
"         Self time","0,006 ms (-0%)","0,0 ms (0%)","7"
"        Self time","0,005 ms (-0%)","0,0 ms (0%)","7"
"       io.git.nanovc.PathBase.toString ()","0,015 ms (-0%)","0,0 ms (0%)","10"
"       java.util.ArrayList.iterator ()","0,006 ms (-0%)","0,0 ms (0%)","6"
"       java.util.HashMap.hash (Object)","0,004 ms (-0%)","0,0 ms (0%)","6"
"       io.git.nanovc.RepoPath.at (String)","0,002 ms (-0%)","0,0 ms (0%)","2"
"       java.util.HashMap.getNode (int, Object)","0,001 ms (-0%)","0,0 ms (0%)","6"
"      Self time","2,15 ms (-0%)","0,0 ms (0%)","3"
"      java.util.ArrayList.forEach (java.util.function.Consumer)","0,739 ms (-0%)","0,0 ms (0%)","3"
"       io.git.nanovc.RepoEngine.lambda$commitAll_UseCommitParentHashes$7 (boolean, io.git.nanovc.Repo, io.git.nanovc.MutableContent)","0,723 ms (-0%)","0,0 ms (0%)","2"
"        io.git.nanovc.ImmutableContentArea.putContent (String, byte[])","0,708 ms (-0%)","0,0 ms (0%)","2"
"         Self time","0,621 ms (-0%)","0,0 ms (0%)","2"
"         io.git.nanovc.ImmutableContentArea.putContent (io.git.nanovc.ImmutableContent)","0,076 ms (-0%)","0,0 ms (0%)","2"
"          io.git.nanovc.ContentMap.putContent (io.git.nanovc.Content)","0,049 ms (-0%)","0,0 ms (0%)","2"
"           Self time","0,028 ms (-0%)","0,0 ms (0%)","2"
"           java.util.HashMap.put (Object, Object)","0,021 ms (-0%)","0,0 ms (0%)","2"
"            java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,019 ms (-0%)","0,0 ms (0%)","2"
"             Self time","0,016 ms (-0%)","0,0 ms (0%)","2"
"             java.util.HashMap.resize ()","0,002 ms (-0%)","0,0 ms (0%)","1"
"             java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","2"
"            Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"            java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"          Self time","0,027 ms (-0%)","0,0 ms (0%)","2"
"         java.util.ArrayList.get (int)","0,006 ms (-0%)","0,0 ms (0%)","3"
"          Self time","0,004 ms (-0%)","0,0 ms (0%)","3"
"          java.util.ArrayList.elementData (int)","0,001 ms (-0%)","0,0 ms (0%)","3"
"         java.util.HashMap.get (Object)","0,002 ms (-0%)","0,0 ms (0%)","1"
"          Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,013 ms (-0%)","0,0 ms (0%)","2"
"        io.git.nanovc.ContentBase.getCloneOfContentAsByteArray ()","0,002 ms (-0%)","0,0 ms (0%)","2"
"       Self time","0,014 ms (-0%)","0,0 ms (0%)","3"
"       java.util.ArrayList.elementAt (Object[], int)","0,0 ms (0%)","0,0 ms (0%)","2"
"      io.git.nanovc.RepoEngine.commit_tree (io.git.nanovc.Repo, String, String, String, java.time.ZonedDateTime, String, java.time.ZonedDateTime, String[])","0,652 ms (-0%)","0,0 ms (0%)","3"
"       io.git.nanovc.RepoEngine.hash_object_write (io.git.nanovc.Repo, io.git.nanovc.RepoObject)","0,487 ms (-0%)","0,0 ms (0%)","3"
"        io.git.nanovc.RepoObject.getByteArray ()","0,236 ms (-0%)","0,0 ms (0%)","3"
"         io.git.nanovc.Commit.writeContentToStream (java.io.DataOutputStream)","0,217 ms (-0%)","0,0 ms (0%)","3"
"         Self time","0,018 ms (-0%)","0,0 ms (0%)","3"
"        io.git.nanovc.RepoEngine.hash_object (io.git.nanovc.ObjectType, byte[])","0,168 ms (-0%)","0,0 ms (0%)","3"
"         Self time","0,160 ms (-0%)","0,0 ms (0%)","3"
"         io.git.nanovc.Hex.bytesToHex (byte[])","0,007 ms (-0%)","0,0 ms (0%)","3"
"        io.git.nanovc.RepoObjectStore.put (io.git.nanovc.RepoObject)","0,056 ms (-0%)","0,0 ms (0%)","3"
"         java.util.HashMap.computeIfAbsent (Object, java.util.function.Function)","0,020 ms (-0%)","0,0 ms (0%)","3"
"          Self time","0,018 ms (-0%)","0,0 ms (0%)","3"
"          io.git.nanovc.RepoObjectStore.lambda$put$0 (String)","0,001 ms (-0%)","0,0 ms (0%)","3"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","3"
"          java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","3"
"         java.util.HashMap.put (Object, Object)","0,020 ms (-0%)","0,0 ms (0%)","6"
"          java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,017 ms (-0%)","0,0 ms (0%)","6"
"           Self time","0,012 ms (-0%)","0,0 ms (0%)","6"
"           java.util.HashMap.resize ()","0,003 ms (-0%)","0,0 ms (0%)","3"
"           java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","6"
"          Self time","0,002 ms (-0%)","0,0 ms (0%)","6"
"          java.util.HashMap.hash (Object)","0,001 ms (-0%)","0,0 ms (0%)","6"
"         Self time","0,009 ms (-0%)","0,0 ms (0%)","3"
"         java.util.HashMap.containsKey (Object)","0,005 ms (-0%)","0,0 ms (0%)","3"
"          Self time","0,003 ms (-0%)","0,0 ms (0%)","3"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","3"
"          java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","3"
"        io.git.nanovc.Commit.getObjectType ()","0,015 ms (-0%)","0,0 ms (0%)","3"
"        Self time","0,011 ms (-0%)","0,0 ms (0%)","3"
"       Self time","0,164 ms (-0%)","0,0 ms (0%)","3"
"      io.git.nanovc.RepoEngine.update_ref_in_heads (io.git.nanovc.Repo, String, String)","0,221 ms (-0%)","0,0 ms (0%)","3"
"       io.git.nanovc.RepoEngine.update_ref (io.git.nanovc.Repo, io.git.nanovc.HashReferenceCollection, String, String)","0,208 ms (-0%)","0,0 ms (0%)","3"
"        Self time","0,120 ms (-0%)","0,0 ms (0%)","3"
"        io.git.nanovc.HashReferenceCollection.getReference (String)","0,082 ms (-0%)","0,0 ms (0%)","3"
"         Self time","0,078 ms (-0%)","0,0 ms (0%)","3"
"         java.util.ArrayList.spliterator ()","0,002 ms (-0%)","0,0 ms (0%)","3"
"         io.git.nanovc.HashReferenceCollection.lambda$getReference$0 (String, io.git.nanovc.HashReference)","0,001 ms (-0%)","0,0 ms (0%)","2"
"        java.util.ArrayList.add (Object)","0,005 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.add (Object, Object[], int)","0,004 ms (-0%)","0,0 ms (0%)","1"
"          java.util.ArrayList.grow ()","0,003 ms (-0%)","0,0 ms (0%)","1"
"           java.util.ArrayList.grow (int)","0,002 ms (-0%)","0,0 ms (0%)","1"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,012 ms (-0%)","0,0 ms (0%)","3"
"      io.git.nanovc.ImmutableContentArea.clear ()","0,012 ms (-0%)","0,0 ms (0%)","3"
"       Self time","0,009 ms (-0%)","0,0 ms (0%)","3"
"       java.util.HashMap.clear ()","0,002 ms (-0%)","0,0 ms (0%)","3"
"      java.util.ArrayList.add (Object)","0,012 ms (-0%)","0,0 ms (0%)","2"
"       java.util.ArrayList.add (Object, Object[], int)","0,006 ms (-0%)","0,0 ms (0%)","2"
"        java.util.ArrayList.grow ()","0,004 ms (-0%)","0,0 ms (0%)","2"
"         java.util.ArrayList.grow (int)","0,003 ms (-0%)","0,0 ms (0%)","2"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"        Self time","0,002 ms (-0%)","0,0 ms (0%)","2"
"       Self time","0,005 ms (-0%)","0,0 ms (0%)","2"
"      java.util.ArrayList.iterator ()","0,004 ms (-0%)","0,0 ms (0%)","2"
"      java.util.HashMap.get (Object)","0,003 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"       java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"       java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"      io.git.nanovc.ImmutableContentArea.freeze ()","0,001 ms (-0%)","0,0 ms (0%)","3"
"     io.git.nanovc.RepoEngine.resolveReference (io.git.nanovc.Repo, String)","1,43 ms (-0%)","0,0 ms (0%)","3"
"      io.git.nanovc.RepoEngine.resolveReference (io.git.nanovc.Repo, String)","1,27 ms (-0%)","0,0 ms (0%)","3"
"       io.git.nanovc.HashReferenceCollection.getReference (String)","1,24 ms (-0%)","0,0 ms (0%)","3"
"        Self time","1,20 ms (-0%)","0,0 ms (0%)","3"
"        io.git.nanovc.HashReferenceCollection.lambda$getReference$0 (String, io.git.nanovc.HashReference)","0,019 ms (-0%)","0,0 ms (0%)","2"
"        java.util.HashMap.get (Object)","0,009 ms (-0%)","0,0 ms (0%)","2"
"         Self time","0,008 ms (-0%)","0,0 ms (0%)","2"
"         java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"         java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"        java.util.ArrayList.get (int)","0,004 ms (-0%)","0,0 ms (0%)","3"
"         Self time","0,003 ms (-0%)","0,0 ms (0%)","3"
"         java.util.ArrayList.elementData (int)","0,0 ms (0%)","0,0 ms (0%)","3"
"        java.util.ArrayList.spliterator ()","0,003 ms (-0%)","0,0 ms (0%)","3"
"        java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"        java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,024 ms (-0%)","0,0 ms (0%)","3"
"      Self time","0,163 ms (-0%)","0,0 ms (0%)","3"
"     io.git.nanovc.RepoEngine.resolveCommit (io.git.nanovc.Repo, String)","0,161 ms (-0%)","0,0 ms (0%)","2"
"      io.git.nanovc.RepoEngine.resolveCommit (io.git.nanovc.Repo, String)","0,123 ms (-0%)","0,0 ms (0%)","2"
"       io.git.nanovc.HashReferenceCollection.getReference (String)","0,066 ms (-0%)","0,0 ms (0%)","2"
"        Self time","0,053 ms (-0%)","0,0 ms (0%)","2"
"        java.util.ArrayList.spliterator ()","0,011 ms (-0%)","0,0 ms (0%)","2"
"        io.git.nanovc.HashReferenceCollection.lambda$getReference$0 (String, io.git.nanovc.HashReference)","0,002 ms (-0%)","0,0 ms (0%)","2"
"       Self time","0,027 ms (-0%)","0,0 ms (0%)","2"
"       io.git.nanovc.RepoObjectStore.get (String)","0,023 ms (-0%)","0,0 ms (0%)","2"
"        Self time","0,017 ms (-0%)","0,0 ms (0%)","2"
"        java.util.HashMap.get (Object)","0,006 ms (-0%)","0,0 ms (0%)","2"
"         java.util.HashMap.getNode (int, Object)","0,004 ms (-0%)","0,0 ms (0%)","2"
"         java.util.HashMap.hash (Object)","0,001 ms (-0%)","0,0 ms (0%)","2"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"       io.git.nanovc.RepoObjectStore.get (io.git.nanovc.Hash)","0,005 ms (-0%)","0,0 ms (0%)","2"
"        java.util.HashMap.get (Object)","0,002 ms (-0%)","0,0 ms (0%)","2"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"         java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"         java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"        Self time","0,002 ms (-0%)","0,0 ms (0%)","2"
"      Self time","0,038 ms (-0%)","0,0 ms (0%)","2"
"     Self time","0,044 ms (-0%)","0,0 ms (0%)","3"
"    Self time","7,49 ms (-0%)","15,0 ms (-0%)","3"
"    java.util.HashMap.put (Object, Object)","1,66 ms (-0%)","11,6 ms (-0%)","1Â 200"
"     Self time","0,726 ms (-0%)","0,0 ms (0%)","1Â 200"
"     java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,683 ms (-0%)","13,9 ms (-0%)","1Â 200"
"      Self time","0,488 ms (-0%)","14,4 ms (-0%)","1Â 200"
"      java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,190 ms (-0%)","0,0 ms (0%)","1Â 200"
"      java.util.HashMap.resize ()","0,004 ms (-0%)","0,0 ms (0%)","2"
"     java.util.HashMap.hash (Object)","0,257 ms (-0%)","0,0 ms (0%)","1Â 200"
"    java.util.ArrayList.get (int)","0,020 ms (-0%)","0,0 ms (0%)","14"
"     java.util.ArrayList.elementData (int)","0,012 ms (-0%)","0,0 ms (0%)","14"
"     Self time","0,008 ms (-0%)","0,0 ms (0%)","14"
"    java.util.ArrayList.add (Object)","0,016 ms (-0%)","0,0 ms (0%)","12"
"     java.util.ArrayList.add (Object, Object[], int)","0,010 ms (-0%)","0,0 ms (0%)","12"
"      java.util.ArrayList.grow ()","0,007 ms (-0%)","0,0 ms (0%)","2"
"       java.util.ArrayList.grow (int)","0,006 ms (-0%)","0,0 ms (0%)","2"
"       Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"      Self time","0,003 ms (-0%)","0,0 ms (0%)","12"
"     Self time","0,005 ms (-0%)","0,0 ms (0%)","12"
"    java.util.HashMap.tableSizeFor (int)","0,015 ms (-0%)","0,0 ms (0%)","2"
"    java.util.HashMap.keySet ()","0,005 ms (-0%)","0,0 ms (0%)","1"
"    java.util.ArrayList.iterator ()","0,003 ms (-0%)","0,0 ms (0%)","4"
"    java.util.ArrayList.toArray ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"    java.util.ArrayList.toArray (Object[])","0,001 ms (-0%)","0,0 ms (0%)","1"
"   io.git.nanovc.RepoHandler.addAll (boolean)","0,160 ms (-0%)","0,0 ms (0%)","3"
"    io.git.nanovc.RepoEngine.addAll (io.git.nanovc.Repo, boolean)","0,138 ms (-0%)","0,0 ms (0%)","3"
"     Self time","0,053 ms (-0%)","0,0 ms (0%)","3"
"     io.git.nanovc.MutableContentArea.putContent (String, byte[])","0,044 ms (-0%)","0,0 ms (0%)","2"
"      io.git.nanovc.MutableContentArea.getContent (String)","0,036 ms (-0%)","0,0 ms (0%)","2"
"       Self time","0,034 ms (-0%)","0,0 ms (0%)","2"
"       java.util.ArrayList.spliterator ()","0,001 ms (-0%)","0,0 ms (0%)","2"
"      java.util.ArrayList.add (Object)","0,004 ms (-0%)","0,0 ms (0%)","2"
"       java.util.ArrayList.add (Object, Object[], int)","0,003 ms (-0%)","0,0 ms (0%)","2"
"        java.util.ArrayList.grow ()","0,002 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.grow (int)","0,001 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"       Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"      Self time","0,003 ms (-0%)","0,0 ms (0%)","2"
"     io.git.nanovc.ContentBase.getCloneOfContentAsByteArray ()","0,026 ms (-0%)","0,0 ms (0%)","2"
"     java.util.ArrayList.iterator ()","0,013 ms (-0%)","0,0 ms (0%)","3"
"    Self time","0,021 ms (-0%)","0,0 ms (0%)","3"
"   Self time","0,054 ms (-0%)","0,0 ms (0%)","3"
"   io.git.nanovc.MutableContentArea.clear ()","0,019 ms (-0%)","0,0 ms (0%)","3"
"    Self time","0,017 ms (-0%)","0,0 ms (0%)","3"
"    java.util.ArrayList.clear ()","0,001 ms (-0%)","0,0 ms (0%)","3"
"  io.nanovc.memory.GitInspirationOperationalDecompositionTests.newContent ()","1,93 ms (-0%)","0,0 ms (0%)","1"
"   io.git.nanovc.RepoHandler.putWorkingAreaContent (String, byte[])","1,88 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.RepoEngine.putWorkingAreaContent (io.git.nanovc.Repo, String, byte[])","1,87 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.MutableContentArea.putContent (String, byte[])","1,85 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.MutableContentArea.getContent (String)","1,61 ms (-0%)","0,0 ms (0%)","1"
"       Self time","1,57 ms (-0%)","0,0 ms (0%)","1"
"       java.util.HashMap.get (Object)","0,023 ms (-0%)","0,0 ms (0%)","3"
"        java.util.HashMap.getNode (int, Object)","0,015 ms (-0%)","0,0 ms (0%)","3"
"        Self time","0,005 ms (-0%)","0,0 ms (0%)","3"
"        java.util.HashMap.hash (Object)","0,002 ms (-0%)","0,0 ms (0%)","3"
"       java.util.ArrayList.get (int)","0,008 ms (-0%)","0,0 ms (0%)","6"
"        Self time","0,007 ms (-0%)","0,0 ms (0%)","6"
"        java.util.ArrayList.elementData (int)","0,001 ms (-0%)","0,0 ms (0%)","6"
"       java.util.ArrayList.spliterator ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"       java.util.HashMap.hash (Object)","0,001 ms (-0%)","0,0 ms (0%)","2"
"       java.util.HashMap.getNode (int, Object)","0,001 ms (-0%)","0,0 ms (0%)","2"
"      Self time","0,236 ms (-0%)","0,0 ms (0%)","1"
"      java.util.ArrayList.add (Object)","0,004 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.add (Object, Object[], int)","0,003 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.grow ()","0,002 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.grow (int)","0,002 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"     Self time","0,013 ms (-0%)","0,0 ms (0%)","1"
"    Self time","0,018 ms (-0%)","0,0 ms (0%)","1"
"   Self time","0,041 ms (-0%)","0,0 ms (0%)","1"
"  io.nanovc.memory.GitInspirationOperationalDecompositionTests.deleteContent ()","0,509 ms (-0%)","0,0 ms (0%)","1"
"   io.git.nanovc.MutableContentArea.removeContent (String)","0,499 ms (-0%)","0,0 ms (0%)","1"
"    Self time","0,409 ms (-0%)","0,0 ms (0%)","1"
"    java.util.ArrayList.removeIf (java.util.function.Predicate)","0,090 ms (-0%)","0,0 ms (0%)","1"
"     java.util.ArrayList.removeIf (java.util.function.Predicate, int, int)","0,080 ms (-0%)","0,0 ms (0%)","1"
"      Self time","0,071 ms (-0%)","0,0 ms (0%)","1"
"      java.util.ArrayList.shiftTailOverGap (Object[], int, int)","0,002 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.MutableContentArea.lambda$removeContent$1 (String, io.git.nanovc.MutableContent)","0,001 ms (-0%)","0,0 ms (0%)","1"
"      java.util.ArrayList.nBits (int)","0,001 ms (-0%)","0,0 ms (0%)","1"
"      java.util.ArrayList.isClear (long[], int)","0,001 ms (-0%)","0,0 ms (0%)","1"
"      java.util.ArrayList.elementAt (Object[], int)","0,0 ms (0%)","0,0 ms (0%)","1"
"     Self time","0,009 ms (-0%)","0,0 ms (0%)","1"
"   Self time","0,010 ms (-0%)","0,0 ms (0%)","1"
"  io.nanovc.memory.GitInspirationOperationalDecompositionTests.modifyContent ()","0,090 ms (-0%)","0,0 ms (0%)","1"
"   io.git.nanovc.RepoHandler.putWorkingAreaContent (String, byte[])","0,067 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.RepoEngine.putWorkingAreaContent (io.git.nanovc.Repo, String, byte[])","0,065 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.MutableContentArea.putContent (String, byte[])","0,064 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.MutableContentArea.getContent (String)","0,062 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,040 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.MutableContentArea.lambda$getContent$0 (String, io.git.nanovc.MutableContent)","0,020 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.spliterator ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"      Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"     Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"    Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"   Self time","0,023 ms (-0%)","0,0 ms (0%)","1"
"  Self time","0,054 ms (-0%)","0,0 ms (0%)","1"
" java.util.ArrayList.forEach (java.util.function.Consumer)","4,84 ms (-0%)","0,0 ms (0%)","98"
"  Self time","4,64 ms (-0%)","0,0 ms (0%)","98"
"  java.util.HashMap.put (Object, Object)","0,053 ms (-0%)","0,0 ms (0%)","14"
"   java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,041 ms (-0%)","0,0 ms (0%)","14"
"    Self time","0,029 ms (-0%)","0,0 ms (0%)","14"
"    java.util.HashMap.resize ()","0,012 ms (-0%)","0,0 ms (0%)","7"
"   Self time","0,008 ms (-0%)","0,0 ms (0%)","14"
"   java.util.HashMap.hash (Object)","0,004 ms (-0%)","0,0 ms (0%)","14"
"  java.util.ArrayList.remove (Object)","0,046 ms (-0%)","0,0 ms (0%)","15"
"   Self time","0,037 ms (-0%)","0,0 ms (0%)","15"
"   java.util.ArrayList.fastRemove (Object[], int)","0,009 ms (-0%)","0,0 ms (0%)","15"
"  java.util.ArrayList.get (int)","0,032 ms (-0%)","0,0 ms (0%)","15"
"   Self time","0,028 ms (-0%)","0,0 ms (0%)","15"
"   java.util.ArrayList.elementData (int)","0,003 ms (-0%)","0,0 ms (0%)","15"
"  java.util.ArrayList.isEmpty ()","0,028 ms (-0%)","0,0 ms (0%)","16"
"  java.util.ArrayList.add (Object)","0,018 ms (-0%)","0,0 ms (0%)","15"
"   java.util.ArrayList.add (Object, Object[], int)","0,011 ms (-0%)","0,0 ms (0%)","15"
"   Self time","0,007 ms (-0%)","0,0 ms (0%)","15"
"  java.util.ArrayList.elementAt (Object[], int)","0,008 ms (-0%)","0,0 ms (0%)","18"
"  java.util.HashMap.tableSizeFor (int)","0,006 ms (-0%)","0,0 ms (0%)","7"
"  java.util.HashMap.containsKey (Object)","0,003 ms (-0%)","0,0 ms (0%)","2"
"   Self time","0,002 ms (-0%)","0,0 ms (0%)","2"
"   java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"   java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","2"
" io.nanovc.memory.OperationalDecompositionTests.NC1B1MC2G1_2__1 ()","3,90 ms (-0%)","0,0 ms (0%)","1"
"  io.nanovc.memory.GitInspirationOperationalDecompositionTests.merge1_2__1 ()","2,79 ms (-0%)","0,0 ms (0%)","1"
"   io.nanovc.memory.GitInspirationOperationalDecompositionTests.mergeCommitsIntoBranch (io.git.nanovc.Commit, io.git.nanovc.Commit, String, String)","2,74 ms (-0%)","0,0 ms (0%)","1"
"    io.nanovc.memory.GitInspirationOperationalDecompositionTests.applyDiffs (io.git.nanovc.ContentMap, java.util.Map, io.git.nanovc.MutableContentArea)","0,821 ms (-0%)","0,0 ms (0%)","2"
"     Self time","0,741 ms (-0%)","0,0 ms (0%)","2"
"     io.nanovc.memory.GitInspirationOperationalDecompositionTests$1.<clinit> ()","0,042 ms (-0%)","0,0 ms (0%)","1"
"      Self time","0,025 ms (-0%)","0,0 ms (0%)","1"
"      io.nanovc.memory.GitInspirationOperationalDecompositionTests$Diff.values ()","0,017 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.MutableContentArea.putContent (String, byte[])","0,030 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.MutableContentArea.getContent (String)","0,029 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,026 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.spliterator ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.MutableContentArea.lambda$getContent$0 (String, io.git.nanovc.MutableContent)","0,001 ms (-0%)","0,0 ms (0%)","1"
"      Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.ContentMap.getContent (String)","0,003 ms (-0%)","0,0 ms (0%)","1"
"      java.util.HashMap.get (Object)","0,002 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"       java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"       java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"     java.util.ArrayList.get (int)","0,002 ms (-0%)","0,0 ms (0%)","2"
"      Self time","0,002 ms (-0%)","0,0 ms (0%)","2"
"      java.util.ArrayList.elementData (int)","0,0 ms (0%)","0,0 ms (0%)","2"
"    io.git.nanovc.MutableContentArea.getContentMapSnapshot ()","0,605 ms (-0%)","0,0 ms (0%)","3"
"     Self time","0,578 ms (-0%)","0,0 ms (0%)","3"
"     java.util.ArrayList.forEach (java.util.function.Consumer)","0,026 ms (-0%)","0,0 ms (0%)","3"
"      io.git.nanovc.ContentMap.putContent (io.git.nanovc.Content)","0,016 ms (-0%)","0,0 ms (0%)","3"
"       java.util.HashMap.put (Object, Object)","0,014 ms (-0%)","0,0 ms (0%)","3"
"        java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,012 ms (-0%)","0,0 ms (0%)","3"
"         Self time","0,007 ms (-0%)","0,0 ms (0%)","3"
"         java.util.HashMap.resize ()","0,004 ms (-0%)","0,0 ms (0%)","3"
"         java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","3"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","3"
"        java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","3"
"       Self time","0,002 ms (-0%)","0,0 ms (0%)","3"
"      Self time","0,009 ms (-0%)","0,0 ms (0%)","3"
"      java.util.ArrayList.elementAt (Object[], int)","0,0 ms (0%)","0,0 ms (0%)","3"
"    io.git.nanovc.RepoHandler.commitAll (String, boolean)","0,457 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.RepoEngine.commitAll (io.git.nanovc.Repo, String, String, java.time.ZonedDateTime, String, java.time.ZonedDateTime, boolean)","0,422 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.commitAll_UseCommitParentHashes (io.git.nanovc.Repo, String, String, java.time.ZonedDateTime, String, java.time.ZonedDateTime, boolean, String[])","0,365 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.write_tree (io.git.nanovc.Repo)","0,224 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoEngine.hash_object_write (io.git.nanovc.Repo, io.git.nanovc.RepoObject)","0,103 ms (-0%)","0,0 ms (0%)","2"
"         io.git.nanovc.RepoEngine.hash_object (io.git.nanovc.ObjectType, byte[])","0,070 ms (-0%)","0,0 ms (0%)","2"
"          Self time","0,065 ms (-0%)","0,0 ms (0%)","2"
"          io.git.nanovc.Hex.bytesToHex (byte[])","0,005 ms (-0%)","0,0 ms (0%)","2"
"         io.git.nanovc.RepoObject.getByteArray ()","0,020 ms (-0%)","0,0 ms (0%)","2"
"          io.git.nanovc.Tree.writeContentToStream (java.io.DataOutputStream)","0,008 ms (-0%)","0,0 ms (0%)","1"
"           Self time","0,008 ms (-0%)","0,0 ms (0%)","1"
"           java.util.ArrayList.iterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,008 ms (-0%)","0,0 ms (0%)","2"
"          io.git.nanovc.Blob.writeContentToStream (java.io.DataOutputStream)","0,003 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.RepoObjectStore.put (io.git.nanovc.RepoObject)","0,005 ms (-0%)","0,0 ms (0%)","2"
"          java.util.HashMap.containsKey (Object)","0,004 ms (-0%)","0,0 ms (0%)","2"
"           Self time","0,002 ms (-0%)","0,0 ms (0%)","2"
"           java.util.HashMap.getNode (int, Object)","0,001 ms (-0%)","0,0 ms (0%)","2"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"          Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"         Self time","0,005 ms (-0%)","0,0 ms (0%)","2"
"         io.git.nanovc.Blob.getObjectType ()","0,0 ms (0%)","0,0 ms (0%)","1"
"         io.git.nanovc.Tree.getObjectType ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,044 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.PathBase.splitIntoParts ()","0,041 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,035 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.subList (int, int)","0,002 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.add (Object)","0,001 ms (-0%)","0,0 ms (0%)","2"
"          java.util.ArrayList.add (Object, Object[], int)","0,001 ms (-0%)","0,0 ms (0%)","2"
"           java.util.ArrayList.grow ()","0,0 ms (0%)","0,0 ms (0%)","1"
"            java.util.ArrayList.grow (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"            Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"         java.util.ArrayList.get (int)","0,001 ms (-0%)","0,0 ms (0%)","1"
"          java.util.ArrayList.elementData (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         io.git.nanovc.PathBase.lambda$splitIntoParts$0 (String)","0,0 ms (0%)","0,0 ms (0%)","2"
"         io.git.nanovc.PathBase.lambda$splitIntoParts$1 (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.add (Object)","0,010 ms (-0%)","0,0 ms (0%)","3"
"         java.util.ArrayList.add (Object, Object[], int)","0,009 ms (-0%)","0,0 ms (0%)","3"
"          java.util.ArrayList.grow ()","0,007 ms (-0%)","0,0 ms (0%)","3"
"           Self time","0,006 ms (-0%)","0,0 ms (0%)","3"
"           java.util.ArrayList.grow (int)","0,0 ms (0%)","0,0 ms (0%)","3"
"          Self time","0,001 ms (-0%)","0,0 ms (0%)","3"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","3"
"        java.util.HashMap.put (Object, Object)","0,009 ms (-0%)","0,0 ms (0%)","4"
"         java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,005 ms (-0%)","0,0 ms (0%)","4"
"          Self time","0,003 ms (-0%)","0,0 ms (0%)","4"
"          java.util.HashMap.resize ()","0,001 ms (-0%)","0,0 ms (0%)","4"
"          java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","4"
"         Self time","0,002 ms (-0%)","0,0 ms (0%)","4"
"         java.util.HashMap.hash (Object)","0,001 ms (-0%)","0,0 ms (0%)","4"
"        java.util.HashMap.get (Object)","0,005 ms (-0%)","0,0 ms (0%)","4"
"         Self time","0,002 ms (-0%)","0,0 ms (0%)","4"
"         java.util.HashMap.hash (Object)","0,001 ms (-0%)","0,0 ms (0%)","4"
"         java.util.HashMap.getNode (int, Object)","0,001 ms (-0%)","0,0 ms (0%)","4"
"        io.git.nanovc.PathBase.resolve (String)","0,004 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,003 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.PathBase.isAbsolute (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"         io.git.nanovc.RepoPath.createInstance (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"          io.git.nanovc.RepoPath.createInstance (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoPath.atRoot ()","0,002 ms (-0%)","0,0 ms (0%)","2"
"        java.util.ArrayList.get (int)","0,001 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.elementData (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.PathBase.toString ()","0,0 ms (0%)","0,0 ms (0%)","4"
"        java.util.ArrayList.iterator ()","0,0 ms (0%)","0,0 ms (0%)","2"
"        io.git.nanovc.RepoPath.at (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.commit_tree (io.git.nanovc.Repo, String, String, String, java.time.ZonedDateTime, String, java.time.ZonedDateTime, String[])","0,085 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoEngine.hash_object_write (io.git.nanovc.Repo, io.git.nanovc.RepoObject)","0,082 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.RepoObject.getByteArray ()","0,042 ms (-0%)","0,0 ms (0%)","1"
"          io.git.nanovc.Commit.writeContentToStream (java.io.DataOutputStream)","0,037 ms (-0%)","0,0 ms (0%)","1"
"          Self time","0,004 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.RepoEngine.hash_object (io.git.nanovc.ObjectType, byte[])","0,023 ms (-0%)","0,0 ms (0%)","1"
"          Self time","0,021 ms (-0%)","0,0 ms (0%)","1"
"          io.git.nanovc.Hex.bytesToHex (byte[])","0,002 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.RepoObjectStore.put (io.git.nanovc.RepoObject)","0,014 ms (-0%)","0,0 ms (0%)","1"
"          java.util.HashMap.computeIfAbsent (Object, java.util.function.Function)","0,005 ms (-0%)","0,0 ms (0%)","1"
"           Self time","0,004 ms (-0%)","0,0 ms (0%)","1"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"           io.git.nanovc.RepoObjectStore.lambda$put$0 (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"           java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.HashMap.put (Object, Object)","0,003 ms (-0%)","0,0 ms (0%)","2"
"           java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,002 ms (-0%)","0,0 ms (0%)","2"
"            Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"            java.util.HashMap.resize ()","0,0 ms (0%)","0,0 ms (0%)","1"
"            java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","2"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"          Self time","0,003 ms (-0%)","0,0 ms (0%)","1"
"          java.util.HashMap.containsKey (Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"           Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"           java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.Commit.getObjectType ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.update_ref_in_heads (io.git.nanovc.Repo, String, String)","0,032 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoEngine.update_ref (io.git.nanovc.Repo, io.git.nanovc.HashReferenceCollection, String, String)","0,031 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.HashReferenceCollection.getReference (String)","0,030 ms (-0%)","0,0 ms (0%)","1"
"          Self time","0,027 ms (-0%)","0,0 ms (0%)","1"
"          java.util.ArrayList.spliterator ()","0,002 ms (-0%)","0,0 ms (0%)","1"
"          io.git.nanovc.HashReferenceCollection.lambda$getReference$0 (String, io.git.nanovc.HashReference)","0,001 ms (-0%)","0,0 ms (0%)","2"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.forEach (java.util.function.Consumer)","0,011 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoEngine.lambda$commitAll_UseCommitParentHashes$7 (boolean, io.git.nanovc.Repo, io.git.nanovc.MutableContent)","0,009 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.ImmutableContentArea.putContent (String, byte[])","0,005 ms (-0%)","0,0 ms (0%)","1"
"          io.git.nanovc.ImmutableContentArea.putContent (io.git.nanovc.ImmutableContent)","0,004 ms (-0%)","0,0 ms (0%)","1"
"           io.git.nanovc.ContentMap.putContent (io.git.nanovc.Content)","0,003 ms (-0%)","0,0 ms (0%)","1"
"            java.util.HashMap.put (Object, Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"             java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,001 ms (-0%)","0,0 ms (0%)","1"
"              java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","1"
"              Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"             java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"             Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"            Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"           Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"          Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.ContentBase.getCloneOfContentAsByteArray ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.elementAt (Object[], int)","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,008 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.ImmutableContentArea.clear ()","0,002 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.clear ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.ImmutableContentArea.freeze ()","0,0 ms (0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.resolveCommit (io.git.nanovc.Repo, String)","0,040 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.resolveCommit (io.git.nanovc.Repo, String)","0,040 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.HashReferenceCollection.getReference (String)","0,033 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,032 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"         io.git.nanovc.HashReferenceCollection.lambda$getReference$0 (String, io.git.nanovc.HashReference)","0,0 ms (0%)","0,0 ms (0%)","2"
"        Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoObjectStore.get (String)","0,001 ms (-0%)","0,0 ms (0%)","1"
"         java.util.HashMap.get (Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoObjectStore.get (io.git.nanovc.Hash)","0,001 ms (-0%)","0,0 ms (0%)","1"
"         java.util.HashMap.get (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.resolveReference (io.git.nanovc.Repo, String)","0,012 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.resolveReference (io.git.nanovc.Repo, String)","0,011 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.HashReferenceCollection.getReference (String)","0,010 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,009 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"         io.git.nanovc.HashReferenceCollection.lambda$getReference$0 (String, io.git.nanovc.HashReference)","0,0 ms (0%)","0,0 ms (0%)","2"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"      Self time","0,003 ms (-0%)","0,0 ms (0%)","1"
"     Self time","0,034 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.PorcelainCommands.checkout (String)","0,300 ms (-0%)","0,0 ms (0%)","4"
"     io.git.nanovc.RepoHandler.checkout (String, int)","0,297 ms (-0%)","0,0 ms (0%)","4"
"      io.git.nanovc.RepoEngine.checkout (io.git.nanovc.Repo, String, int)","0,293 ms (-0%)","0,0 ms (0%)","4"
"       io.git.nanovc.RepoEngine.walk_and_checkout_tree_recursively (io.git.nanovc.Repo, String, io.git.nanovc.RepoPath)","0,152 ms (-0%)","0,0 ms (0%)","4"
"        io.git.nanovc.MutableContentArea.putContent (String, byte[])","0,073 ms (-0%)","0,0 ms (0%)","8"
"         io.git.nanovc.MutableContentArea.getContent (String)","0,059 ms (-0%)","0,0 ms (0%)","8"
"          Self time","0,057 ms (-0%)","0,0 ms (0%)","8"
"          java.util.ArrayList.spliterator ()","0,002 ms (-0%)","0,0 ms (0%)","8"
"         Self time","0,010 ms (-0%)","0,0 ms (0%)","8"
"         java.util.ArrayList.add (Object)","0,003 ms (-0%)","0,0 ms (0%)","8"
"          Self time","0,002 ms (-0%)","0,0 ms (0%)","8"
"          java.util.ArrayList.add (Object, Object[], int)","0,001 ms (-0%)","0,0 ms (0%)","8"
"        Self time","0,021 ms (-0%)","0,0 ms (0%)","4"
"        io.git.nanovc.PathBase.resolve (String)","0,019 ms (-0%)","0,0 ms (0%)","4"
"         Self time","0,012 ms (-0%)","0,0 ms (0%)","4"
"         io.git.nanovc.RepoPath.createInstance (String)","0,004 ms (-0%)","0,0 ms (0%)","4"
"          Self time","0,003 ms (-0%)","0,0 ms (0%)","4"
"          io.git.nanovc.RepoPath.createInstance (String)","0,001 ms (-0%)","0,0 ms (0%)","4"
"         io.git.nanovc.PathBase.isAbsolute (String)","0,002 ms (-0%)","0,0 ms (0%)","4"
"        io.git.nanovc.ImmutableContentArea.putContent (String, byte[])","0,017 ms (-0%)","0,0 ms (0%)","4"
"         io.git.nanovc.ImmutableContentArea.putContent (io.git.nanovc.ImmutableContent)","0,012 ms (-0%)","0,0 ms (0%)","4"
"          io.git.nanovc.ContentMap.putContent (io.git.nanovc.Content)","0,009 ms (-0%)","0,0 ms (0%)","4"
"           java.util.HashMap.put (Object, Object)","0,006 ms (-0%)","0,0 ms (0%)","4"
"            java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,003 ms (-0%)","0,0 ms (0%)","4"
"             Self time","0,002 ms (-0%)","0,0 ms (0%)","4"
"             java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","4"
"            Self time","0,002 ms (-0%)","0,0 ms (0%)","4"
"            java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","4"
"           Self time","0,002 ms (-0%)","0,0 ms (0%)","4"
"          Self time","0,002 ms (-0%)","0,0 ms (0%)","4"
"         Self time","0,005 ms (-0%)","0,0 ms (0%)","4"
"        io.git.nanovc.RepoEngine.cat_file (io.git.nanovc.Repo, String)","0,013 ms (-0%)","0,0 ms (0%)","8"
"         io.git.nanovc.RepoObjectStore.get (String)","0,010 ms (-0%)","0,0 ms (0%)","8"
"          java.util.HashMap.get (Object)","0,006 ms (-0%)","0,0 ms (0%)","8"
"           Self time","0,003 ms (-0%)","0,0 ms (0%)","8"
"           java.util.HashMap.hash (Object)","0,001 ms (-0%)","0,0 ms (0%)","8"
"           java.util.HashMap.getNode (int, Object)","0,001 ms (-0%)","0,0 ms (0%)","8"
"          Self time","0,003 ms (-0%)","0,0 ms (0%)","8"
"         Self time","0,003 ms (-0%)","0,0 ms (0%)","8"
"        java.util.ArrayList.iterator ()","0,002 ms (-0%)","0,0 ms (0%)","4"
"        io.git.nanovc.PathBase.toAbsolutePath ()","0,002 ms (-0%)","0,0 ms (0%)","4"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","4"
"         io.git.nanovc.PathBase.isAbsolute (String)","0,0 ms (0%)","0,0 ms (0%)","4"
"        io.git.nanovc.PathBase.toString ()","0,0 ms (0%)","0,0 ms (0%)","4"
"       io.git.nanovc.RepoEngine.walk_rev_list_recursively (io.git.nanovc.RepoObjectStore, String, java.util.Map, java.util.List, int)","0,044 ms (-0%)","0,0 ms (0%)","4"
"        Self time","0,020 ms (-0%)","0,0 ms (0%)","4"
"        java.util.ArrayList.add (Object)","0,019 ms (-0%)","0,0 ms (0%)","4"
"         java.util.ArrayList.add (Object, Object[], int)","0,017 ms (-0%)","0,0 ms (0%)","4"
"          java.util.ArrayList.grow ()","0,014 ms (-0%)","0,0 ms (0%)","4"
"           Self time","0,010 ms (-0%)","0,0 ms (0%)","4"
"           java.util.ArrayList.grow (int)","0,004 ms (-0%)","0,0 ms (0%)","4"
"          Self time","0,002 ms (-0%)","0,0 ms (0%)","4"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","4"
"        io.git.nanovc.RepoObjectStore.get (String)","0,004 ms (-0%)","0,0 ms (0%)","4"
"         java.util.HashMap.get (Object)","0,002 ms (-0%)","0,0 ms (0%)","4"
"          Self time","0,001 ms (-0%)","0,0 ms (0%)","4"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","4"
"          java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","4"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","4"
"        io.git.nanovc.RepoEngine.walk_rev_list_recursively (io.git.nanovc.RepoObjectStore, String, java.util.Map, java.util.List, int)","0,0 ms (0%)","0,0 ms (0%)","2"
"       io.git.nanovc.RepoEngine.resolveCommit (io.git.nanovc.Repo, String)","0,035 ms (-0%)","0,0 ms (0%)","4"
"        io.git.nanovc.HashReferenceCollection.getReference (String)","0,021 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,019 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"         io.git.nanovc.HashReferenceCollection.lambda$getReference$0 (String, io.git.nanovc.HashReference)","0,0 ms (0%)","0,0 ms (0%)","2"
"        Self time","0,006 ms (-0%)","0,0 ms (0%)","4"
"        io.git.nanovc.RepoObjectStore.get (String)","0,005 ms (-0%)","0,0 ms (0%)","4"
"         java.util.HashMap.get (Object)","0,003 ms (-0%)","0,0 ms (0%)","4"
"          Self time","0,001 ms (-0%)","0,0 ms (0%)","4"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","4"
"          java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","4"
"         Self time","0,002 ms (-0%)","0,0 ms (0%)","4"
"        io.git.nanovc.RepoObjectStore.get (io.git.nanovc.Hash)","0,001 ms (-0%)","0,0 ms (0%)","1"
"         java.util.HashMap.get (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,027 ms (-0%)","0,0 ms (0%)","4"
"       io.git.nanovc.RepoEngine.clearAreas (io.git.nanovc.Repo)","0,023 ms (-0%)","0,0 ms (0%)","4"
"        io.git.nanovc.MutableContentArea.clear ()","0,011 ms (-0%)","0,0 ms (0%)","8"
"         java.util.ArrayList.clear ()","0,007 ms (-0%)","0,0 ms (0%)","8"
"         Self time","0,004 ms (-0%)","0,0 ms (0%)","8"
"        Self time","0,006 ms (-0%)","0,0 ms (0%)","4"
"        io.git.nanovc.ImmutableContentArea.clear ()","0,005 ms (-0%)","0,0 ms (0%)","4"
"         java.util.HashMap.clear ()","0,002 ms (-0%)","0,0 ms (0%)","4"
"         Self time","0,002 ms (-0%)","0,0 ms (0%)","4"
"       java.util.ArrayList.get (int)","0,005 ms (-0%)","0,0 ms (0%)","4"
"        Self time","0,004 ms (-0%)","0,0 ms (0%)","4"
"        java.util.ArrayList.elementData (int)","0,0 ms (0%)","0,0 ms (0%)","4"
"       io.git.nanovc.RepoPath.atRoot ()","0,004 ms (-0%)","0,0 ms (0%)","4"
"       io.git.nanovc.ImmutableContentArea.freeze ()","0,0 ms (0%)","0,0 ms (0%)","4"
"      Self time","0,004 ms (-0%)","0,0 ms (0%)","4"
"     Self time","0,003 ms (-0%)","0,0 ms (0%)","4"
"    io.nanovc.memory.GitInspirationOperationalDecompositionTests.computeDiffs (io.git.nanovc.ContentMap, io.git.nanovc.ContentMap)","0,271 ms (-0%)","0,0 ms (0%)","2"
"     Self time","0,203 ms (-0%)","0,0 ms (0%)","2"
"     io.nanovc.memory.GitInspirationOperationalDecompositionTests$Diff.<clinit> ()","0,038 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.ContentMap.getContent (String)","0,009 ms (-0%)","0,0 ms (0%)","2"
"      Self time","0,007 ms (-0%)","0,0 ms (0%)","2"
"      java.util.HashMap.get (Object)","0,002 ms (-0%)","0,0 ms (0%)","2"
"       Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"       java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"       java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"     java.util.HashMap.containsKey (Object)","0,006 ms (-0%)","0,0 ms (0%)","4"
"      Self time","0,004 ms (-0%)","0,0 ms (0%)","4"
"      java.util.HashMap.getNode (int, Object)","0,001 ms (-0%)","0,0 ms (0%)","4"
"      java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","4"
"     java.util.HashMap.put (Object, Object)","0,006 ms (-0%)","0,0 ms (0%)","1"
"      java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,004 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,004 ms (-0%)","0,0 ms (0%)","1"
"       java.util.HashMap.resize ()","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"      java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"     java.util.HashMap.entrySet ()","0,005 ms (-0%)","0,0 ms (0%)","4"
"    io.nanovc.memory.GitInspirationOperationalDecompositionTests.findCommonAncestor (io.git.nanovc.Commit, io.git.nanovc.Commit)","0,235 ms (-0%)","0,0 ms (0%)","1"
"     io.nanovc.memory.GitInspirationOperationalDecompositionTests.getAllAncestorHashes (io.git.nanovc.Commit)","0,189 ms (-0%)","0,0 ms (0%)","2"
"      io.nanovc.memory.GitInspirationOperationalDecompositionTests.getAllAncestorHashesRecursively (io.git.nanovc.Commit, java.util.Set)","0,151 ms (-0%)","0,0 ms (0%)","2"
"       java.util.HashMap.put (Object, Object)","0,083 ms (-0%)","0,0 ms (0%)","2"
"        java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,081 ms (-0%)","0,0 ms (0%)","2"
"         Self time","0,073 ms (-0%)","0,0 ms (0%)","2"
"         java.util.HashMap.resize ()","0,008 ms (-0%)","0,0 ms (0%)","2"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"        java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"       Self time","0,041 ms (-0%)","0,0 ms (0%)","2"
"       io.git.nanovc.RepoHandler.resolveCommit (String)","0,016 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,011 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoEngine.resolveCommit (io.git.nanovc.Repo, String)","0,005 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.RepoObjectStore.get (String)","0,003 ms (-0%)","0,0 ms (0%)","1"
"          java.util.HashMap.get (Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"           java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"       io.nanovc.memory.GitInspirationOperationalDecompositionTests.getAllAncestorHashesRecursively (io.git.nanovc.Commit, java.util.Set)","0,005 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.put (Object, Object)","0,004 ms (-0%)","0,0 ms (0%)","1"
"         java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,003 ms (-0%)","0,0 ms (0%)","1"
"         java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"       java.util.HashMap.containsKey (Object)","0,003 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"        java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,036 ms (-0%)","0,0 ms (0%)","2"
"      java.util.HashMap.tableSizeFor (int)","0,001 ms (-0%)","0,0 ms (0%)","2"
"     Self time","0,040 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.RepoHandler.resolveCommit (String)","0,003 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.resolveCommit (io.git.nanovc.Repo, String)","0,002 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoObjectStore.get (String)","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.get (Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"         java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"      Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"     java.util.HashMap.containsKey (Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"      Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"      java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"      java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"    Self time","0,039 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.RepoHandler.addAll (boolean)","0,015 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.RepoEngine.addAll (io.git.nanovc.Repo, boolean)","0,013 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.MutableContentArea.putContent (String, byte[])","0,007 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.MutableContentArea.getContent (String)","0,007 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,006 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.MutableContentArea.lambda$getContent$0 (String, io.git.nanovc.MutableContent)","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,003 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.ContentBase.getCloneOfContentAsByteArray ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"      java.util.ArrayList.iterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"     Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"   Self time","0,048 ms (-0%)","0,0 ms (0%)","1"
"  io.nanovc.memory.GitInspirationOperationalDecompositionTests.commit2 ()","0,448 ms (-0%)","0,0 ms (0%)","1"
"   io.nanovc.memory.GitInspirationOperationalDecompositionTests.commit ()","0,443 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.RepoHandler.commitAll (String, boolean)","0,416 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.RepoEngine.commitAll (io.git.nanovc.Repo, String, String, java.time.ZonedDateTime, String, java.time.ZonedDateTime, boolean)","0,381 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.commitAll_UseCommitParentHashes (io.git.nanovc.Repo, String, String, java.time.ZonedDateTime, String, java.time.ZonedDateTime, boolean, String[])","0,357 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.write_tree (io.git.nanovc.Repo)","0,259 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoEngine.hash_object_write (io.git.nanovc.Repo, io.git.nanovc.RepoObject)","0,177 ms (-0%)","0,0 ms (0%)","2"
"         io.git.nanovc.RepoObjectStore.put (io.git.nanovc.RepoObject)","0,113 ms (-0%)","0,0 ms (0%)","2"
"          java.util.HashMap.containsKey (Object)","0,092 ms (-0%)","0,0 ms (0%)","2"
"           Self time","0,090 ms (-0%)","0,0 ms (0%)","2"
"           java.util.HashMap.getNode (int, Object)","0,001 ms (-0%)","0,0 ms (0%)","2"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"          java.util.HashMap.computeIfAbsent (Object, java.util.function.Function)","0,007 ms (-0%)","0,0 ms (0%)","2"
"           Self time","0,005 ms (-0%)","0,0 ms (0%)","2"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"           io.git.nanovc.RepoObjectStore.lambda$put$0 (String)","0,0 ms (0%)","0,0 ms (0%)","2"
"           java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","2"
"          java.util.HashMap.put (Object, Object)","0,007 ms (-0%)","0,0 ms (0%)","4"
"           java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,005 ms (-0%)","0,0 ms (0%)","4"
"            java.util.HashMap.resize ()","0,002 ms (-0%)","0,0 ms (0%)","2"
"            Self time","0,002 ms (-0%)","0,0 ms (0%)","4"
"            java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","4"
"           Self time","0,001 ms (-0%)","0,0 ms (0%)","4"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","4"
"          Self time","0,006 ms (-0%)","0,0 ms (0%)","2"
"         io.git.nanovc.RepoEngine.hash_object (io.git.nanovc.ObjectType, byte[])","0,039 ms (-0%)","0,0 ms (0%)","2"
"          Self time","0,034 ms (-0%)","0,0 ms (0%)","2"
"          io.git.nanovc.Hex.bytesToHex (byte[])","0,005 ms (-0%)","0,0 ms (0%)","2"
"         io.git.nanovc.RepoObject.getByteArray ()","0,018 ms (-0%)","0,0 ms (0%)","2"
"          Self time","0,008 ms (-0%)","0,0 ms (0%)","2"
"          io.git.nanovc.Tree.writeContentToStream (java.io.DataOutputStream)","0,007 ms (-0%)","0,0 ms (0%)","1"
"           Self time","0,007 ms (-0%)","0,0 ms (0%)","1"
"           java.util.ArrayList.iterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"          io.git.nanovc.Blob.writeContentToStream (java.io.DataOutputStream)","0,003 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,004 ms (-0%)","0,0 ms (0%)","2"
"         io.git.nanovc.Blob.getObjectType ()","0,0 ms (0%)","0,0 ms (0%)","1"
"         io.git.nanovc.Tree.getObjectType ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.PathBase.splitIntoParts ()","0,036 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,029 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.subList (int, int)","0,002 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.add (Object)","0,001 ms (-0%)","0,0 ms (0%)","2"
"          java.util.ArrayList.add (Object, Object[], int)","0,001 ms (-0%)","0,0 ms (0%)","2"
"           java.util.ArrayList.grow ()","0,0 ms (0%)","0,0 ms (0%)","1"
"            java.util.ArrayList.grow (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"            Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"         java.util.ArrayList.get (int)","0,001 ms (-0%)","0,0 ms (0%)","1"
"          Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"          java.util.ArrayList.elementData (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"         io.git.nanovc.PathBase.lambda$splitIntoParts$0 (String)","0,0 ms (0%)","0,0 ms (0%)","2"
"         io.git.nanovc.PathBase.lambda$splitIntoParts$1 (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,017 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.put (Object, Object)","0,010 ms (-0%)","0,0 ms (0%)","4"
"         java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,006 ms (-0%)","0,0 ms (0%)","4"
"          java.util.HashMap.resize ()","0,003 ms (-0%)","0,0 ms (0%)","4"
"          Self time","0,002 ms (-0%)","0,0 ms (0%)","4"
"          java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","4"
"         java.util.HashMap.hash (Object)","0,001 ms (-0%)","0,0 ms (0%)","4"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","4"
"        java.util.ArrayList.add (Object)","0,006 ms (-0%)","0,0 ms (0%)","3"
"         java.util.ArrayList.add (Object, Object[], int)","0,005 ms (-0%)","0,0 ms (0%)","3"
"          java.util.ArrayList.grow ()","0,003 ms (-0%)","0,0 ms (0%)","3"
"           java.util.ArrayList.grow (int)","0,002 ms (-0%)","0,0 ms (0%)","3"
"           Self time","0,001 ms (-0%)","0,0 ms (0%)","3"
"          Self time","0,001 ms (-0%)","0,0 ms (0%)","3"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","3"
"        io.git.nanovc.PathBase.resolve (String)","0,003 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.PathBase.isAbsolute (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"         io.git.nanovc.RepoPath.createInstance (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"          io.git.nanovc.RepoPath.createInstance (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        java.util.HashMap.get (Object)","0,003 ms (-0%)","0,0 ms (0%)","4"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","4"
"         java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","4"
"         java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","4"
"        io.git.nanovc.RepoPath.atRoot ()","0,001 ms (-0%)","0,0 ms (0%)","2"
"        java.util.ArrayList.get (int)","0,001 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.elementData (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.PathBase.toString ()","0,0 ms (0%)","0,0 ms (0%)","4"
"        java.util.ArrayList.iterator ()","0,0 ms (0%)","0,0 ms (0%)","2"
"        io.git.nanovc.RepoPath.at (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.commit_tree (io.git.nanovc.Repo, String, String, String, java.time.ZonedDateTime, String, java.time.ZonedDateTime, String[])","0,061 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoEngine.hash_object_write (io.git.nanovc.Repo, io.git.nanovc.RepoObject)","0,059 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.RepoObject.getByteArray ()","0,028 ms (-0%)","0,0 ms (0%)","1"
"          io.git.nanovc.Commit.writeContentToStream (java.io.DataOutputStream)","0,026 ms (-0%)","0,0 ms (0%)","1"
"          Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.RepoEngine.hash_object (io.git.nanovc.ObjectType, byte[])","0,020 ms (-0%)","0,0 ms (0%)","1"
"          Self time","0,018 ms (-0%)","0,0 ms (0%)","1"
"          io.git.nanovc.Hex.bytesToHex (byte[])","0,002 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.RepoObjectStore.put (io.git.nanovc.RepoObject)","0,008 ms (-0%)","0,0 ms (0%)","1"
"          java.util.HashMap.computeIfAbsent (Object, java.util.function.Function)","0,002 ms (-0%)","0,0 ms (0%)","1"
"           Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"           io.git.nanovc.RepoObjectStore.lambda$put$0 (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"           java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.HashMap.put (Object, Object)","0,002 ms (-0%)","0,0 ms (0%)","2"
"           java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,001 ms (-0%)","0,0 ms (0%)","2"
"            java.util.HashMap.resize ()","0,0 ms (0%)","0,0 ms (0%)","1"
"            java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","2"
"            Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"          java.util.HashMap.containsKey (Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"           java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.Commit.getObjectType ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.forEach (java.util.function.Consumer)","0,014 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoEngine.lambda$commitAll_UseCommitParentHashes$7 (boolean, io.git.nanovc.Repo, io.git.nanovc.MutableContent)","0,011 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.ImmutableContentArea.putContent (String, byte[])","0,009 ms (-0%)","0,0 ms (0%)","1"
"          io.git.nanovc.ImmutableContentArea.putContent (io.git.nanovc.ImmutableContent)","0,007 ms (-0%)","0,0 ms (0%)","1"
"           io.git.nanovc.ContentMap.putContent (io.git.nanovc.Content)","0,006 ms (-0%)","0,0 ms (0%)","1"
"            java.util.HashMap.put (Object, Object)","0,005 ms (-0%)","0,0 ms (0%)","1"
"             java.util.HashMap.hash (Object)","0,004 ms (-0%)","0,0 ms (0%)","1"
"             java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,0 ms (0%)","0,0 ms (0%)","1"
"              java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","1"
"              Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"             Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"            Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"           Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"          Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.ContentBase.getCloneOfContentAsByteArray ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.elementAt (Object[], int)","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.update_ref_in_heads (io.git.nanovc.Repo, String, String)","0,013 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoEngine.update_ref (io.git.nanovc.Repo, io.git.nanovc.HashReferenceCollection, String, String)","0,012 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.HashReferenceCollection.getReference (String)","0,011 ms (-0%)","0,0 ms (0%)","1"
"          Self time","0,010 ms (-0%)","0,0 ms (0%)","1"
"          java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"          io.git.nanovc.HashReferenceCollection.lambda$getReference$0 (String, io.git.nanovc.HashReference)","0,0 ms (0%)","0,0 ms (0%)","2"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,007 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.ImmutableContentArea.clear ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.clear ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.ImmutableContentArea.freeze ()","0,0 ms (0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.resolveReference (io.git.nanovc.Repo, String)","0,010 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.resolveReference (io.git.nanovc.Repo, String)","0,009 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.HashReferenceCollection.getReference (String)","0,009 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,008 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"         io.git.nanovc.HashReferenceCollection.lambda$getReference$0 (String, io.git.nanovc.HashReference)","0,0 ms (0%)","0,0 ms (0%)","2"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.resolveCommit (io.git.nanovc.Repo, String)","0,010 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.resolveCommit (io.git.nanovc.Repo, String)","0,009 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.HashReferenceCollection.getReference (String)","0,004 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,003 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"         io.git.nanovc.HashReferenceCollection.lambda$getReference$0 (String, io.git.nanovc.HashReference)","0,0 ms (0%)","0,0 ms (0%)","2"
"        io.git.nanovc.RepoObjectStore.get (String)","0,002 ms (-0%)","0,0 ms (0%)","1"
"         java.util.HashMap.get (Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoObjectStore.get (io.git.nanovc.Hash)","0,001 ms (-0%)","0,0 ms (0%)","1"
"         java.util.HashMap.get (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,003 ms (-0%)","0,0 ms (0%)","1"
"     Self time","0,034 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.RepoHandler.addAll (boolean)","0,019 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.RepoEngine.addAll (io.git.nanovc.Repo, boolean)","0,019 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.MutableContentArea.putContent (String, byte[])","0,014 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.MutableContentArea.getContent (String)","0,011 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,011 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.add (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.add (Object, Object[], int)","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,003 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.ContentBase.getCloneOfContentAsByteArray ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"      java.util.ArrayList.iterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"     Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"    Self time","0,004 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.RepoHandler.getCurrentBranchName ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"     Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.RepoEngine.getCurrentBranchName (io.git.nanovc.Repo)","0,0 ms (0%)","0,0 ms (0%)","1"
"    io.git.nanovc.MutableContentArea.clear ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"     java.util.ArrayList.clear ()","0,0 ms (0%)","0,0 ms (0%)","1"
"     Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"   Self time","0,004 ms (-0%)","0,0 ms (0%)","1"
"  io.nanovc.memory.GitInspirationOperationalDecompositionTests.commit1 ()","0,447 ms (-0%)","0,0 ms (0%)","1"
"   io.nanovc.memory.GitInspirationOperationalDecompositionTests.commit ()","0,439 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.RepoHandler.commitAll (String, boolean)","0,400 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.RepoEngine.commitAll (io.git.nanovc.Repo, String, String, java.time.ZonedDateTime, String, java.time.ZonedDateTime, boolean)","0,363 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.commitAll_UseCommitParentHashes (io.git.nanovc.Repo, String, String, java.time.ZonedDateTime, String, java.time.ZonedDateTime, boolean, String[])","0,349 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.write_tree (io.git.nanovc.Repo)","0,250 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoEngine.hash_object_write (io.git.nanovc.Repo, io.git.nanovc.RepoObject)","0,136 ms (-0%)","0,0 ms (0%)","2"
"         io.git.nanovc.RepoEngine.hash_object (io.git.nanovc.ObjectType, byte[])","0,070 ms (-0%)","0,0 ms (0%)","2"
"          Self time","0,065 ms (-0%)","0,0 ms (0%)","2"
"          io.git.nanovc.Hex.bytesToHex (byte[])","0,005 ms (-0%)","0,0 ms (0%)","2"
"         io.git.nanovc.RepoObject.getByteArray ()","0,033 ms (-0%)","0,0 ms (0%)","2"
"          Self time","0,013 ms (-0%)","0,0 ms (0%)","2"
"          io.git.nanovc.Tree.writeContentToStream (java.io.DataOutputStream)","0,012 ms (-0%)","0,0 ms (0%)","1"
"           Self time","0,011 ms (-0%)","0,0 ms (0%)","1"
"           java.util.ArrayList.iterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"          io.git.nanovc.Blob.writeContentToStream (java.io.DataOutputStream)","0,007 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.RepoObjectStore.put (io.git.nanovc.RepoObject)","0,025 ms (-0%)","0,0 ms (0%)","2"
"          java.util.HashMap.computeIfAbsent (Object, java.util.function.Function)","0,008 ms (-0%)","0,0 ms (0%)","2"
"           Self time","0,006 ms (-0%)","0,0 ms (0%)","2"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"           java.util.HashMap.resize ()","0,0 ms (0%)","0,0 ms (0%)","1"
"           io.git.nanovc.RepoObjectStore.lambda$put$0 (String)","0,0 ms (0%)","0,0 ms (0%)","2"
"           java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","2"
"          java.util.HashMap.put (Object, Object)","0,007 ms (-0%)","0,0 ms (0%)","4"
"           java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,004 ms (-0%)","0,0 ms (0%)","4"
"            Self time","0,002 ms (-0%)","0,0 ms (0%)","4"
"            java.util.HashMap.resize ()","0,001 ms (-0%)","0,0 ms (0%)","3"
"            java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","4"
"           Self time","0,001 ms (-0%)","0,0 ms (0%)","4"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","4"
"          Self time","0,006 ms (-0%)","0,0 ms (0%)","2"
"          java.util.HashMap.containsKey (Object)","0,002 ms (-0%)","0,0 ms (0%)","2"
"           Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"           java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"         Self time","0,005 ms (-0%)","0,0 ms (0%)","2"
"         io.git.nanovc.Blob.getObjectType ()","0,0 ms (0%)","0,0 ms (0%)","1"
"         io.git.nanovc.Tree.getObjectType ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.PathBase.splitIntoParts ()","0,048 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,037 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.add (Object)","0,005 ms (-0%)","0,0 ms (0%)","2"
"          java.util.ArrayList.add (Object, Object[], int)","0,005 ms (-0%)","0,0 ms (0%)","2"
"           java.util.ArrayList.grow ()","0,004 ms (-0%)","0,0 ms (0%)","1"
"            Self time","0,004 ms (-0%)","0,0 ms (0%)","1"
"            java.util.ArrayList.grow (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"         java.util.ArrayList.subList (int, int)","0,002 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.get (int)","0,001 ms (-0%)","0,0 ms (0%)","1"
"          Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"          java.util.ArrayList.elementData (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"         io.git.nanovc.PathBase.lambda$splitIntoParts$0 (String)","0,0 ms (0%)","0,0 ms (0%)","2"
"         io.git.nanovc.PathBase.lambda$splitIntoParts$1 (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,026 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.put (Object, Object)","0,014 ms (-0%)","0,0 ms (0%)","4"
"         java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,009 ms (-0%)","0,0 ms (0%)","4"
"          java.util.HashMap.resize ()","0,004 ms (-0%)","0,0 ms (0%)","4"
"          Self time","0,004 ms (-0%)","0,0 ms (0%)","4"
"          java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","4"
"         java.util.HashMap.hash (Object)","0,002 ms (-0%)","0,0 ms (0%)","4"
"         Self time","0,002 ms (-0%)","0,0 ms (0%)","4"
"        java.util.ArrayList.add (Object)","0,006 ms (-0%)","0,0 ms (0%)","3"
"         java.util.ArrayList.add (Object, Object[], int)","0,005 ms (-0%)","0,0 ms (0%)","3"
"          java.util.ArrayList.grow ()","0,003 ms (-0%)","0,0 ms (0%)","3"
"           java.util.ArrayList.grow (int)","0,002 ms (-0%)","0,0 ms (0%)","3"
"           Self time","0,001 ms (-0%)","0,0 ms (0%)","3"
"          Self time","0,001 ms (-0%)","0,0 ms (0%)","3"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","3"
"        io.git.nanovc.PathBase.resolve (String)","0,006 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,005 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.RepoPath.createInstance (String)","0,001 ms (-0%)","0,0 ms (0%)","1"
"          io.git.nanovc.RepoPath.createInstance (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         io.git.nanovc.PathBase.isAbsolute (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"        java.util.HashMap.get (Object)","0,004 ms (-0%)","0,0 ms (0%)","4"
"         Self time","0,002 ms (-0%)","0,0 ms (0%)","4"
"         java.util.HashMap.hash (Object)","0,001 ms (-0%)","0,0 ms (0%)","4"
"         java.util.HashMap.getNode (int, Object)","0,001 ms (-0%)","0,0 ms (0%)","4"
"        io.git.nanovc.RepoPath.atRoot ()","0,002 ms (-0%)","0,0 ms (0%)","2"
"        io.git.nanovc.PathBase.toString ()","0,001 ms (-0%)","0,0 ms (0%)","4"
"        java.util.ArrayList.get (int)","0,001 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.elementData (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.iterator ()","0,0 ms (0%)","0,0 ms (0%)","2"
"        io.git.nanovc.RepoPath.at (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.commit_tree (io.git.nanovc.Repo, String, String, String, java.time.ZonedDateTime, String, java.time.ZonedDateTime, String[])","0,064 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoEngine.hash_object_write (io.git.nanovc.Repo, io.git.nanovc.RepoObject)","0,062 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.RepoObject.getByteArray ()","0,028 ms (-0%)","0,0 ms (0%)","1"
"          io.git.nanovc.Commit.writeContentToStream (java.io.DataOutputStream)","0,026 ms (-0%)","0,0 ms (0%)","1"
"          Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.RepoEngine.hash_object (io.git.nanovc.ObjectType, byte[])","0,021 ms (-0%)","0,0 ms (0%)","1"
"          Self time","0,019 ms (-0%)","0,0 ms (0%)","1"
"          io.git.nanovc.Hex.bytesToHex (byte[])","0,002 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.RepoObjectStore.put (io.git.nanovc.RepoObject)","0,009 ms (-0%)","0,0 ms (0%)","1"
"          java.util.HashMap.put (Object, Object)","0,003 ms (-0%)","0,0 ms (0%)","2"
"           java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,001 ms (-0%)","0,0 ms (0%)","2"
"            java.util.HashMap.resize ()","0,0 ms (0%)","0,0 ms (0%)","1"
"            java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","2"
"            Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"           Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"          java.util.HashMap.computeIfAbsent (Object, java.util.function.Function)","0,002 ms (-0%)","0,0 ms (0%)","1"
"           Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"           io.git.nanovc.RepoObjectStore.lambda$put$0 (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"           java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"          java.util.HashMap.containsKey (Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"           java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.Commit.getObjectType ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.update_ref_in_heads (io.git.nanovc.Repo, String, String)","0,015 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoEngine.update_ref (io.git.nanovc.Repo, io.git.nanovc.HashReferenceCollection, String, String)","0,014 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.HashReferenceCollection.getReference (String)","0,010 ms (-0%)","0,0 ms (0%)","1"
"          Self time","0,010 ms (-0%)","0,0 ms (0%)","1"
"          java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.add (Object)","0,002 ms (-0%)","0,0 ms (0%)","1"
"          java.util.ArrayList.add (Object, Object[], int)","0,001 ms (-0%)","0,0 ms (0%)","1"
"           java.util.ArrayList.grow ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"            java.util.ArrayList.grow (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"            Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.forEach (java.util.function.Consumer)","0,010 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoEngine.lambda$commitAll_UseCommitParentHashes$7 (boolean, io.git.nanovc.Repo, io.git.nanovc.MutableContent)","0,008 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.ImmutableContentArea.putContent (String, byte[])","0,006 ms (-0%)","0,0 ms (0%)","1"
"          io.git.nanovc.ImmutableContentArea.putContent (io.git.nanovc.ImmutableContent)","0,004 ms (-0%)","0,0 ms (0%)","1"
"           io.git.nanovc.ContentMap.putContent (io.git.nanovc.Content)","0,003 ms (-0%)","0,0 ms (0%)","1"
"            java.util.HashMap.put (Object, Object)","0,002 ms (-0%)","0,0 ms (0%)","1"
"             java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,001 ms (-0%)","0,0 ms (0%)","1"
"              java.util.HashMap.resize ()","0,0 ms (0%)","0,0 ms (0%)","1"
"              java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","1"
"              Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"             java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"             Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"            Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"           Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"          Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.ContentBase.getCloneOfContentAsByteArray ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.elementAt (Object[], int)","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,006 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.ImmutableContentArea.clear ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.clear ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.ImmutableContentArea.freeze ()","0,0 ms (0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.resolveReference (io.git.nanovc.Repo, String)","0,012 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.resolveReference (io.git.nanovc.Repo, String)","0,010 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.HashReferenceCollection.getReference (String)","0,009 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,008 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"      Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"     Self time","0,037 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.RepoHandler.addAll (boolean)","0,032 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.RepoEngine.addAll (io.git.nanovc.Repo, boolean)","0,031 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.MutableContentArea.putContent (String, byte[])","0,024 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.MutableContentArea.getContent (String)","0,017 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,017 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.add (Object)","0,004 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.add (Object, Object[], int)","0,003 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.grow ()","0,003 ms (-0%)","0,0 ms (0%)","1"
"          java.util.ArrayList.grow (int)","0,002 ms (-0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"      Self time","0,004 ms (-0%)","0,0 ms (0%)","1"
"      java.util.ArrayList.iterator ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.ContentBase.getCloneOfContentAsByteArray ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"     Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"    Self time","0,003 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.MutableContentArea.clear ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"     Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"     java.util.ArrayList.clear ()","0,0 ms (0%)","0,0 ms (0%)","1"
"   Self time","0,007 ms (-0%)","0,0 ms (0%)","1"
"  io.nanovc.memory.GitInspirationOperationalDecompositionTests.branch1 ()","0,113 ms (-0%)","0,0 ms (0%)","1"
"   io.git.nanovc.PorcelainCommands.checkout (String)","0,066 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.RepoHandler.checkout (String, int)","0,065 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.RepoEngine.checkout (io.git.nanovc.Repo, String, int)","0,064 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.walk_and_checkout_tree_recursively (io.git.nanovc.Repo, String, io.git.nanovc.RepoPath)","0,030 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.MutableContentArea.putContent (String, byte[])","0,011 ms (-0%)","0,0 ms (0%)","2"
"        io.git.nanovc.MutableContentArea.getContent (String)","0,007 ms (-0%)","0,0 ms (0%)","2"
"         Self time","0,007 ms (-0%)","0,0 ms (0%)","2"
"         java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","2"
"        Self time","0,002 ms (-0%)","0,0 ms (0%)","2"
"        java.util.ArrayList.add (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"         java.util.ArrayList.add (Object, Object[], int)","0,0 ms (0%)","0,0 ms (0%)","2"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"       io.git.nanovc.ImmutableContentArea.putContent (String, byte[])","0,005 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.ImmutableContentArea.putContent (io.git.nanovc.ImmutableContent)","0,003 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.ContentMap.putContent (io.git.nanovc.Content)","0,002 ms (-0%)","0,0 ms (0%)","1"
"          java.util.HashMap.put (Object, Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"           java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,0 ms (0%)","0,0 ms (0%)","1"
"            java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","1"
"            Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,005 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.PathBase.resolve (String)","0,004 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoPath.createInstance (String)","0,001 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.RepoPath.createInstance (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.PathBase.isAbsolute (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.cat_file (io.git.nanovc.Repo, String)","0,003 ms (-0%)","0,0 ms (0%)","2"
"        io.git.nanovc.RepoObjectStore.get (String)","0,002 ms (-0%)","0,0 ms (0%)","2"
"         java.util.HashMap.get (Object)","0,001 ms (-0%)","0,0 ms (0%)","2"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"          java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"       java.util.ArrayList.iterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.PathBase.toAbsolutePath ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.PathBase.isAbsolute (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.PathBase.toString ()","0,0 ms (0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.resolveCommit (io.git.nanovc.Repo, String)","0,011 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.HashReferenceCollection.getReference (String)","0,005 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,004 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.HashReferenceCollection.lambda$getReference$0 (String, io.git.nanovc.HashReference)","0,0 ms (0%)","0,0 ms (0%)","2"
"       io.git.nanovc.RepoObjectStore.get (String)","0,002 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.get (Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"         java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoObjectStore.get (io.git.nanovc.Hash)","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.get (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.walk_rev_list_recursively (io.git.nanovc.RepoObjectStore, String, java.util.Map, java.util.List, int)","0,009 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,005 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.add (Object)","0,002 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.add (Object, Object[], int)","0,001 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.grow ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"          java.util.ArrayList.grow (int)","0,001 ms (-0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoObjectStore.get (String)","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.get (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,006 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.clearAreas (io.git.nanovc.Repo)","0,005 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.MutableContentArea.clear ()","0,001 ms (-0%)","0,0 ms (0%)","2"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"        java.util.ArrayList.clear ()","0,0 ms (0%)","0,0 ms (0%)","2"
"       io.git.nanovc.ImmutableContentArea.clear ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.clear ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"      java.util.ArrayList.get (int)","0,001 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.elementData (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoPath.atRoot ()","0,0 ms (0%)","0,0 ms (0%)","1"
"      io.git.nanovc.ImmutableContentArea.freeze ()","0,0 ms (0%)","0,0 ms (0%)","1"
"     Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"    Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"   io.git.nanovc.RepoHandler.branch (String)","0,034 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.RepoEngine.branch (io.git.nanovc.Repo, String)","0,034 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.RepoEngine.resolveReference (io.git.nanovc.Repo, String)","0,018 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.resolveReference (io.git.nanovc.Repo, String)","0,017 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.HashReferenceCollection.getReference (String)","0,016 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,014 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.HashReferenceCollection.lambda$getReference$0 (String, io.git.nanovc.HashReference)","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"      Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.RepoEngine.update_ref_in_heads (io.git.nanovc.Repo, String, String)","0,014 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.update_ref (io.git.nanovc.Repo, io.git.nanovc.HashReferenceCollection, String, String)","0,013 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.HashReferenceCollection.getReference (String)","0,010 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,010 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.HashReferenceCollection.lambda$getReference$0 (String, io.git.nanovc.HashReference)","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.add (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.add (Object, Object[], int)","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"     Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"    Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"   Self time","0,012 ms (-0%)","0,0 ms (0%)","1"
"  io.nanovc.memory.GitInspirationOperationalDecompositionTests.newContent ()","0,044 ms (-0%)","0,0 ms (0%)","1"
"   io.git.nanovc.RepoHandler.putWorkingAreaContent (String, byte[])","0,037 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.RepoEngine.putWorkingAreaContent (io.git.nanovc.Repo, String, byte[])","0,035 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.MutableContentArea.putContent (String, byte[])","0,034 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.MutableContentArea.getContent (String)","0,025 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,023 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.spliterator ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"      java.util.ArrayList.add (Object)","0,005 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.add (Object, Object[], int)","0,004 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.grow ()","0,003 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.grow (int)","0,002 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,003 ms (-0%)","0,0 ms (0%)","1"
"     Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"    Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"   Self time","0,006 ms (-0%)","0,0 ms (0%)","1"
"  Self time","0,044 ms (-0%)","0,0 ms (0%)","1"
"  io.nanovc.memory.GitInspirationOperationalDecompositionTests.modifyContent ()","0,009 ms (-0%)","0,0 ms (0%)","1"
"   io.git.nanovc.RepoHandler.putWorkingAreaContent (String, byte[])","0,006 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.RepoEngine.putWorkingAreaContent (io.git.nanovc.Repo, String, byte[])","0,006 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.MutableContentArea.putContent (String, byte[])","0,006 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.MutableContentArea.getContent (String)","0,005 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,004 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.MutableContentArea.lambda$getContent$0 (String, io.git.nanovc.MutableContent)","0,001 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"     Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"    Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"   Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
" io.nanovc.memory.OperationalDecompositionTests.NCBMC ()","3,9 ms (-0%)","0,0 ms (0%)","1"
"  io.nanovc.memory.GitInspirationOperationalDecompositionTests.commit ()","2,93 ms (-0%)","0,0 ms (0%)","2"
"   io.git.nanovc.RepoHandler.commitAll (String, boolean)","2,86 ms (-0%)","0,0 ms (0%)","2"
"    io.git.nanovc.RepoEngine.commitAll (io.git.nanovc.Repo, String, String, java.time.ZonedDateTime, String, java.time.ZonedDateTime, boolean)","2,81 ms (-0%)","0,0 ms (0%)","2"
"     io.git.nanovc.RepoEngine.commitAll_UseCommitParentHashes (io.git.nanovc.Repo, String, String, java.time.ZonedDateTime, String, java.time.ZonedDateTime, boolean, String[])","2,77 ms (-0%)","0,0 ms (0%)","2"
"      io.git.nanovc.RepoEngine.commit_tree (io.git.nanovc.Repo, String, String, String, java.time.ZonedDateTime, String, java.time.ZonedDateTime, String[])","2,31 ms (-0%)","0,0 ms (0%)","2"
"       io.git.nanovc.RepoEngine.hash_object_write (io.git.nanovc.Repo, io.git.nanovc.RepoObject)","2,31 ms (-0%)","0,0 ms (0%)","2"
"        io.git.nanovc.RepoEngine.hash_object (io.git.nanovc.ObjectType, byte[])","2,22 ms (-0%)","0,0 ms (0%)","2"
"         Self time","2,21 ms (-0%)","0,0 ms (0%)","2"
"         io.git.nanovc.Hex.bytesToHex (byte[])","0,009 ms (-0%)","0,0 ms (0%)","2"
"        io.git.nanovc.RepoObject.getByteArray ()","0,060 ms (-0%)","0,0 ms (0%)","2"
"         io.git.nanovc.Commit.writeContentToStream (java.io.DataOutputStream)","0,055 ms (-0%)","0,0 ms (0%)","2"
"         Self time","0,004 ms (-0%)","0,0 ms (0%)","2"
"        io.git.nanovc.RepoObjectStore.put (io.git.nanovc.RepoObject)","0,027 ms (-0%)","0,0 ms (0%)","2"
"         java.util.HashMap.computeIfAbsent (Object, java.util.function.Function)","0,009 ms (-0%)","0,0 ms (0%)","2"
"          Self time","0,006 ms (-0%)","0,0 ms (0%)","2"
"          io.git.nanovc.RepoObjectStore.lambda$put$0 (String)","0,001 ms (-0%)","0,0 ms (0%)","2"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"          java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","2"
"         java.util.HashMap.put (Object, Object)","0,007 ms (-0%)","0,0 ms (0%)","4"
"          java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,005 ms (-0%)","0,0 ms (0%)","4"
"           java.util.HashMap.resize ()","0,002 ms (-0%)","0,0 ms (0%)","2"
"           Self time","0,002 ms (-0%)","0,0 ms (0%)","4"
"           java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","4"
"          Self time","0,001 ms (-0%)","0,0 ms (0%)","4"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","4"
"         Self time","0,006 ms (-0%)","0,0 ms (0%)","2"
"         java.util.HashMap.containsKey (Object)","0,003 ms (-0%)","0,0 ms (0%)","2"
"          Self time","0,002 ms (-0%)","0,0 ms (0%)","2"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"          java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"        Self time","0,003 ms (-0%)","0,0 ms (0%)","2"
"        io.git.nanovc.Commit.getObjectType ()","0,0 ms (0%)","0,0 ms (0%)","2"
"       Self time","0,003 ms (-0%)","0,0 ms (0%)","2"
"      io.git.nanovc.RepoEngine.write_tree (io.git.nanovc.Repo)","0,382 ms (-0%)","0,0 ms (0%)","2"
"       io.git.nanovc.RepoEngine.hash_object_write (io.git.nanovc.Repo, io.git.nanovc.RepoObject)","0,189 ms (-0%)","0,0 ms (0%)","4"
"        io.git.nanovc.RepoEngine.hash_object (io.git.nanovc.ObjectType, byte[])","0,090 ms (-0%)","0,0 ms (0%)","4"
"         Self time","0,081 ms (-0%)","0,0 ms (0%)","4"
"         io.git.nanovc.Hex.bytesToHex (byte[])","0,009 ms (-0%)","0,0 ms (0%)","4"
"        io.git.nanovc.RepoObject.getByteArray ()","0,049 ms (-0%)","0,0 ms (0%)","4"
"         io.git.nanovc.Tree.writeContentToStream (java.io.DataOutputStream)","0,030 ms (-0%)","0,0 ms (0%)","2"
"          Self time","0,029 ms (-0%)","0,0 ms (0%)","2"
"          java.util.ArrayList.iterator ()","0,0 ms (0%)","0,0 ms (0%)","2"
"         Self time","0,013 ms (-0%)","0,0 ms (0%)","4"
"         io.git.nanovc.Blob.writeContentToStream (java.io.DataOutputStream)","0,005 ms (-0%)","0,0 ms (0%)","2"
"        io.git.nanovc.RepoObjectStore.put (io.git.nanovc.RepoObject)","0,042 ms (-0%)","0,0 ms (0%)","4"
"         java.util.HashMap.computeIfAbsent (Object, java.util.function.Function)","0,015 ms (-0%)","0,0 ms (0%)","4"
"          Self time","0,010 ms (-0%)","0,0 ms (0%)","4"
"          io.git.nanovc.RepoObjectStore.lambda$put$0 (String)","0,003 ms (-0%)","0,0 ms (0%)","4"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","4"
"          java.util.HashMap.resize ()","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","4"
"         java.util.HashMap.put (Object, Object)","0,012 ms (-0%)","0,0 ms (0%)","8"
"          java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,007 ms (-0%)","0,0 ms (0%)","8"
"           Self time","0,003 ms (-0%)","0,0 ms (0%)","8"
"           java.util.HashMap.resize ()","0,002 ms (-0%)","0,0 ms (0%)","5"
"           java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,001 ms (-0%)","0,0 ms (0%)","8"
"          Self time","0,003 ms (-0%)","0,0 ms (0%)","8"
"          java.util.HashMap.hash (Object)","0,001 ms (-0%)","0,0 ms (0%)","8"
"         Self time","0,009 ms (-0%)","0,0 ms (0%)","4"
"         java.util.HashMap.containsKey (Object)","0,004 ms (-0%)","0,0 ms (0%)","4"
"          Self time","0,003 ms (-0%)","0,0 ms (0%)","4"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","4"
"          java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","4"
"        Self time","0,007 ms (-0%)","0,0 ms (0%)","4"
"        io.git.nanovc.Blob.getObjectType ()","0,0 ms (0%)","0,0 ms (0%)","2"
"        io.git.nanovc.Tree.getObjectType ()","0,0 ms (0%)","0,0 ms (0%)","2"
"       io.git.nanovc.PathBase.splitIntoParts ()","0,072 ms (-0%)","0,0 ms (0%)","2"
"        Self time","0,057 ms (-0%)","0,0 ms (0%)","2"
"        java.util.ArrayList.add (Object)","0,005 ms (-0%)","0,0 ms (0%)","4"
"         java.util.ArrayList.add (Object, Object[], int)","0,004 ms (-0%)","0,0 ms (0%)","4"
"          java.util.ArrayList.grow ()","0,003 ms (-0%)","0,0 ms (0%)","2"
"           java.util.ArrayList.grow (int)","0,002 ms (-0%)","0,0 ms (0%)","2"
"           Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"          Self time","0,001 ms (-0%)","0,0 ms (0%)","4"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","4"
"        java.util.ArrayList.subList (int, int)","0,003 ms (-0%)","0,0 ms (0%)","2"
"        java.util.ArrayList.get (int)","0,002 ms (-0%)","0,0 ms (0%)","2"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"         java.util.ArrayList.elementData (int)","0,0 ms (0%)","0,0 ms (0%)","2"
"        io.git.nanovc.PathBase.lambda$splitIntoParts$0 (String)","0,001 ms (-0%)","0,0 ms (0%)","4"
"        io.git.nanovc.PathBase.lambda$splitIntoParts$1 (int)","0,001 ms (-0%)","0,0 ms (0%)","2"
"       Self time","0,038 ms (-0%)","0,0 ms (0%)","2"
"       java.util.ArrayList.add (Object)","0,037 ms (-0%)","0,0 ms (0%)","6"
"        java.util.ArrayList.add (Object, Object[], int)","0,035 ms (-0%)","0,0 ms (0%)","6"
"         Self time","0,020 ms (-0%)","0,0 ms (0%)","6"
"         java.util.ArrayList.grow ()","0,015 ms (-0%)","0,0 ms (0%)","6"
"          java.util.ArrayList.grow (int)","0,012 ms (-0%)","0,0 ms (0%)","6"
"          Self time","0,002 ms (-0%)","0,0 ms (0%)","6"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","6"
"       java.util.HashMap.put (Object, Object)","0,019 ms (-0%)","0,0 ms (0%)","8"
"        java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,012 ms (-0%)","0,0 ms (0%)","8"
"         java.util.HashMap.resize ()","0,005 ms (-0%)","0,0 ms (0%)","8"
"         Self time","0,005 ms (-0%)","0,0 ms (0%)","8"
"         java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,001 ms (-0%)","0,0 ms (0%)","8"
"        java.util.HashMap.hash (Object)","0,003 ms (-0%)","0,0 ms (0%)","8"
"        Self time","0,003 ms (-0%)","0,0 ms (0%)","8"
"       io.git.nanovc.PathBase.resolve (String)","0,008 ms (-0%)","0,0 ms (0%)","2"
"        Self time","0,005 ms (-0%)","0,0 ms (0%)","2"
"        io.git.nanovc.RepoPath.createInstance (String)","0,001 ms (-0%)","0,0 ms (0%)","2"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"         io.git.nanovc.RepoPath.createInstance (String)","0,0 ms (0%)","0,0 ms (0%)","2"
"        io.git.nanovc.PathBase.isAbsolute (String)","0,0 ms (0%)","0,0 ms (0%)","2"
"       java.util.HashMap.get (Object)","0,006 ms (-0%)","0,0 ms (0%)","8"
"        Self time","0,003 ms (-0%)","0,0 ms (0%)","8"
"        java.util.HashMap.hash (Object)","0,001 ms (-0%)","0,0 ms (0%)","8"
"        java.util.HashMap.getNode (int, Object)","0,001 ms (-0%)","0,0 ms (0%)","8"
"       io.git.nanovc.RepoPath.atRoot ()","0,002 ms (-0%)","0,0 ms (0%)","4"
"       java.util.ArrayList.iterator ()","0,002 ms (-0%)","0,0 ms (0%)","4"
"       io.git.nanovc.PathBase.toString ()","0,001 ms (-0%)","0,0 ms (0%)","8"
"       io.git.nanovc.RepoPath.at (String)","0,001 ms (-0%)","0,0 ms (0%)","2"
"       java.util.ArrayList.get (int)","0,001 ms (-0%)","0,0 ms (0%)","2"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"        java.util.ArrayList.elementData (int)","0,0 ms (0%)","0,0 ms (0%)","2"
"      io.git.nanovc.RepoEngine.update_ref_in_heads (io.git.nanovc.Repo, String, String)","0,041 ms (-0%)","0,0 ms (0%)","2"
"       io.git.nanovc.RepoEngine.update_ref (io.git.nanovc.Repo, io.git.nanovc.HashReferenceCollection, String, String)","0,040 ms (-0%)","0,0 ms (0%)","2"
"        io.git.nanovc.HashReferenceCollection.getReference (String)","0,034 ms (-0%)","0,0 ms (0%)","2"
"         Self time","0,032 ms (-0%)","0,0 ms (0%)","2"
"         java.util.ArrayList.spliterator ()","0,001 ms (-0%)","0,0 ms (0%)","2"
"         io.git.nanovc.HashReferenceCollection.lambda$getReference$0 (String, io.git.nanovc.HashReference)","0,001 ms (-0%)","0,0 ms (0%)","2"
"        Self time","0,003 ms (-0%)","0,0 ms (0%)","2"
"        java.util.ArrayList.add (Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.add (Object, Object[], int)","0,001 ms (-0%)","0,0 ms (0%)","1"
"          java.util.ArrayList.grow ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"           java.util.ArrayList.grow (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"      java.util.ArrayList.forEach (java.util.function.Consumer)","0,016 ms (-0%)","0,0 ms (0%)","2"
"       io.git.nanovc.RepoEngine.lambda$commitAll_UseCommitParentHashes$7 (boolean, io.git.nanovc.Repo, io.git.nanovc.MutableContent)","0,012 ms (-0%)","0,0 ms (0%)","2"
"        io.git.nanovc.ImmutableContentArea.putContent (String, byte[])","0,008 ms (-0%)","0,0 ms (0%)","2"
"         io.git.nanovc.ImmutableContentArea.putContent (io.git.nanovc.ImmutableContent)","0,006 ms (-0%)","0,0 ms (0%)","2"
"          io.git.nanovc.ContentMap.putContent (io.git.nanovc.Content)","0,004 ms (-0%)","0,0 ms (0%)","2"
"           java.util.HashMap.put (Object, Object)","0,002 ms (-0%)","0,0 ms (0%)","2"
"            java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,001 ms (-0%)","0,0 ms (0%)","2"
"             java.util.HashMap.resize ()","0,0 ms (0%)","0,0 ms (0%)","1"
"             java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","2"
"             Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"            java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"            Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"           Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"          Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"         Self time","0,002 ms (-0%)","0,0 ms (0%)","2"
"        Self time","0,002 ms (-0%)","0,0 ms (0%)","2"
"        io.git.nanovc.ContentBase.getCloneOfContentAsByteArray ()","0,001 ms (-0%)","0,0 ms (0%)","2"
"       Self time","0,003 ms (-0%)","0,0 ms (0%)","2"
"       java.util.ArrayList.elementAt (Object[], int)","0,0 ms (0%)","0,0 ms (0%)","2"
"      Self time","0,012 ms (-0%)","0,0 ms (0%)","2"
"      io.git.nanovc.ImmutableContentArea.clear ()","0,006 ms (-0%)","0,0 ms (0%)","2"
"       Self time","0,005 ms (-0%)","0,0 ms (0%)","2"
"       java.util.HashMap.clear ()","0,001 ms (-0%)","0,0 ms (0%)","2"
"      io.git.nanovc.ImmutableContentArea.freeze ()","0,0 ms (0%)","0,0 ms (0%)","2"
"     io.git.nanovc.RepoEngine.resolveReference (io.git.nanovc.Repo, String)","0,018 ms (-0%)","0,0 ms (0%)","2"
"      io.git.nanovc.RepoEngine.resolveReference (io.git.nanovc.Repo, String)","0,015 ms (-0%)","0,0 ms (0%)","2"
"       io.git.nanovc.HashReferenceCollection.getReference (String)","0,013 ms (-0%)","0,0 ms (0%)","2"
"        Self time","0,011 ms (-0%)","0,0 ms (0%)","2"
"        java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","2"
"        io.git.nanovc.HashReferenceCollection.lambda$getReference$0 (String, io.git.nanovc.HashReference)","0,0 ms (0%)","0,0 ms (0%)","2"
"       Self time","0,002 ms (-0%)","0,0 ms (0%)","2"
"      Self time","0,002 ms (-0%)","0,0 ms (0%)","2"
"     io.git.nanovc.RepoEngine.resolveCommit (io.git.nanovc.Repo, String)","0,009 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.resolveCommit (io.git.nanovc.Repo, String)","0,008 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.HashReferenceCollection.getReference (String)","0,004 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,003 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.HashReferenceCollection.lambda$getReference$0 (String, io.git.nanovc.HashReference)","0,0 ms (0%)","0,0 ms (0%)","2"
"       io.git.nanovc.RepoObjectStore.get (String)","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.get (Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"         java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoObjectStore.get (io.git.nanovc.Hash)","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.get (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"      Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"     Self time","0,005 ms (-0%)","0,0 ms (0%)","2"
"    Self time","0,054 ms (-0%)","0,0 ms (0%)","2"
"   Self time","0,030 ms (-0%)","0,0 ms (0%)","2"
"   io.git.nanovc.RepoHandler.addAll (boolean)","0,026 ms (-0%)","0,0 ms (0%)","2"
"    io.git.nanovc.RepoEngine.addAll (io.git.nanovc.Repo, boolean)","0,024 ms (-0%)","0,0 ms (0%)","2"
"     io.git.nanovc.MutableContentArea.putContent (String, byte[])","0,017 ms (-0%)","0,0 ms (0%)","2"
"      io.git.nanovc.MutableContentArea.getContent (String)","0,011 ms (-0%)","0,0 ms (0%)","2"
"       Self time","0,011 ms (-0%)","0,0 ms (0%)","2"
"       java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","2"
"      java.util.ArrayList.add (Object)","0,002 ms (-0%)","0,0 ms (0%)","2"
"       java.util.ArrayList.add (Object, Object[], int)","0,001 ms (-0%)","0,0 ms (0%)","2"
"        java.util.ArrayList.grow ()","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.grow (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"       Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"      Self time","0,002 ms (-0%)","0,0 ms (0%)","2"
"     Self time","0,004 ms (-0%)","0,0 ms (0%)","2"
"     io.git.nanovc.ContentBase.getCloneOfContentAsByteArray ()","0,002 ms (-0%)","0,0 ms (0%)","2"
"     java.util.ArrayList.iterator ()","0,0 ms (0%)","0,0 ms (0%)","2"
"    Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"   io.git.nanovc.RepoHandler.getCurrentBranchName ()","0,011 ms (-0%)","0,0 ms (0%)","1"
"    Self time","0,010 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.RepoEngine.getCurrentBranchName (io.git.nanovc.Repo)","0,0 ms (0%)","0,0 ms (0%)","1"
"   io.git.nanovc.MutableContentArea.clear ()","0,002 ms (-0%)","0,0 ms (0%)","2"
"    java.util.ArrayList.clear ()","0,001 ms (-0%)","0,0 ms (0%)","2"
"    Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"  io.nanovc.memory.GitInspirationOperationalDecompositionTests.branch ()","0,116 ms (-0%)","0,0 ms (0%)","1"
"   io.git.nanovc.PorcelainCommands.checkout (String)","0,094 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.RepoHandler.checkout (String, int)","0,094 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.RepoEngine.checkout (io.git.nanovc.Repo, String, int)","0,093 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.walk_and_checkout_tree_recursively (io.git.nanovc.Repo, String, io.git.nanovc.RepoPath)","0,068 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.MutableContentArea.putContent (String, byte[])","0,038 ms (-0%)","0,0 ms (0%)","2"
"        io.git.nanovc.MutableContentArea.getContent (String)","0,026 ms (-0%)","0,0 ms (0%)","2"
"         Self time","0,026 ms (-0%)","0,0 ms (0%)","2"
"         java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","2"
"        java.util.ArrayList.add (Object)","0,010 ms (-0%)","0,0 ms (0%)","2"
"         Self time","0,009 ms (-0%)","0,0 ms (0%)","2"
"         java.util.ArrayList.add (Object, Object[], int)","0,0 ms (0%)","0,0 ms (0%)","2"
"        Self time","0,002 ms (-0%)","0,0 ms (0%)","2"
"       Self time","0,013 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.PathBase.resolve (String)","0,007 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoPath.createInstance (String)","0,005 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,004 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.RepoPath.createInstance (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.PathBase.isAbsolute (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.cat_file (io.git.nanovc.Repo, String)","0,003 ms (-0%)","0,0 ms (0%)","2"
"        io.git.nanovc.RepoObjectStore.get (String)","0,002 ms (-0%)","0,0 ms (0%)","2"
"         java.util.HashMap.get (Object)","0,001 ms (-0%)","0,0 ms (0%)","2"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"          java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"       io.git.nanovc.ImmutableContentArea.putContent (String, byte[])","0,003 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.ImmutableContentArea.putContent (io.git.nanovc.ImmutableContent)","0,002 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.ContentMap.putContent (io.git.nanovc.Content)","0,002 ms (-0%)","0,0 ms (0%)","1"
"          java.util.HashMap.put (Object, Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"           java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,0 ms (0%)","0,0 ms (0%)","1"
"            java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","1"
"            Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.iterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.PathBase.toAbsolutePath ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.PathBase.isAbsolute (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.PathBase.toString ()","0,0 ms (0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.resolveCommit (io.git.nanovc.Repo, String)","0,007 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.HashReferenceCollection.getReference (String)","0,003 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,003 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.HashReferenceCollection.lambda$getReference$0 (String, io.git.nanovc.HashReference)","0,0 ms (0%)","0,0 ms (0%)","2"
"       io.git.nanovc.RepoObjectStore.get (io.git.nanovc.Hash)","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.get (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoObjectStore.get (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"        java.util.HashMap.get (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.walk_rev_list_recursively (io.git.nanovc.RepoObjectStore, String, java.util.Map, java.util.List, int)","0,006 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,004 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.add (Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.add (Object, Object[], int)","0,001 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.grow ()","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.ArrayList.grow (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoObjectStore.get (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"        java.util.HashMap.get (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,005 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.clearAreas (io.git.nanovc.Repo)","0,003 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.MutableContentArea.clear ()","0,001 ms (-0%)","0,0 ms (0%)","2"
"        java.util.ArrayList.clear ()","0,0 ms (0%)","0,0 ms (0%)","2"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"       io.git.nanovc.ImmutableContentArea.clear ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.clear ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"      java.util.ArrayList.get (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.elementData (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoPath.atRoot ()","0,0 ms (0%)","0,0 ms (0%)","1"
"      io.git.nanovc.ImmutableContentArea.freeze ()","0,0 ms (0%)","0,0 ms (0%)","1"
"     Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"    Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"   io.git.nanovc.RepoHandler.branch (String)","0,019 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.RepoEngine.branch (io.git.nanovc.Repo, String)","0,019 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.RepoEngine.resolveReference (io.git.nanovc.Repo, String)","0,013 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.resolveReference (io.git.nanovc.Repo, String)","0,012 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.HashReferenceCollection.getReference (String)","0,011 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,010 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.HashReferenceCollection.lambda$getReference$0 (String, io.git.nanovc.HashReference)","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.RepoEngine.update_ref_in_heads (io.git.nanovc.Repo, String, String)","0,005 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.update_ref (io.git.nanovc.Repo, io.git.nanovc.HashReferenceCollection, String, String)","0,004 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.HashReferenceCollection.getReference (String)","0,003 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.HashReferenceCollection.lambda$getReference$0 (String, io.git.nanovc.HashReference)","0,0 ms (0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.add (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.add (Object, Object[], int)","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"     Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"    Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"   Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"  io.nanovc.memory.GitInspirationOperationalDecompositionTests.newContent ()","0,026 ms (-0%)","0,0 ms (0%)","1"
"   io.git.nanovc.RepoHandler.putWorkingAreaContent (String, byte[])","0,022 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.RepoEngine.putWorkingAreaContent (io.git.nanovc.Repo, String, byte[])","0,021 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.MutableContentArea.putContent (String, byte[])","0,020 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.MutableContentArea.getContent (String)","0,014 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,013 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"      java.util.ArrayList.add (Object)","0,003 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.add (Object, Object[], int)","0,002 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.grow ()","0,002 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.grow (int)","0,001 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"     Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"    Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"   Self time","0,004 ms (-0%)","0,0 ms (0%)","1"
"  io.nanovc.memory.GitInspirationOperationalDecompositionTests.modifyContent ()","0,008 ms (-0%)","0,0 ms (0%)","1"
"   io.git.nanovc.RepoHandler.putWorkingAreaContent (String, byte[])","0,006 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.RepoEngine.putWorkingAreaContent (io.git.nanovc.Repo, String, byte[])","0,005 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.MutableContentArea.putContent (String, byte[])","0,005 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.MutableContentArea.getContent (String)","0,004 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,004 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.MutableContentArea.lambda$getContent$0 (String, io.git.nanovc.MutableContent)","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"     Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"    Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"   Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"  Self time","0,005 ms (-0%)","0,0 ms (0%)","1"
" io.nanovc.memory.OperationalDecompositionTests.NC1B1M1C2B2M1C3G2_3__1 ()","3,4 ms (-0%)","0,0 ms (0%)","1"
"  io.nanovc.memory.GitInspirationOperationalDecompositionTests.merge3_2__1 ()","1,19 ms (-0%)","0,0 ms (0%)","1"
"   io.nanovc.memory.GitInspirationOperationalDecompositionTests.mergeCommitsIntoBranch (io.git.nanovc.Commit, io.git.nanovc.Commit, String, String)","1,18 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.RepoHandler.commitAll (String, boolean)","0,716 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.RepoEngine.commitAll (io.git.nanovc.Repo, String, String, java.time.ZonedDateTime, String, java.time.ZonedDateTime, boolean)","0,688 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.commitAll_UseCommitParentHashes (io.git.nanovc.Repo, String, String, java.time.ZonedDateTime, String, java.time.ZonedDateTime, boolean, String[])","0,673 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.commit_tree (io.git.nanovc.Repo, String, String, String, java.time.ZonedDateTime, String, java.time.ZonedDateTime, String[])","0,368 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoEngine.hash_object_write (io.git.nanovc.Repo, io.git.nanovc.RepoObject)","0,366 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.RepoObject.getByteArray ()","0,325 ms (-0%)","0,0 ms (0%)","1"
"          io.git.nanovc.Commit.writeContentToStream (java.io.DataOutputStream)","0,320 ms (-0%)","0,0 ms (0%)","1"
"          Self time","0,005 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.RepoEngine.hash_object (io.git.nanovc.ObjectType, byte[])","0,024 ms (-0%)","0,0 ms (0%)","1"
"          Self time","0,022 ms (-0%)","0,0 ms (0%)","1"
"          io.git.nanovc.Hex.bytesToHex (byte[])","0,002 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.RepoObjectStore.put (io.git.nanovc.RepoObject)","0,012 ms (-0%)","0,0 ms (0%)","1"
"          java.util.HashMap.computeIfAbsent (Object, java.util.function.Function)","0,003 ms (-0%)","0,0 ms (0%)","1"
"           Self time","0,003 ms (-0%)","0,0 ms (0%)","1"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"           io.git.nanovc.RepoObjectStore.lambda$put$0 (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"           java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.HashMap.put (Object, Object)","0,003 ms (-0%)","0,0 ms (0%)","2"
"           java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,002 ms (-0%)","0,0 ms (0%)","2"
"            Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"            java.util.HashMap.resize ()","0,0 ms (0%)","0,0 ms (0%)","1"
"            java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","2"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"          Self time","0,003 ms (-0%)","0,0 ms (0%)","1"
"          java.util.HashMap.containsKey (Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"           Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"           java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.Commit.getObjectType ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.write_tree (io.git.nanovc.Repo)","0,267 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoEngine.hash_object_write (io.git.nanovc.Repo, io.git.nanovc.RepoObject)","0,204 ms (-0%)","0,0 ms (0%)","2"
"         io.git.nanovc.RepoEngine.hash_object (io.git.nanovc.ObjectType, byte[])","0,181 ms (-0%)","0,0 ms (0%)","2"
"          Self time","0,175 ms (-0%)","0,0 ms (0%)","2"
"          io.git.nanovc.Hex.bytesToHex (byte[])","0,006 ms (-0%)","0,0 ms (0%)","2"
"         io.git.nanovc.RepoObject.getByteArray ()","0,013 ms (-0%)","0,0 ms (0%)","2"
"          io.git.nanovc.Tree.writeContentToStream (java.io.DataOutputStream)","0,005 ms (-0%)","0,0 ms (0%)","1"
"           Self time","0,005 ms (-0%)","0,0 ms (0%)","1"
"           java.util.ArrayList.iterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,005 ms (-0%)","0,0 ms (0%)","2"
"          io.git.nanovc.Blob.writeContentToStream (java.io.DataOutputStream)","0,003 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.RepoObjectStore.put (io.git.nanovc.RepoObject)","0,005 ms (-0%)","0,0 ms (0%)","2"
"          java.util.HashMap.containsKey (Object)","0,003 ms (-0%)","0,0 ms (0%)","2"
"           Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"           java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"          Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"         Self time","0,003 ms (-0%)","0,0 ms (0%)","2"
"         io.git.nanovc.Blob.getObjectType ()","0,0 ms (0%)","0,0 ms (0%)","1"
"         io.git.nanovc.Tree.getObjectType ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.PathBase.splitIntoParts ()","0,032 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,026 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.add (Object)","0,001 ms (-0%)","0,0 ms (0%)","2"
"          java.util.ArrayList.add (Object, Object[], int)","0,0 ms (0%)","0,0 ms (0%)","2"
"           java.util.ArrayList.grow ()","0,0 ms (0%)","0,0 ms (0%)","1"
"            java.util.ArrayList.grow (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"            Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"         java.util.ArrayList.subList (int, int)","0,001 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.get (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.ArrayList.elementData (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         io.git.nanovc.PathBase.lambda$splitIntoParts$0 (String)","0,0 ms (0%)","0,0 ms (0%)","2"
"         io.git.nanovc.PathBase.lambda$splitIntoParts$1 (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,012 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.put (Object, Object)","0,005 ms (-0%)","0,0 ms (0%)","4"
"         java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,003 ms (-0%)","0,0 ms (0%)","4"
"          Self time","0,001 ms (-0%)","0,0 ms (0%)","4"
"          java.util.HashMap.resize ()","0,0 ms (0%)","0,0 ms (0%)","4"
"          java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","4"
"         java.util.HashMap.hash (Object)","0,001 ms (-0%)","0,0 ms (0%)","4"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","4"
"        java.util.ArrayList.add (Object)","0,003 ms (-0%)","0,0 ms (0%)","3"
"         java.util.ArrayList.add (Object, Object[], int)","0,002 ms (-0%)","0,0 ms (0%)","3"
"          java.util.ArrayList.grow ()","0,001 ms (-0%)","0,0 ms (0%)","3"
"           Self time","0,001 ms (-0%)","0,0 ms (0%)","3"
"           java.util.ArrayList.grow (int)","0,0 ms (0%)","0,0 ms (0%)","3"
"          Self time","0,001 ms (-0%)","0,0 ms (0%)","3"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","3"
"        java.util.HashMap.get (Object)","0,003 ms (-0%)","0,0 ms (0%)","4"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","4"
"         java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","4"
"         java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","4"
"        io.git.nanovc.PathBase.resolve (String)","0,002 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.PathBase.isAbsolute (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"         io.git.nanovc.RepoPath.createInstance (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"          io.git.nanovc.RepoPath.createInstance (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoPath.atRoot ()","0,0 ms (0%)","0,0 ms (0%)","2"
"        io.git.nanovc.PathBase.toString ()","0,0 ms (0%)","0,0 ms (0%)","4"
"        java.util.ArrayList.iterator ()","0,0 ms (0%)","0,0 ms (0%)","2"
"        io.git.nanovc.RepoPath.at (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.get (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.elementData (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.update_ref_in_heads (io.git.nanovc.Repo, String, String)","0,016 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoEngine.update_ref (io.git.nanovc.Repo, io.git.nanovc.HashReferenceCollection, String, String)","0,015 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.HashReferenceCollection.getReference (String)","0,014 ms (-0%)","0,0 ms (0%)","1"
"          Self time","0,013 ms (-0%)","0,0 ms (0%)","1"
"          java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"          io.git.nanovc.HashReferenceCollection.lambda$getReference$0 (String, io.git.nanovc.HashReference)","0,0 ms (0%)","0,0 ms (0%)","2"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.forEach (java.util.function.Consumer)","0,013 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoEngine.lambda$commitAll_UseCommitParentHashes$7 (boolean, io.git.nanovc.Repo, io.git.nanovc.MutableContent)","0,011 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.ImmutableContentArea.putContent (String, byte[])","0,009 ms (-0%)","0,0 ms (0%)","1"
"          io.git.nanovc.ImmutableContentArea.putContent (io.git.nanovc.ImmutableContent)","0,008 ms (-0%)","0,0 ms (0%)","1"
"           io.git.nanovc.ContentMap.putContent (io.git.nanovc.Content)","0,007 ms (-0%)","0,0 ms (0%)","1"
"            java.util.HashMap.put (Object, Object)","0,006 ms (-0%)","0,0 ms (0%)","1"
"             java.util.HashMap.hash (Object)","0,005 ms (-0%)","0,0 ms (0%)","1"
"             java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,0 ms (0%)","0,0 ms (0%)","1"
"              java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","1"
"              Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"             Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"            Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.ContentBase.getCloneOfContentAsByteArray ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.elementAt (Object[], int)","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,006 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.ImmutableContentArea.clear ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.clear ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.ImmutableContentArea.freeze ()","0,0 ms (0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.resolveCommit (io.git.nanovc.Repo, String)","0,006 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.resolveCommit (io.git.nanovc.Repo, String)","0,006 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.HashReferenceCollection.getReference (String)","0,002 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"         io.git.nanovc.HashReferenceCollection.lambda$getReference$0 (String, io.git.nanovc.HashReference)","0,0 ms (0%)","0,0 ms (0%)","2"
"        io.git.nanovc.RepoObjectStore.get (String)","0,001 ms (-0%)","0,0 ms (0%)","1"
"         java.util.HashMap.get (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoObjectStore.get (io.git.nanovc.Hash)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.get (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.resolveReference (io.git.nanovc.Repo, String)","0,005 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.resolveReference (io.git.nanovc.Repo, String)","0,005 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.HashReferenceCollection.getReference (String)","0,004 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,003 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"         io.git.nanovc.HashReferenceCollection.lambda$getReference$0 (String, io.git.nanovc.HashReference)","0,0 ms (0%)","0,0 ms (0%)","2"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"     Self time","0,028 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.PorcelainCommands.checkout (String)","0,254 ms (-0%)","0,0 ms (0%)","4"
"     io.git.nanovc.RepoHandler.checkout (String, int)","0,252 ms (-0%)","0,0 ms (0%)","4"
"      io.git.nanovc.RepoEngine.checkout (io.git.nanovc.Repo, String, int)","0,250 ms (-0%)","0,0 ms (0%)","4"
"       io.git.nanovc.RepoEngine.walk_and_checkout_tree_recursively (io.git.nanovc.Repo, String, io.git.nanovc.RepoPath)","0,161 ms (-0%)","0,0 ms (0%)","4"
"        io.git.nanovc.MutableContentArea.putContent (String, byte[])","0,104 ms (-0%)","0,0 ms (0%)","8"
"         io.git.nanovc.MutableContentArea.getContent (String)","0,090 ms (-0%)","0,0 ms (0%)","8"
"          Self time","0,089 ms (-0%)","0,0 ms (0%)","8"
"          java.util.ArrayList.spliterator ()","0,001 ms (-0%)","0,0 ms (0%)","8"
"         Self time","0,010 ms (-0%)","0,0 ms (0%)","8"
"         java.util.ArrayList.add (Object)","0,003 ms (-0%)","0,0 ms (0%)","8"
"          Self time","0,002 ms (-0%)","0,0 ms (0%)","8"
"          java.util.ArrayList.add (Object, Object[], int)","0,001 ms (-0%)","0,0 ms (0%)","8"
"        Self time","0,016 ms (-0%)","0,0 ms (0%)","4"
"        io.git.nanovc.PathBase.resolve (String)","0,012 ms (-0%)","0,0 ms (0%)","4"
"         Self time","0,007 ms (-0%)","0,0 ms (0%)","4"
"         io.git.nanovc.RepoPath.createInstance (String)","0,003 ms (-0%)","0,0 ms (0%)","4"
"          Self time","0,002 ms (-0%)","0,0 ms (0%)","4"
"          io.git.nanovc.RepoPath.createInstance (String)","0,001 ms (-0%)","0,0 ms (0%)","4"
"         io.git.nanovc.PathBase.isAbsolute (String)","0,001 ms (-0%)","0,0 ms (0%)","4"
"        io.git.nanovc.ImmutableContentArea.putContent (String, byte[])","0,012 ms (-0%)","0,0 ms (0%)","4"
"         io.git.nanovc.ImmutableContentArea.putContent (io.git.nanovc.ImmutableContent)","0,008 ms (-0%)","0,0 ms (0%)","4"
"          io.git.nanovc.ContentMap.putContent (io.git.nanovc.Content)","0,006 ms (-0%)","0,0 ms (0%)","4"
"           java.util.HashMap.put (Object, Object)","0,004 ms (-0%)","0,0 ms (0%)","4"
"            java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,002 ms (-0%)","0,0 ms (0%)","4"
"             Self time","0,001 ms (-0%)","0,0 ms (0%)","4"
"             java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","4"
"            Self time","0,001 ms (-0%)","0,0 ms (0%)","4"
"            java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","4"
"           Self time","0,002 ms (-0%)","0,0 ms (0%)","4"
"          Self time","0,001 ms (-0%)","0,0 ms (0%)","4"
"         Self time","0,003 ms (-0%)","0,0 ms (0%)","4"
"        io.git.nanovc.RepoEngine.cat_file (io.git.nanovc.Repo, String)","0,011 ms (-0%)","0,0 ms (0%)","8"
"         io.git.nanovc.RepoObjectStore.get (String)","0,008 ms (-0%)","0,0 ms (0%)","8"
"          java.util.HashMap.get (Object)","0,005 ms (-0%)","0,0 ms (0%)","8"
"           Self time","0,003 ms (-0%)","0,0 ms (0%)","8"
"           java.util.HashMap.hash (Object)","0,001 ms (-0%)","0,0 ms (0%)","8"
"           java.util.HashMap.getNode (int, Object)","0,001 ms (-0%)","0,0 ms (0%)","8"
"          Self time","0,002 ms (-0%)","0,0 ms (0%)","8"
"         Self time","0,003 ms (-0%)","0,0 ms (0%)","8"
"        io.git.nanovc.PathBase.toAbsolutePath ()","0,002 ms (-0%)","0,0 ms (0%)","4"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","4"
"         io.git.nanovc.PathBase.isAbsolute (String)","0,0 ms (0%)","0,0 ms (0%)","4"
"        java.util.ArrayList.iterator ()","0,001 ms (-0%)","0,0 ms (0%)","4"
"        io.git.nanovc.PathBase.toString ()","0,0 ms (0%)","0,0 ms (0%)","4"
"       io.git.nanovc.RepoEngine.walk_rev_list_recursively (io.git.nanovc.RepoObjectStore, String, java.util.Map, java.util.List, int)","0,027 ms (-0%)","0,0 ms (0%)","4"
"        Self time","0,016 ms (-0%)","0,0 ms (0%)","4"
"        java.util.ArrayList.add (Object)","0,006 ms (-0%)","0,0 ms (0%)","4"
"         java.util.ArrayList.add (Object, Object[], int)","0,004 ms (-0%)","0,0 ms (0%)","4"
"          java.util.ArrayList.grow ()","0,002 ms (-0%)","0,0 ms (0%)","4"
"           java.util.ArrayList.grow (int)","0,001 ms (-0%)","0,0 ms (0%)","4"
"           Self time","0,001 ms (-0%)","0,0 ms (0%)","4"
"          Self time","0,001 ms (-0%)","0,0 ms (0%)","4"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","4"
"        io.git.nanovc.RepoObjectStore.get (String)","0,004 ms (-0%)","0,0 ms (0%)","4"
"         java.util.HashMap.get (Object)","0,002 ms (-0%)","0,0 ms (0%)","4"
"          Self time","0,001 ms (-0%)","0,0 ms (0%)","4"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","4"
"          java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","4"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","4"
"        io.git.nanovc.RepoEngine.walk_rev_list_recursively (io.git.nanovc.RepoObjectStore, String, java.util.Map, java.util.List, int)","0,0 ms (0%)","0,0 ms (0%)","4"
"       Self time","0,020 ms (-0%)","0,0 ms (0%)","4"
"       io.git.nanovc.RepoEngine.resolveCommit (io.git.nanovc.Repo, String)","0,019 ms (-0%)","0,0 ms (0%)","4"
"        io.git.nanovc.HashReferenceCollection.getReference (String)","0,009 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,008 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"         io.git.nanovc.HashReferenceCollection.lambda$getReference$0 (String, io.git.nanovc.HashReference)","0,0 ms (0%)","0,0 ms (0%)","2"
"        io.git.nanovc.RepoObjectStore.get (String)","0,004 ms (-0%)","0,0 ms (0%)","4"
"         java.util.HashMap.get (Object)","0,002 ms (-0%)","0,0 ms (0%)","4"
"          Self time","0,001 ms (-0%)","0,0 ms (0%)","4"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","4"
"          java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","4"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","4"
"        Self time","0,004 ms (-0%)","0,0 ms (0%)","4"
"        io.git.nanovc.RepoObjectStore.get (io.git.nanovc.Hash)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.get (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.clearAreas (io.git.nanovc.Repo)","0,015 ms (-0%)","0,0 ms (0%)","4"
"        io.git.nanovc.MutableContentArea.clear ()","0,006 ms (-0%)","0,0 ms (0%)","8"
"         Self time","0,003 ms (-0%)","0,0 ms (0%)","8"
"         java.util.ArrayList.clear ()","0,002 ms (-0%)","0,0 ms (0%)","8"
"        io.git.nanovc.ImmutableContentArea.clear ()","0,004 ms (-0%)","0,0 ms (0%)","4"
"         java.util.HashMap.clear ()","0,002 ms (-0%)","0,0 ms (0%)","4"
"         Self time","0,002 ms (-0%)","0,0 ms (0%)","4"
"        Self time","0,003 ms (-0%)","0,0 ms (0%)","4"
"       java.util.ArrayList.get (int)","0,003 ms (-0%)","0,0 ms (0%)","4"
"        Self time","0,002 ms (-0%)","0,0 ms (0%)","4"
"        java.util.ArrayList.elementData (int)","0,0 ms (0%)","0,0 ms (0%)","4"
"       io.git.nanovc.RepoPath.atRoot ()","0,002 ms (-0%)","0,0 ms (0%)","4"
"       io.git.nanovc.ImmutableContentArea.freeze ()","0,0 ms (0%)","0,0 ms (0%)","4"
"      Self time","0,002 ms (-0%)","0,0 ms (0%)","4"
"     Self time","0,002 ms (-0%)","0,0 ms (0%)","4"
"    io.nanovc.memory.GitInspirationOperationalDecompositionTests.findCommonAncestor (io.git.nanovc.Commit, io.git.nanovc.Commit)","0,145 ms (-0%)","0,0 ms (0%)","1"
"     io.nanovc.memory.GitInspirationOperationalDecompositionTests.getAllAncestorHashes (io.git.nanovc.Commit)","0,134 ms (-0%)","0,0 ms (0%)","2"
"      io.nanovc.memory.GitInspirationOperationalDecompositionTests.getAllAncestorHashesRecursively (io.git.nanovc.Commit, java.util.Set)","0,125 ms (-0%)","0,0 ms (0%)","2"
"       io.nanovc.memory.GitInspirationOperationalDecompositionTests.getAllAncestorHashesRecursively (io.git.nanovc.Commit, java.util.Set)","0,096 ms (-0%)","0,0 ms (0%)","2"
"        io.nanovc.memory.GitInspirationOperationalDecompositionTests.getAllAncestorHashesRecursively (io.git.nanovc.Commit, java.util.Set)","0,087 ms (-0%)","0,0 ms (0%)","1"
"         java.util.HashMap.put (Object, Object)","0,078 ms (-0%)","0,0 ms (0%)","1"
"          java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,077 ms (-0%)","0,0 ms (0%)","1"
"          Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,009 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.put (Object, Object)","0,002 ms (-0%)","0,0 ms (0%)","2"
"         java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,001 ms (-0%)","0,0 ms (0%)","2"
"         java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"        io.git.nanovc.RepoHandler.resolveCommit (String)","0,002 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.RepoEngine.resolveCommit (io.git.nanovc.Repo, String)","0,001 ms (-0%)","0,0 ms (0%)","1"
"          io.git.nanovc.RepoObjectStore.get (String)","0,001 ms (-0%)","0,0 ms (0%)","1"
"           java.util.HashMap.get (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"            java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"            java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"            Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,002 ms (-0%)","0,0 ms (0%)","2"
"        java.util.HashMap.containsKey (Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"         java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       java.util.HashMap.put (Object, Object)","0,013 ms (-0%)","0,0 ms (0%)","2"
"        java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,006 ms (-0%)","0,0 ms (0%)","2"
"         Self time","0,005 ms (-0%)","0,0 ms (0%)","2"
"         java.util.HashMap.resize ()","0,0 ms (0%)","0,0 ms (0%)","2"
"        Self time","0,005 ms (-0%)","0,0 ms (0%)","2"
"        java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"       io.git.nanovc.RepoHandler.resolveCommit (String)","0,006 ms (-0%)","0,0 ms (0%)","2"
"        io.git.nanovc.RepoEngine.resolveCommit (io.git.nanovc.Repo, String)","0,004 ms (-0%)","0,0 ms (0%)","2"
"         io.git.nanovc.RepoObjectStore.get (String)","0,002 ms (-0%)","0,0 ms (0%)","2"
"          java.util.HashMap.get (Object)","0,001 ms (-0%)","0,0 ms (0%)","2"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"           java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"          Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"         Self time","0,002 ms (-0%)","0,0 ms (0%)","2"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"       Self time","0,006 ms (-0%)","0,0 ms (0%)","2"
"       java.util.HashMap.containsKey (Object)","0,002 ms (-0%)","0,0 ms (0%)","2"
"        Self time","0,002 ms (-0%)","0,0 ms (0%)","2"
"        java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"        java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"      Self time","0,007 ms (-0%)","0,0 ms (0%)","2"
"      java.util.HashMap.tableSizeFor (int)","0,001 ms (-0%)","0,0 ms (0%)","2"
"     Self time","0,007 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.RepoHandler.resolveCommit (String)","0,002 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.resolveCommit (io.git.nanovc.Repo, String)","0,001 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoObjectStore.get (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"        java.util.HashMap.get (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"     java.util.HashMap.containsKey (Object)","0,001 ms (-0%)","0,0 ms (0%)","2"
"      Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"      java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"      java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"    io.git.nanovc.MutableContentArea.getContentMapSnapshot ()","0,022 ms (-0%)","0,0 ms (0%)","3"
"     java.util.ArrayList.forEach (java.util.function.Consumer)","0,017 ms (-0%)","0,0 ms (0%)","3"
"      io.git.nanovc.ContentMap.putContent (io.git.nanovc.Content)","0,011 ms (-0%)","0,0 ms (0%)","3"
"       java.util.HashMap.put (Object, Object)","0,009 ms (-0%)","0,0 ms (0%)","3"
"        java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,007 ms (-0%)","0,0 ms (0%)","3"
"         java.util.HashMap.resize ()","0,005 ms (-0%)","0,0 ms (0%)","3"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","3"
"         java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","3"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","3"
"        java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","3"
"       Self time","0,002 ms (-0%)","0,0 ms (0%)","3"
"      Self time","0,004 ms (-0%)","0,0 ms (0%)","3"
"      java.util.ArrayList.elementAt (Object[], int)","0,0 ms (0%)","0,0 ms (0%)","3"
"     Self time","0,005 ms (-0%)","0,0 ms (0%)","3"
"    io.nanovc.memory.GitInspirationOperationalDecompositionTests.computeDiffs (io.git.nanovc.ContentMap, io.git.nanovc.ContentMap)","0,020 ms (-0%)","0,0 ms (0%)","2"
"     Self time","0,011 ms (-0%)","0,0 ms (0%)","2"
"     java.util.HashMap.containsKey (Object)","0,003 ms (-0%)","0,0 ms (0%)","4"
"      Self time","0,002 ms (-0%)","0,0 ms (0%)","4"
"      java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","4"
"      java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","4"
"     java.util.HashMap.entrySet ()","0,002 ms (-0%)","0,0 ms (0%)","4"
"     io.git.nanovc.ContentMap.getContent (String)","0,002 ms (-0%)","0,0 ms (0%)","2"
"      java.util.HashMap.get (Object)","0,001 ms (-0%)","0,0 ms (0%)","2"
"       java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"       java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"       Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"      Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"     java.util.HashMap.put (Object, Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"      java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,001 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"       java.util.HashMap.resize ()","0,0 ms (0%)","0,0 ms (0%)","1"
"      java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"    io.nanovc.memory.GitInspirationOperationalDecompositionTests.applyDiffs (io.git.nanovc.ContentMap, java.util.Map, io.git.nanovc.MutableContentArea)","0,009 ms (-0%)","0,0 ms (0%)","2"
"     io.git.nanovc.MutableContentArea.putContent (String, byte[])","0,004 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.MutableContentArea.getContent (String)","0,003 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,003 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.MutableContentArea.lambda$getContent$0 (String, io.git.nanovc.MutableContent)","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"     Self time","0,003 ms (-0%)","0,0 ms (0%)","2"
"     io.git.nanovc.ContentMap.getContent (String)","0,001 ms (-0%)","0,0 ms (0%)","1"
"      java.util.HashMap.get (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"       java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"       java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"    Self time","0,007 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.RepoHandler.addAll (boolean)","0,006 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.RepoEngine.addAll (io.git.nanovc.Repo, boolean)","0,006 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.MutableContentArea.putContent (String, byte[])","0,003 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.MutableContentArea.getContent (String)","0,002 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.MutableContentArea.lambda$getContent$0 (String, io.git.nanovc.MutableContent)","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      io.git.nanovc.ContentBase.getCloneOfContentAsByteArray ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"      Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"      java.util.ArrayList.iterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"     Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"   Self time","0,010 ms (-0%)","0,0 ms (0%)","1"
"  io.nanovc.memory.GitInspirationOperationalDecompositionTests.commit3 ()","0,468 ms (-0%)","0,0 ms (0%)","1"
"   io.nanovc.memory.GitInspirationOperationalDecompositionTests.commit ()","0,462 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.RepoHandler.commitAll (String, boolean)","0,329 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.RepoEngine.commitAll (io.git.nanovc.Repo, String, String, java.time.ZonedDateTime, String, java.time.ZonedDateTime, boolean)","0,297 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.commitAll_UseCommitParentHashes (io.git.nanovc.Repo, String, String, java.time.ZonedDateTime, String, java.time.ZonedDateTime, boolean, String[])","0,278 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.write_tree (io.git.nanovc.Repo)","0,143 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoEngine.hash_object_write (io.git.nanovc.Repo, io.git.nanovc.RepoObject)","0,073 ms (-0%)","0,0 ms (0%)","2"
"         io.git.nanovc.RepoEngine.hash_object (io.git.nanovc.ObjectType, byte[])","0,035 ms (-0%)","0,0 ms (0%)","2"
"          Self time","0,031 ms (-0%)","0,0 ms (0%)","2"
"          io.git.nanovc.Hex.bytesToHex (byte[])","0,004 ms (-0%)","0,0 ms (0%)","2"
"         io.git.nanovc.RepoObjectStore.put (io.git.nanovc.RepoObject)","0,017 ms (-0%)","0,0 ms (0%)","2"
"          java.util.HashMap.computeIfAbsent (Object, java.util.function.Function)","0,006 ms (-0%)","0,0 ms (0%)","2"
"           Self time","0,005 ms (-0%)","0,0 ms (0%)","2"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"           io.git.nanovc.RepoObjectStore.lambda$put$0 (String)","0,0 ms (0%)","0,0 ms (0%)","2"
"           java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","2"
"          java.util.HashMap.put (Object, Object)","0,004 ms (-0%)","0,0 ms (0%)","4"
"           java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,002 ms (-0%)","0,0 ms (0%)","4"
"            Self time","0,002 ms (-0%)","0,0 ms (0%)","4"
"            java.util.HashMap.resize ()","0,0 ms (0%)","0,0 ms (0%)","2"
"            java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","4"
"           Self time","0,001 ms (-0%)","0,0 ms (0%)","4"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","4"
"          Self time","0,004 ms (-0%)","0,0 ms (0%)","2"
"          java.util.HashMap.containsKey (Object)","0,002 ms (-0%)","0,0 ms (0%)","2"
"           Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"           java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"         io.git.nanovc.RepoObject.getByteArray ()","0,016 ms (-0%)","0,0 ms (0%)","2"
"          io.git.nanovc.Tree.writeContentToStream (java.io.DataOutputStream)","0,006 ms (-0%)","0,0 ms (0%)","1"
"           Self time","0,006 ms (-0%)","0,0 ms (0%)","1"
"           java.util.ArrayList.iterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,006 ms (-0%)","0,0 ms (0%)","2"
"          io.git.nanovc.Blob.writeContentToStream (java.io.DataOutputStream)","0,003 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,003 ms (-0%)","0,0 ms (0%)","2"
"         io.git.nanovc.Blob.getObjectType ()","0,0 ms (0%)","0,0 ms (0%)","1"
"         io.git.nanovc.Tree.getObjectType ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.PathBase.splitIntoParts ()","0,035 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,029 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.subList (int, int)","0,002 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.add (Object)","0,001 ms (-0%)","0,0 ms (0%)","2"
"          java.util.ArrayList.add (Object, Object[], int)","0,0 ms (0%)","0,0 ms (0%)","2"
"           java.util.ArrayList.grow ()","0,0 ms (0%)","0,0 ms (0%)","1"
"            java.util.ArrayList.grow (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"            Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"         java.util.ArrayList.get (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.ArrayList.elementData (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         io.git.nanovc.PathBase.lambda$splitIntoParts$0 (String)","0,0 ms (0%)","0,0 ms (0%)","2"
"         io.git.nanovc.PathBase.lambda$splitIntoParts$1 (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,014 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.put (Object, Object)","0,007 ms (-0%)","0,0 ms (0%)","4"
"         java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,003 ms (-0%)","0,0 ms (0%)","4"
"          Self time","0,002 ms (-0%)","0,0 ms (0%)","4"
"          java.util.HashMap.resize ()","0,001 ms (-0%)","0,0 ms (0%)","4"
"          java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","4"
"         java.util.HashMap.hash (Object)","0,001 ms (-0%)","0,0 ms (0%)","4"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","4"
"        java.util.ArrayList.add (Object)","0,003 ms (-0%)","0,0 ms (0%)","3"
"         java.util.ArrayList.add (Object, Object[], int)","0,003 ms (-0%)","0,0 ms (0%)","3"
"          java.util.ArrayList.grow ()","0,001 ms (-0%)","0,0 ms (0%)","3"
"           Self time","0,001 ms (-0%)","0,0 ms (0%)","3"
"           java.util.ArrayList.grow (int)","0,0 ms (0%)","0,0 ms (0%)","3"
"          Self time","0,001 ms (-0%)","0,0 ms (0%)","3"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","3"
"        io.git.nanovc.PathBase.resolve (String)","0,003 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.RepoPath.createInstance (String)","0,001 ms (-0%)","0,0 ms (0%)","1"
"          io.git.nanovc.RepoPath.createInstance (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.PathBase.isAbsolute (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"        java.util.HashMap.get (Object)","0,002 ms (-0%)","0,0 ms (0%)","4"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","4"
"         java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","4"
"         java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","4"
"        io.git.nanovc.RepoPath.atRoot ()","0,0 ms (0%)","0,0 ms (0%)","2"
"        io.git.nanovc.PathBase.toString ()","0,0 ms (0%)","0,0 ms (0%)","4"
"        java.util.ArrayList.iterator ()","0,0 ms (0%)","0,0 ms (0%)","2"
"        io.git.nanovc.RepoPath.at (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.get (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.elementData (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.update_ref_in_heads (io.git.nanovc.Repo, String, String)","0,066 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoEngine.update_ref (io.git.nanovc.Repo, io.git.nanovc.HashReferenceCollection, String, String)","0,065 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.HashReferenceCollection.getReference (String)","0,063 ms (-0%)","0,0 ms (0%)","1"
"          Self time","0,056 ms (-0%)","0,0 ms (0%)","1"
"          io.git.nanovc.HashReferenceCollection.lambda$getReference$0 (String, io.git.nanovc.HashReference)","0,007 ms (-0%)","0,0 ms (0%)","3"
"          java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.commit_tree (io.git.nanovc.Repo, String, String, String, java.time.ZonedDateTime, String, java.time.ZonedDateTime, String[])","0,053 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoEngine.hash_object_write (io.git.nanovc.Repo, io.git.nanovc.RepoObject)","0,052 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.RepoObject.getByteArray ()","0,027 ms (-0%)","0,0 ms (0%)","1"
"          io.git.nanovc.Commit.writeContentToStream (java.io.DataOutputStream)","0,024 ms (-0%)","0,0 ms (0%)","1"
"          Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.RepoEngine.hash_object (io.git.nanovc.ObjectType, byte[])","0,015 ms (-0%)","0,0 ms (0%)","1"
"          Self time","0,013 ms (-0%)","0,0 ms (0%)","1"
"          io.git.nanovc.Hex.bytesToHex (byte[])","0,001 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.RepoObjectStore.put (io.git.nanovc.RepoObject)","0,008 ms (-0%)","0,0 ms (0%)","1"
"          java.util.HashMap.computeIfAbsent (Object, java.util.function.Function)","0,002 ms (-0%)","0,0 ms (0%)","1"
"           Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"           io.git.nanovc.RepoObjectStore.lambda$put$0 (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"           java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.HashMap.put (Object, Object)","0,002 ms (-0%)","0,0 ms (0%)","2"
"           java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,001 ms (-0%)","0,0 ms (0%)","2"
"            Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"            java.util.HashMap.resize ()","0,0 ms (0%)","0,0 ms (0%)","1"
"            java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","2"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"          java.util.HashMap.containsKey (Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"           java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.Commit.getObjectType ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.forEach (java.util.function.Consumer)","0,007 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoEngine.lambda$commitAll_UseCommitParentHashes$7 (boolean, io.git.nanovc.Repo, io.git.nanovc.MutableContent)","0,005 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.ImmutableContentArea.putContent (String, byte[])","0,003 ms (-0%)","0,0 ms (0%)","1"
"          io.git.nanovc.ImmutableContentArea.putContent (io.git.nanovc.ImmutableContent)","0,002 ms (-0%)","0,0 ms (0%)","1"
"           io.git.nanovc.ContentMap.putContent (io.git.nanovc.Content)","0,001 ms (-0%)","0,0 ms (0%)","1"
"            java.util.HashMap.put (Object, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"             java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"             java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,0 ms (0%)","0,0 ms (0%)","1"
"              java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","1"
"              Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"             Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"            Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.ContentBase.getCloneOfContentAsByteArray ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.elementAt (Object[], int)","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,005 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.ImmutableContentArea.clear ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.clear ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.ImmutableContentArea.freeze ()","0,0 ms (0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.resolveReference (io.git.nanovc.Repo, String)","0,008 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.resolveReference (io.git.nanovc.Repo, String)","0,007 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.HashReferenceCollection.getReference (String)","0,006 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,005 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"         io.git.nanovc.HashReferenceCollection.lambda$getReference$0 (String, io.git.nanovc.HashReference)","0,0 ms (0%)","0,0 ms (0%)","3"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.resolveCommit (io.git.nanovc.Repo, String)","0,008 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.resolveCommit (io.git.nanovc.Repo, String)","0,008 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.HashReferenceCollection.getReference (String)","0,004 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,003 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"         io.git.nanovc.HashReferenceCollection.lambda$getReference$0 (String, io.git.nanovc.HashReference)","0,0 ms (0%)","0,0 ms (0%)","3"
"        io.git.nanovc.RepoObjectStore.get (String)","0,001 ms (-0%)","0,0 ms (0%)","1"
"         java.util.HashMap.get (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoObjectStore.get (io.git.nanovc.Hash)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.get (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"     Self time","0,031 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.PorcelainCommands.checkout (String)","0,087 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.RepoHandler.checkout (String, int)","0,087 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.checkout (io.git.nanovc.Repo, String, int)","0,086 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.resolveCommit (io.git.nanovc.Repo, String)","0,033 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoObjectStore.get (String)","0,016 ms (-0%)","0,0 ms (0%)","1"
"         java.util.HashMap.get (Object)","0,015 ms (-0%)","0,0 ms (0%)","1"
"          Self time","0,014 ms (-0%)","0,0 ms (0%)","1"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.HashReferenceCollection.getReference (String)","0,013 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,012 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.HashReferenceCollection.lambda$getReference$0 (String, io.git.nanovc.HashReference)","0,001 ms (-0%)","0,0 ms (0%)","3"
"         java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoObjectStore.get (io.git.nanovc.Hash)","0,001 ms (-0%)","0,0 ms (0%)","1"
"         java.util.HashMap.get (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.walk_and_checkout_tree_recursively (io.git.nanovc.Repo, String, io.git.nanovc.RepoPath)","0,028 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.MutableContentArea.putContent (String, byte[])","0,010 ms (-0%)","0,0 ms (0%)","2"
"         io.git.nanovc.MutableContentArea.getContent (String)","0,007 ms (-0%)","0,0 ms (0%)","2"
"          Self time","0,007 ms (-0%)","0,0 ms (0%)","2"
"          java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","2"
"         Self time","0,002 ms (-0%)","0,0 ms (0%)","2"
"         java.util.ArrayList.add (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"          java.util.ArrayList.add (Object, Object[], int)","0,0 ms (0%)","0,0 ms (0%)","2"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"        Self time","0,005 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.PathBase.resolve (String)","0,004 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.RepoPath.createInstance (String)","0,001 ms (-0%)","0,0 ms (0%)","1"
"          io.git.nanovc.RepoPath.createInstance (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         io.git.nanovc.PathBase.isAbsolute (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoEngine.cat_file (io.git.nanovc.Repo, String)","0,003 ms (-0%)","0,0 ms (0%)","2"
"         io.git.nanovc.RepoObjectStore.get (String)","0,002 ms (-0%)","0,0 ms (0%)","2"
"          java.util.HashMap.get (Object)","0,001 ms (-0%)","0,0 ms (0%)","2"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"           java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"        io.git.nanovc.ImmutableContentArea.putContent (String, byte[])","0,003 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.ImmutableContentArea.putContent (io.git.nanovc.ImmutableContent)","0,002 ms (-0%)","0,0 ms (0%)","1"
"          io.git.nanovc.ContentMap.putContent (io.git.nanovc.Content)","0,001 ms (-0%)","0,0 ms (0%)","1"
"           java.util.HashMap.put (Object, Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"            java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"            java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,0 ms (0%)","0,0 ms (0%)","1"
"             java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","1"
"             Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"            Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.iterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.PathBase.toAbsolutePath ()","0,0 ms (0%)","0,0 ms (0%)","1"
"         io.git.nanovc.PathBase.isAbsolute (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.PathBase.toString ()","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.walk_rev_list_recursively (io.git.nanovc.RepoObjectStore, String, java.util.Map, java.util.List, int)","0,008 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,005 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.add (Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.add (Object, Object[], int)","0,001 ms (-0%)","0,0 ms (0%)","1"
"          java.util.ArrayList.grow ()","0,0 ms (0%)","0,0 ms (0%)","1"
"           java.util.ArrayList.grow (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoObjectStore.get (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.get (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoEngine.walk_rev_list_recursively (io.git.nanovc.RepoObjectStore, String, java.util.Map, java.util.List, int)","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,008 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.clearAreas (io.git.nanovc.Repo)","0,004 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.MutableContentArea.clear ()","0,001 ms (-0%)","0,0 ms (0%)","2"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"         java.util.ArrayList.clear ()","0,0 ms (0%)","0,0 ms (0%)","2"
"        io.git.nanovc.ImmutableContentArea.clear ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"         java.util.HashMap.clear ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.get (int)","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.elementData (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoPath.atRoot ()","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.ImmutableContentArea.freeze ()","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"     Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"    io.git.nanovc.MutableContentArea.getContentMapSnapshot ()","0,011 ms (-0%)","0,0 ms (0%)","1"
"     java.util.ArrayList.forEach (java.util.function.Consumer)","0,006 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.ContentMap.putContent (io.git.nanovc.Content)","0,003 ms (-0%)","0,0 ms (0%)","1"
"       java.util.HashMap.put (Object, Object)","0,002 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,001 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"         java.util.HashMap.resize ()","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","1"
"        java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"      Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"      java.util.ArrayList.elementAt (Object[], int)","0,0 ms (0%)","0,0 ms (0%)","1"
"     Self time","0,004 ms (-0%)","0,0 ms (0%)","1"
"    Self time","0,010 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.RepoHandler.addAll (boolean)","0,007 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.RepoEngine.addAll (io.git.nanovc.Repo, boolean)","0,006 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.MutableContentArea.putContent (String, byte[])","0,003 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.MutableContentArea.getContent (String)","0,001 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.add (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.add (Object, Object[], int)","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.ContentBase.getCloneOfContentAsByteArray ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"      java.util.ArrayList.iterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"     Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"    io.git.nanovc.MutableContentArea.clear ()","0,006 ms (-0%)","0,0 ms (0%)","2"
"     java.util.ArrayList.clear ()","0,005 ms (-0%)","0,0 ms (0%)","2"
"     Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"    io.git.nanovc.RepoHandler.putWorkingAreaContent (String, byte[])","0,004 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.RepoEngine.putWorkingAreaContent (io.git.nanovc.Repo, String, byte[])","0,004 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.MutableContentArea.putContent (String, byte[])","0,003 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.MutableContentArea.getContent (String)","0,002 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.add (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.add (Object, Object[], int)","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"     Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"    io.git.nanovc.RepoHandler.getCurrentBranchName ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.RepoEngine.getCurrentBranchName (io.git.nanovc.Repo)","0,0 ms (0%)","0,0 ms (0%)","1"
"     Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"    java.util.HashMap.entrySet ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"   Self time","0,006 ms (-0%)","0,0 ms (0%)","1"
"  io.nanovc.memory.GitInspirationOperationalDecompositionTests.commit2 ()","0,440 ms (-0%)","0,0 ms (0%)","1"
"   io.nanovc.memory.GitInspirationOperationalDecompositionTests.commit ()","0,439 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.RepoHandler.commitAll (String, boolean)","0,323 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.RepoEngine.commitAll (io.git.nanovc.Repo, String, String, java.time.ZonedDateTime, String, java.time.ZonedDateTime, boolean)","0,287 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.commitAll_UseCommitParentHashes (io.git.nanovc.Repo, String, String, java.time.ZonedDateTime, String, java.time.ZonedDateTime, boolean, String[])","0,265 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.write_tree (io.git.nanovc.Repo)","0,172 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoEngine.hash_object_write (io.git.nanovc.Repo, io.git.nanovc.RepoObject)","0,089 ms (-0%)","0,0 ms (0%)","2"
"         io.git.nanovc.RepoEngine.hash_object (io.git.nanovc.ObjectType, byte[])","0,042 ms (-0%)","0,0 ms (0%)","2"
"          Self time","0,037 ms (-0%)","0,0 ms (0%)","2"
"          io.git.nanovc.Hex.bytesToHex (byte[])","0,005 ms (-0%)","0,0 ms (0%)","2"
"         io.git.nanovc.RepoObject.getByteArray ()","0,020 ms (-0%)","0,0 ms (0%)","2"
"          io.git.nanovc.Tree.writeContentToStream (java.io.DataOutputStream)","0,008 ms (-0%)","0,0 ms (0%)","1"
"           Self time","0,007 ms (-0%)","0,0 ms (0%)","1"
"           java.util.ArrayList.iterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,008 ms (-0%)","0,0 ms (0%)","2"
"          io.git.nanovc.Blob.writeContentToStream (java.io.DataOutputStream)","0,004 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.RepoObjectStore.put (io.git.nanovc.RepoObject)","0,020 ms (-0%)","0,0 ms (0%)","2"
"          java.util.HashMap.computeIfAbsent (Object, java.util.function.Function)","0,007 ms (-0%)","0,0 ms (0%)","2"
"           Self time","0,005 ms (-0%)","0,0 ms (0%)","2"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"           io.git.nanovc.RepoObjectStore.lambda$put$0 (String)","0,0 ms (0%)","0,0 ms (0%)","2"
"           java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","2"
"          Self time","0,005 ms (-0%)","0,0 ms (0%)","2"
"          java.util.HashMap.put (Object, Object)","0,004 ms (-0%)","0,0 ms (0%)","4"
"           java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,002 ms (-0%)","0,0 ms (0%)","4"
"            Self time","0,001 ms (-0%)","0,0 ms (0%)","4"
"            java.util.HashMap.resize ()","0,0 ms (0%)","0,0 ms (0%)","2"
"            java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","4"
"           Self time","0,001 ms (-0%)","0,0 ms (0%)","4"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","4"
"          java.util.HashMap.containsKey (Object)","0,002 ms (-0%)","0,0 ms (0%)","2"
"           Self time","0,002 ms (-0%)","0,0 ms (0%)","2"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"           java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"         Self time","0,004 ms (-0%)","0,0 ms (0%)","2"
"         io.git.nanovc.Blob.getObjectType ()","0,0 ms (0%)","0,0 ms (0%)","1"
"         io.git.nanovc.Tree.getObjectType ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.PathBase.splitIntoParts ()","0,044 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,037 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.subList (int, int)","0,002 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.add (Object)","0,001 ms (-0%)","0,0 ms (0%)","2"
"          java.util.ArrayList.add (Object, Object[], int)","0,0 ms (0%)","0,0 ms (0%)","2"
"           java.util.ArrayList.grow ()","0,0 ms (0%)","0,0 ms (0%)","1"
"            java.util.ArrayList.grow (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"            Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"         java.util.ArrayList.get (int)","0,001 ms (-0%)","0,0 ms (0%)","1"
"          java.util.ArrayList.elementData (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         io.git.nanovc.PathBase.lambda$splitIntoParts$0 (String)","0,0 ms (0%)","0,0 ms (0%)","2"
"         io.git.nanovc.PathBase.lambda$splitIntoParts$1 (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,016 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.put (Object, Object)","0,007 ms (-0%)","0,0 ms (0%)","4"
"         java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,003 ms (-0%)","0,0 ms (0%)","4"
"          Self time","0,002 ms (-0%)","0,0 ms (0%)","4"
"          java.util.HashMap.resize ()","0,001 ms (-0%)","0,0 ms (0%)","4"
"          java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","4"
"         Self time","0,002 ms (-0%)","0,0 ms (0%)","4"
"         java.util.HashMap.hash (Object)","0,001 ms (-0%)","0,0 ms (0%)","4"
"        java.util.ArrayList.add (Object)","0,004 ms (-0%)","0,0 ms (0%)","3"
"         java.util.ArrayList.add (Object, Object[], int)","0,003 ms (-0%)","0,0 ms (0%)","3"
"          java.util.ArrayList.grow ()","0,001 ms (-0%)","0,0 ms (0%)","3"
"           Self time","0,001 ms (-0%)","0,0 ms (0%)","3"
"           java.util.ArrayList.grow (int)","0,0 ms (0%)","0,0 ms (0%)","3"
"          Self time","0,001 ms (-0%)","0,0 ms (0%)","3"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","3"
"        io.git.nanovc.PathBase.resolve (String)","0,003 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.PathBase.isAbsolute (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"         io.git.nanovc.RepoPath.createInstance (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"          io.git.nanovc.RepoPath.createInstance (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        java.util.HashMap.get (Object)","0,002 ms (-0%)","0,0 ms (0%)","4"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","4"
"         java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","4"
"         java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","4"
"        io.git.nanovc.RepoPath.atRoot ()","0,001 ms (-0%)","0,0 ms (0%)","2"
"        java.util.ArrayList.get (int)","0,001 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.elementData (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.PathBase.toString ()","0,0 ms (0%)","0,0 ms (0%)","4"
"        java.util.ArrayList.iterator ()","0,0 ms (0%)","0,0 ms (0%)","2"
"        io.git.nanovc.RepoPath.at (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.commit_tree (io.git.nanovc.Repo, String, String, String, java.time.ZonedDateTime, String, java.time.ZonedDateTime, String[])","0,066 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoEngine.hash_object_write (io.git.nanovc.Repo, io.git.nanovc.RepoObject)","0,064 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.RepoObject.getByteArray ()","0,033 ms (-0%)","0,0 ms (0%)","1"
"          io.git.nanovc.Commit.writeContentToStream (java.io.DataOutputStream)","0,029 ms (-0%)","0,0 ms (0%)","1"
"          Self time","0,003 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.RepoEngine.hash_object (io.git.nanovc.ObjectType, byte[])","0,019 ms (-0%)","0,0 ms (0%)","1"
"          Self time","0,017 ms (-0%)","0,0 ms (0%)","1"
"          io.git.nanovc.Hex.bytesToHex (byte[])","0,001 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.RepoObjectStore.put (io.git.nanovc.RepoObject)","0,009 ms (-0%)","0,0 ms (0%)","1"
"          java.util.HashMap.computeIfAbsent (Object, java.util.function.Function)","0,003 ms (-0%)","0,0 ms (0%)","1"
"           Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"           io.git.nanovc.RepoObjectStore.lambda$put$0 (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"           java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.HashMap.put (Object, Object)","0,002 ms (-0%)","0,0 ms (0%)","2"
"           java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,001 ms (-0%)","0,0 ms (0%)","2"
"            Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"            java.util.HashMap.resize ()","0,0 ms (0%)","0,0 ms (0%)","1"
"            java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","2"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"          Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"          java.util.HashMap.containsKey (Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"           java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.Commit.getObjectType ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.update_ref_in_heads (io.git.nanovc.Repo, String, String)","0,011 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoEngine.update_ref (io.git.nanovc.Repo, io.git.nanovc.HashReferenceCollection, String, String)","0,010 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.HashReferenceCollection.getReference (String)","0,009 ms (-0%)","0,0 ms (0%)","1"
"          Self time","0,008 ms (-0%)","0,0 ms (0%)","1"
"          java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"          io.git.nanovc.HashReferenceCollection.lambda$getReference$0 (String, io.git.nanovc.HashReference)","0,0 ms (0%)","0,0 ms (0%)","2"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.forEach (java.util.function.Consumer)","0,008 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoEngine.lambda$commitAll_UseCommitParentHashes$7 (boolean, io.git.nanovc.Repo, io.git.nanovc.MutableContent)","0,005 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.ImmutableContentArea.putContent (String, byte[])","0,003 ms (-0%)","0,0 ms (0%)","1"
"          io.git.nanovc.ImmutableContentArea.putContent (io.git.nanovc.ImmutableContent)","0,002 ms (-0%)","0,0 ms (0%)","1"
"           io.git.nanovc.ContentMap.putContent (io.git.nanovc.Content)","0,001 ms (-0%)","0,0 ms (0%)","1"
"            java.util.HashMap.put (Object, Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"             java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"             java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,0 ms (0%)","0,0 ms (0%)","1"
"              java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","1"
"              Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"             Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"            Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.ContentBase.getCloneOfContentAsByteArray ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.elementAt (Object[], int)","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,006 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.ImmutableContentArea.clear ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.clear ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.ImmutableContentArea.freeze ()","0,0 ms (0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.resolveReference (io.git.nanovc.Repo, String)","0,009 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.resolveReference (io.git.nanovc.Repo, String)","0,008 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.HashReferenceCollection.getReference (String)","0,007 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,006 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.HashReferenceCollection.lambda$getReference$0 (String, io.git.nanovc.HashReference)","0,001 ms (-0%)","0,0 ms (0%)","2"
"         java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.resolveCommit (io.git.nanovc.Repo, String)","0,008 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.resolveCommit (io.git.nanovc.Repo, String)","0,008 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.HashReferenceCollection.getReference (String)","0,004 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,003 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"         io.git.nanovc.HashReferenceCollection.lambda$getReference$0 (String, io.git.nanovc.HashReference)","0,0 ms (0%)","0,0 ms (0%)","2"
"        io.git.nanovc.RepoObjectStore.get (String)","0,001 ms (-0%)","0,0 ms (0%)","1"
"         java.util.HashMap.get (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoObjectStore.get (io.git.nanovc.Hash)","0,001 ms (-0%)","0,0 ms (0%)","1"
"         java.util.HashMap.get (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,003 ms (-0%)","0,0 ms (0%)","1"
"     Self time","0,035 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.PorcelainCommands.checkout (String)","0,064 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.RepoHandler.checkout (String, int)","0,063 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.checkout (io.git.nanovc.Repo, String, int)","0,063 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.walk_and_checkout_tree_recursively (io.git.nanovc.Repo, String, io.git.nanovc.RepoPath)","0,032 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoEngine.cat_file (io.git.nanovc.Repo, String)","0,009 ms (-0%)","0,0 ms (0%)","2"
"         Self time","0,007 ms (-0%)","0,0 ms (0%)","2"
"         io.git.nanovc.RepoObjectStore.get (String)","0,002 ms (-0%)","0,0 ms (0%)","2"
"          java.util.HashMap.get (Object)","0,001 ms (-0%)","0,0 ms (0%)","2"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"           java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"        io.git.nanovc.MutableContentArea.putContent (String, byte[])","0,008 ms (-0%)","0,0 ms (0%)","2"
"         io.git.nanovc.MutableContentArea.getContent (String)","0,005 ms (-0%)","0,0 ms (0%)","2"
"          Self time","0,005 ms (-0%)","0,0 ms (0%)","2"
"          java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","2"
"         Self time","0,002 ms (-0%)","0,0 ms (0%)","2"
"         java.util.ArrayList.add (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"          java.util.ArrayList.add (Object, Object[], int)","0,0 ms (0%)","0,0 ms (0%)","2"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"        io.git.nanovc.ImmutableContentArea.putContent (String, byte[])","0,004 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.ImmutableContentArea.putContent (io.git.nanovc.ImmutableContent)","0,002 ms (-0%)","0,0 ms (0%)","1"
"          io.git.nanovc.ContentMap.putContent (io.git.nanovc.Content)","0,002 ms (-0%)","0,0 ms (0%)","1"
"           java.util.HashMap.put (Object, Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"            java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"            java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,0 ms (0%)","0,0 ms (0%)","1"
"             java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","1"
"             Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"            Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"           Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,004 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.PathBase.resolve (String)","0,003 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.RepoPath.createInstance (String)","0,001 ms (-0%)","0,0 ms (0%)","1"
"          io.git.nanovc.RepoPath.createInstance (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         io.git.nanovc.PathBase.isAbsolute (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.iterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.PathBase.toAbsolutePath ()","0,0 ms (0%)","0,0 ms (0%)","1"
"         io.git.nanovc.PathBase.isAbsolute (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.PathBase.toString ()","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.resolveCommit (io.git.nanovc.Repo, String)","0,012 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.HashReferenceCollection.getReference (String)","0,008 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,007 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"         io.git.nanovc.HashReferenceCollection.lambda$getReference$0 (String, io.git.nanovc.HashReference)","0,0 ms (0%)","0,0 ms (0%)","2"
"        Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoObjectStore.get (String)","0,001 ms (-0%)","0,0 ms (0%)","1"
"         java.util.HashMap.get (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoObjectStore.get (io.git.nanovc.Hash)","0,001 ms (-0%)","0,0 ms (0%)","1"
"         java.util.HashMap.get (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.walk_rev_list_recursively (io.git.nanovc.RepoObjectStore, String, java.util.Map, java.util.List, int)","0,006 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,003 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoObjectStore.get (String)","0,001 ms (-0%)","0,0 ms (0%)","1"
"         java.util.HashMap.get (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.add (Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.add (Object, Object[], int)","0,001 ms (-0%)","0,0 ms (0%)","1"
"          java.util.ArrayList.grow ()","0,0 ms (0%)","0,0 ms (0%)","1"
"           java.util.ArrayList.grow (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,005 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.clearAreas (io.git.nanovc.Repo)","0,003 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.MutableContentArea.clear ()","0,001 ms (-0%)","0,0 ms (0%)","2"
"         java.util.ArrayList.clear ()","0,0 ms (0%)","0,0 ms (0%)","2"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"        io.git.nanovc.ImmutableContentArea.clear ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"         java.util.HashMap.clear ()","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.get (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.elementData (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoPath.atRoot ()","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.ImmutableContentArea.freeze ()","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"     Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"    Self time","0,018 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.RepoHandler.addAll (boolean)","0,014 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.RepoEngine.addAll (io.git.nanovc.Repo, boolean)","0,013 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.MutableContentArea.putContent (String, byte[])","0,009 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.MutableContentArea.getContent (String)","0,008 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,007 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.add (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.add (Object, Object[], int)","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.ContentBase.getCloneOfContentAsByteArray ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"      java.util.ArrayList.iterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"     Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"    io.git.nanovc.MutableContentArea.getContentMapSnapshot ()","0,009 ms (-0%)","0,0 ms (0%)","1"
"     java.util.ArrayList.forEach (java.util.function.Consumer)","0,005 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.ContentMap.putContent (io.git.nanovc.Content)","0,003 ms (-0%)","0,0 ms (0%)","1"
"       java.util.HashMap.put (Object, Object)","0,002 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,001 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"         java.util.HashMap.resize ()","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","1"
"        java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"      java.util.ArrayList.elementAt (Object[], int)","0,0 ms (0%)","0,0 ms (0%)","1"
"     Self time","0,003 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.RepoHandler.putWorkingAreaContent (String, byte[])","0,005 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.RepoEngine.putWorkingAreaContent (io.git.nanovc.Repo, String, byte[])","0,004 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.MutableContentArea.putContent (String, byte[])","0,004 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.MutableContentArea.getContent (String)","0,002 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.add (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.add (Object, Object[], int)","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"     Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"    io.git.nanovc.MutableContentArea.clear ()","0,001 ms (-0%)","0,0 ms (0%)","2"
"     Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"     java.util.ArrayList.clear ()","0,0 ms (0%)","0,0 ms (0%)","2"
"    java.util.HashMap.entrySet ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.RepoHandler.getCurrentBranchName ()","0,0 ms (0%)","0,0 ms (0%)","1"
"     io.git.nanovc.RepoEngine.getCurrentBranchName (io.git.nanovc.Repo)","0,0 ms (0%)","0,0 ms (0%)","1"
"     Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"   Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"  io.nanovc.memory.GitInspirationOperationalDecompositionTests.commit1 ()","0,405 ms (-0%)","0,0 ms (0%)","1"
"   io.nanovc.memory.GitInspirationOperationalDecompositionTests.commit ()","0,404 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.RepoHandler.commitAll (String, boolean)","0,383 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.RepoEngine.commitAll (io.git.nanovc.Repo, String, String, java.time.ZonedDateTime, String, java.time.ZonedDateTime, boolean)","0,343 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.commitAll_UseCommitParentHashes (io.git.nanovc.Repo, String, String, java.time.ZonedDateTime, String, java.time.ZonedDateTime, boolean, String[])","0,329 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.write_tree (io.git.nanovc.Repo)","0,215 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoEngine.hash_object_write (io.git.nanovc.Repo, io.git.nanovc.RepoObject)","0,092 ms (-0%)","0,0 ms (0%)","2"
"         io.git.nanovc.RepoEngine.hash_object (io.git.nanovc.ObjectType, byte[])","0,043 ms (-0%)","0,0 ms (0%)","2"
"          Self time","0,037 ms (-0%)","0,0 ms (0%)","2"
"          io.git.nanovc.Hex.bytesToHex (byte[])","0,005 ms (-0%)","0,0 ms (0%)","2"
"         io.git.nanovc.RepoObjectStore.put (io.git.nanovc.RepoObject)","0,022 ms (-0%)","0,0 ms (0%)","2"
"          java.util.HashMap.computeIfAbsent (Object, java.util.function.Function)","0,007 ms (-0%)","0,0 ms (0%)","2"
"           Self time","0,006 ms (-0%)","0,0 ms (0%)","2"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"           java.util.HashMap.resize ()","0,0 ms (0%)","0,0 ms (0%)","1"
"           io.git.nanovc.RepoObjectStore.lambda$put$0 (String)","0,0 ms (0%)","0,0 ms (0%)","2"
"           java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","2"
"          Self time","0,006 ms (-0%)","0,0 ms (0%)","2"
"          java.util.HashMap.put (Object, Object)","0,005 ms (-0%)","0,0 ms (0%)","4"
"           java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,002 ms (-0%)","0,0 ms (0%)","4"
"            Self time","0,001 ms (-0%)","0,0 ms (0%)","4"
"            java.util.HashMap.resize ()","0,0 ms (0%)","0,0 ms (0%)","3"
"            java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","4"
"           Self time","0,001 ms (-0%)","0,0 ms (0%)","4"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","4"
"          java.util.HashMap.containsKey (Object)","0,002 ms (-0%)","0,0 ms (0%)","2"
"           Self time","0,002 ms (-0%)","0,0 ms (0%)","2"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"           java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"         io.git.nanovc.RepoObject.getByteArray ()","0,021 ms (-0%)","0,0 ms (0%)","2"
"          io.git.nanovc.Tree.writeContentToStream (java.io.DataOutputStream)","0,008 ms (-0%)","0,0 ms (0%)","1"
"           Self time","0,008 ms (-0%)","0,0 ms (0%)","1"
"           java.util.ArrayList.iterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,008 ms (-0%)","0,0 ms (0%)","2"
"          io.git.nanovc.Blob.writeContentToStream (java.io.DataOutputStream)","0,004 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,005 ms (-0%)","0,0 ms (0%)","2"
"         io.git.nanovc.Blob.getObjectType ()","0,0 ms (0%)","0,0 ms (0%)","1"
"         io.git.nanovc.Tree.getObjectType ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.PathBase.splitIntoParts ()","0,069 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,061 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.subList (int, int)","0,002 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.PathBase.lambda$splitIntoParts$0 (String)","0,002 ms (-0%)","0,0 ms (0%)","2"
"         java.util.ArrayList.add (Object)","0,001 ms (-0%)","0,0 ms (0%)","2"
"          java.util.ArrayList.add (Object, Object[], int)","0,001 ms (-0%)","0,0 ms (0%)","2"
"           java.util.ArrayList.grow ()","0,0 ms (0%)","0,0 ms (0%)","1"
"            java.util.ArrayList.grow (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"            Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"         java.util.ArrayList.get (int)","0,001 ms (-0%)","0,0 ms (0%)","1"
"          Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"          java.util.ArrayList.elementData (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"         io.git.nanovc.PathBase.lambda$splitIntoParts$1 (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,022 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.put (Object, Object)","0,010 ms (-0%)","0,0 ms (0%)","4"
"         java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,005 ms (-0%)","0,0 ms (0%)","4"
"          Self time","0,003 ms (-0%)","0,0 ms (0%)","4"
"          java.util.HashMap.resize ()","0,001 ms (-0%)","0,0 ms (0%)","4"
"          java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,001 ms (-0%)","0,0 ms (0%)","4"
"         java.util.HashMap.hash (Object)","0,002 ms (-0%)","0,0 ms (0%)","4"
"         Self time","0,002 ms (-0%)","0,0 ms (0%)","4"
"        io.git.nanovc.PathBase.resolve (String)","0,005 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,003 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.RepoPath.createInstance (String)","0,001 ms (-0%)","0,0 ms (0%)","1"
"          io.git.nanovc.RepoPath.createInstance (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         io.git.nanovc.PathBase.isAbsolute (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.add (Object)","0,004 ms (-0%)","0,0 ms (0%)","3"
"         java.util.ArrayList.add (Object, Object[], int)","0,003 ms (-0%)","0,0 ms (0%)","3"
"          java.util.ArrayList.grow ()","0,001 ms (-0%)","0,0 ms (0%)","3"
"           Self time","0,001 ms (-0%)","0,0 ms (0%)","3"
"           java.util.ArrayList.grow (int)","0,0 ms (0%)","0,0 ms (0%)","3"
"          Self time","0,001 ms (-0%)","0,0 ms (0%)","3"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","3"
"        io.git.nanovc.RepoPath.atRoot ()","0,003 ms (-0%)","0,0 ms (0%)","2"
"        java.util.HashMap.get (Object)","0,003 ms (-0%)","0,0 ms (0%)","4"
"         Self time","0,002 ms (-0%)","0,0 ms (0%)","4"
"         java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","4"
"         java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","4"
"        io.git.nanovc.RepoPath.at (String)","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.get (int)","0,001 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.elementData (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.PathBase.toString ()","0,0 ms (0%)","0,0 ms (0%)","4"
"        java.util.ArrayList.iterator ()","0,0 ms (0%)","0,0 ms (0%)","2"
"       io.git.nanovc.RepoEngine.commit_tree (io.git.nanovc.Repo, String, String, String, java.time.ZonedDateTime, String, java.time.ZonedDateTime, String[])","0,068 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoEngine.hash_object_write (io.git.nanovc.Repo, io.git.nanovc.RepoObject)","0,066 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.RepoObject.getByteArray ()","0,034 ms (-0%)","0,0 ms (0%)","1"
"          io.git.nanovc.Commit.writeContentToStream (java.io.DataOutputStream)","0,031 ms (-0%)","0,0 ms (0%)","1"
"          Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.RepoEngine.hash_object (io.git.nanovc.ObjectType, byte[])","0,019 ms (-0%)","0,0 ms (0%)","1"
"          Self time","0,017 ms (-0%)","0,0 ms (0%)","1"
"          io.git.nanovc.Hex.bytesToHex (byte[])","0,002 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.RepoObjectStore.put (io.git.nanovc.RepoObject)","0,009 ms (-0%)","0,0 ms (0%)","1"
"          java.util.HashMap.computeIfAbsent (Object, java.util.function.Function)","0,003 ms (-0%)","0,0 ms (0%)","1"
"           Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"           io.git.nanovc.RepoObjectStore.lambda$put$0 (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"           java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.HashMap.put (Object, Object)","0,002 ms (-0%)","0,0 ms (0%)","2"
"           java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,001 ms (-0%)","0,0 ms (0%)","2"
"            java.util.HashMap.resize ()","0,0 ms (0%)","0,0 ms (0%)","1"
"            java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","2"
"            Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"          Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"          java.util.HashMap.containsKey (Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"           Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"           java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.Commit.getObjectType ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.update_ref_in_heads (io.git.nanovc.Repo, String, String)","0,018 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoEngine.update_ref (io.git.nanovc.Repo, io.git.nanovc.HashReferenceCollection, String, String)","0,018 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.HashReferenceCollection.getReference (String)","0,013 ms (-0%)","0,0 ms (0%)","1"
"          Self time","0,013 ms (-0%)","0,0 ms (0%)","1"
"          java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,003 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.add (Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"          java.util.ArrayList.add (Object, Object[], int)","0,001 ms (-0%)","0,0 ms (0%)","1"
"           java.util.ArrayList.grow ()","0,0 ms (0%)","0,0 ms (0%)","1"
"            java.util.ArrayList.grow (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"            Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.forEach (java.util.function.Consumer)","0,017 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoEngine.lambda$commitAll_UseCommitParentHashes$7 (boolean, io.git.nanovc.Repo, io.git.nanovc.MutableContent)","0,015 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.ImmutableContentArea.putContent (String, byte[])","0,012 ms (-0%)","0,0 ms (0%)","1"
"          io.git.nanovc.ImmutableContentArea.putContent (io.git.nanovc.ImmutableContent)","0,010 ms (-0%)","0,0 ms (0%)","1"
"           Self time","0,007 ms (-0%)","0,0 ms (0%)","1"
"           io.git.nanovc.ContentMap.putContent (io.git.nanovc.Content)","0,003 ms (-0%)","0,0 ms (0%)","1"
"            java.util.HashMap.put (Object, Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"             java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"             java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,0 ms (0%)","0,0 ms (0%)","1"
"              java.util.HashMap.resize ()","0,0 ms (0%)","0,0 ms (0%)","1"
"              java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","1"
"              Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"             Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"            Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"          Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.ContentBase.getCloneOfContentAsByteArray ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.elementAt (Object[], int)","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,007 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.ImmutableContentArea.clear ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.clear ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.ImmutableContentArea.freeze ()","0,0 ms (0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.resolveReference (io.git.nanovc.Repo, String)","0,010 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.resolveReference (io.git.nanovc.Repo, String)","0,009 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.HashReferenceCollection.getReference (String)","0,007 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,007 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"      Self time","0,003 ms (-0%)","0,0 ms (0%)","1"
"     Self time","0,040 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.RepoHandler.addAll (boolean)","0,016 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.RepoEngine.addAll (io.git.nanovc.Repo, boolean)","0,014 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.MutableContentArea.putContent (String, byte[])","0,009 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.MutableContentArea.getContent (String)","0,006 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,006 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.add (Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.add (Object, Object[], int)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.grow ()","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.ArrayList.grow (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"      Self time","0,003 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.ContentBase.getCloneOfContentAsByteArray ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"      java.util.ArrayList.iterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"     Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"    Self time","0,003 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.MutableContentArea.clear ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"     java.util.ArrayList.clear ()","0,0 ms (0%)","0,0 ms (0%)","1"
"     Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"   Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"  io.nanovc.memory.GitInspirationOperationalDecompositionTests.branch2 ()","0,150 ms (-0%)","0,0 ms (0%)","1"
"   io.git.nanovc.PorcelainCommands.checkout (String)","0,069 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.RepoHandler.checkout (String, int)","0,068 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.RepoEngine.checkout (io.git.nanovc.Repo, String, int)","0,068 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.walk_and_checkout_tree_recursively (io.git.nanovc.Repo, String, io.git.nanovc.RepoPath)","0,030 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.MutableContentArea.putContent (String, byte[])","0,010 ms (-0%)","0,0 ms (0%)","2"
"        io.git.nanovc.MutableContentArea.getContent (String)","0,006 ms (-0%)","0,0 ms (0%)","2"
"         Self time","0,006 ms (-0%)","0,0 ms (0%)","2"
"         java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","2"
"        Self time","0,002 ms (-0%)","0,0 ms (0%)","2"
"        java.util.ArrayList.add (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"         java.util.ArrayList.add (Object, Object[], int)","0,0 ms (0%)","0,0 ms (0%)","2"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"       Self time","0,005 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.PathBase.resolve (String)","0,004 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,003 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoPath.createInstance (String)","0,001 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.RepoPath.createInstance (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.PathBase.isAbsolute (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.ImmutableContentArea.putContent (String, byte[])","0,004 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.ImmutableContentArea.putContent (io.git.nanovc.ImmutableContent)","0,003 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.ContentMap.putContent (io.git.nanovc.Content)","0,002 ms (-0%)","0,0 ms (0%)","1"
"          java.util.HashMap.put (Object, Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"           java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,001 ms (-0%)","0,0 ms (0%)","1"
"            java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","1"
"            Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.cat_file (io.git.nanovc.Repo, String)","0,003 ms (-0%)","0,0 ms (0%)","2"
"        io.git.nanovc.RepoObjectStore.get (String)","0,002 ms (-0%)","0,0 ms (0%)","2"
"         java.util.HashMap.get (Object)","0,001 ms (-0%)","0,0 ms (0%)","2"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"          java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"       java.util.ArrayList.iterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.PathBase.toAbsolutePath ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.PathBase.isAbsolute (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.PathBase.toString ()","0,0 ms (0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.resolveCommit (io.git.nanovc.Repo, String)","0,011 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.HashReferenceCollection.getReference (String)","0,005 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,005 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.HashReferenceCollection.lambda$getReference$0 (String, io.git.nanovc.HashReference)","0,0 ms (0%)","0,0 ms (0%)","3"
"       io.git.nanovc.RepoObjectStore.get (String)","0,002 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.get (Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"         java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoObjectStore.get (io.git.nanovc.Hash)","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.get (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.walk_rev_list_recursively (io.git.nanovc.RepoObjectStore, String, java.util.Map, java.util.List, int)","0,010 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,006 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoObjectStore.get (String)","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.get (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.add (Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.add (Object, Object[], int)","0,001 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.grow ()","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.ArrayList.grow (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.walk_rev_list_recursively (io.git.nanovc.RepoObjectStore, String, java.util.Map, java.util.List, int)","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,008 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.clearAreas (io.git.nanovc.Repo)","0,004 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.MutableContentArea.clear ()","0,001 ms (-0%)","0,0 ms (0%)","2"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"        java.util.ArrayList.clear ()","0,0 ms (0%)","0,0 ms (0%)","2"
"       io.git.nanovc.ImmutableContentArea.clear ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.clear ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"      java.util.ArrayList.get (int)","0,001 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.elementData (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoPath.atRoot ()","0,0 ms (0%)","0,0 ms (0%)","1"
"      io.git.nanovc.ImmutableContentArea.freeze ()","0,0 ms (0%)","0,0 ms (0%)","1"
"     Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"    Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"   io.git.nanovc.RepoHandler.branch (String)","0,060 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.RepoEngine.branch (io.git.nanovc.Repo, String)","0,059 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.RepoEngine.update_ref_in_heads (io.git.nanovc.Repo, String, String)","0,031 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.update_ref (io.git.nanovc.Repo, io.git.nanovc.HashReferenceCollection, String, String)","0,030 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.HashReferenceCollection.getReference (String)","0,027 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,025 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.spliterator ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.HashReferenceCollection.lambda$getReference$0 (String, io.git.nanovc.HashReference)","0,001 ms (-0%)","0,0 ms (0%)","2"
"       Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.add (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.add (Object, Object[], int)","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"     io.git.nanovc.RepoEngine.resolveReference (io.git.nanovc.Repo, String)","0,019 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.resolveReference (io.git.nanovc.Repo, String)","0,018 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.HashReferenceCollection.getReference (String)","0,017 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,016 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.HashReferenceCollection.lambda$getReference$0 (String, io.git.nanovc.HashReference)","0,0 ms (0%)","0,0 ms (0%)","2"
"       Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"      Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"     Self time","0,008 ms (-0%)","0,0 ms (0%)","1"
"    Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"   Self time","0,020 ms (-0%)","0,0 ms (0%)","1"
"  io.nanovc.memory.GitInspirationOperationalDecompositionTests.modify1 ()","0,105 ms (-0%)","0,0 ms (0%)","1"
"   io.git.nanovc.PorcelainCommands.checkout (String)","0,076 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.RepoHandler.checkout (String, int)","0,075 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.RepoEngine.checkout (io.git.nanovc.Repo, String, int)","0,074 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.walk_and_checkout_tree_recursively (io.git.nanovc.Repo, String, io.git.nanovc.RepoPath)","0,044 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.MutableContentArea.putContent (String, byte[])","0,017 ms (-0%)","0,0 ms (0%)","2"
"        io.git.nanovc.MutableContentArea.getContent (String)","0,013 ms (-0%)","0,0 ms (0%)","2"
"         Self time","0,013 ms (-0%)","0,0 ms (0%)","2"
"         java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","2"
"        Self time","0,002 ms (-0%)","0,0 ms (0%)","2"
"        java.util.ArrayList.add (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"         java.util.ArrayList.add (Object, Object[], int)","0,0 ms (0%)","0,0 ms (0%)","2"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"       io.git.nanovc.ImmutableContentArea.putContent (String, byte[])","0,006 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.ImmutableContentArea.putContent (io.git.nanovc.ImmutableContent)","0,004 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.ContentMap.putContent (io.git.nanovc.Content)","0,003 ms (-0%)","0,0 ms (0%)","1"
"          java.util.HashMap.put (Object, Object)","0,002 ms (-0%)","0,0 ms (0%)","1"
"           java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,001 ms (-0%)","0,0 ms (0%)","1"
"            java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","1"
"            Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,006 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.PathBase.resolve (String)","0,005 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,003 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoPath.createInstance (String)","0,001 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.RepoPath.createInstance (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.PathBase.isAbsolute (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.cat_file (io.git.nanovc.Repo, String)","0,003 ms (-0%)","0,0 ms (0%)","2"
"        io.git.nanovc.RepoObjectStore.get (String)","0,002 ms (-0%)","0,0 ms (0%)","2"
"         java.util.HashMap.get (Object)","0,001 ms (-0%)","0,0 ms (0%)","2"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"          java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"       io.git.nanovc.PathBase.toAbsolutePath ()","0,003 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.PathBase.isAbsolute (String)","0,003 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.iterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.PathBase.toString ()","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,009 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.walk_rev_list_recursively (io.git.nanovc.RepoObjectStore, String, java.util.Map, java.util.List, int)","0,008 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,005 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoObjectStore.get (String)","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.get (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.add (Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.add (Object, Object[], int)","0,001 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.grow ()","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.ArrayList.grow (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.clearAreas (io.git.nanovc.Repo)","0,005 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.MutableContentArea.clear ()","0,001 ms (-0%)","0,0 ms (0%)","2"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"        java.util.ArrayList.clear ()","0,0 ms (0%)","0,0 ms (0%)","2"
"       io.git.nanovc.ImmutableContentArea.clear ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.clear ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.resolveCommit (io.git.nanovc.Repo, String)","0,004 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoObjectStore.get (String)","0,002 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.get (Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"         java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"      java.util.ArrayList.get (int)","0,001 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.elementData (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoPath.atRoot ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.ImmutableContentArea.freeze ()","0,0 ms (0%)","0,0 ms (0%)","1"
"     Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"    Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"   Self time","0,019 ms (-0%)","0,0 ms (0%)","1"
"   io.git.nanovc.RepoHandler.putWorkingAreaContent (String, byte[])","0,010 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.RepoEngine.putWorkingAreaContent (io.git.nanovc.Repo, String, byte[])","0,009 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.MutableContentArea.putContent (String, byte[])","0,008 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.MutableContentArea.getContent (String)","0,007 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,006 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.MutableContentArea.lambda$getContent$0 (String, io.git.nanovc.MutableContent)","0,001 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"     Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"    Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"  io.nanovc.memory.GitInspirationOperationalDecompositionTests.branch1 ()","0,089 ms (-0%)","0,0 ms (0%)","1"
"   io.git.nanovc.PorcelainCommands.checkout (String)","0,065 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.RepoHandler.checkout (String, int)","0,064 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.RepoEngine.checkout (io.git.nanovc.Repo, String, int)","0,063 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.walk_and_checkout_tree_recursively (io.git.nanovc.Repo, String, io.git.nanovc.RepoPath)","0,030 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.MutableContentArea.putContent (String, byte[])","0,010 ms (-0%)","0,0 ms (0%)","2"
"        io.git.nanovc.MutableContentArea.getContent (String)","0,007 ms (-0%)","0,0 ms (0%)","2"
"         Self time","0,007 ms (-0%)","0,0 ms (0%)","2"
"         java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","2"
"        Self time","0,002 ms (-0%)","0,0 ms (0%)","2"
"        java.util.ArrayList.add (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"         java.util.ArrayList.add (Object, Object[], int)","0,0 ms (0%)","0,0 ms (0%)","2"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"       Self time","0,005 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.ImmutableContentArea.putContent (String, byte[])","0,004 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.ImmutableContentArea.putContent (io.git.nanovc.ImmutableContent)","0,003 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.ContentMap.putContent (io.git.nanovc.Content)","0,002 ms (-0%)","0,0 ms (0%)","1"
"          java.util.HashMap.put (Object, Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"           java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,001 ms (-0%)","0,0 ms (0%)","1"
"            java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","1"
"            Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.cat_file (io.git.nanovc.Repo, String)","0,003 ms (-0%)","0,0 ms (0%)","2"
"        io.git.nanovc.RepoObjectStore.get (String)","0,002 ms (-0%)","0,0 ms (0%)","2"
"         java.util.HashMap.get (Object)","0,001 ms (-0%)","0,0 ms (0%)","2"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"          java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"       io.git.nanovc.PathBase.resolve (String)","0,003 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoPath.createInstance (String)","0,001 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.RepoPath.createInstance (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.PathBase.isAbsolute (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.iterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.PathBase.toAbsolutePath ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.PathBase.isAbsolute (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.PathBase.toString ()","0,0 ms (0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.resolveCommit (io.git.nanovc.Repo, String)","0,010 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.HashReferenceCollection.getReference (String)","0,005 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,004 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.HashReferenceCollection.lambda$getReference$0 (String, io.git.nanovc.HashReference)","0,0 ms (0%)","0,0 ms (0%)","2"
"       io.git.nanovc.RepoObjectStore.get (String)","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.get (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoObjectStore.get (io.git.nanovc.Hash)","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.get (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.walk_rev_list_recursively (io.git.nanovc.RepoObjectStore, String, java.util.Map, java.util.List, int)","0,007 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,005 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoObjectStore.get (String)","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.get (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.add (Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.add (Object, Object[], int)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.grow ()","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.ArrayList.grow (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,007 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.clearAreas (io.git.nanovc.Repo)","0,005 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.MutableContentArea.clear ()","0,002 ms (-0%)","0,0 ms (0%)","2"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"        java.util.ArrayList.clear ()","0,0 ms (0%)","0,0 ms (0%)","2"
"       Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.ImmutableContentArea.clear ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.clear ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      java.util.ArrayList.get (int)","0,001 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.elementData (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoPath.atRoot ()","0,0 ms (0%)","0,0 ms (0%)","1"
"      io.git.nanovc.ImmutableContentArea.freeze ()","0,0 ms (0%)","0,0 ms (0%)","1"
"     Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"    Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"   io.git.nanovc.RepoHandler.branch (String)","0,021 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.RepoEngine.branch (io.git.nanovc.Repo, String)","0,020 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.RepoEngine.resolveReference (io.git.nanovc.Repo, String)","0,010 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.resolveReference (io.git.nanovc.Repo, String)","0,009 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.HashReferenceCollection.getReference (String)","0,008 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,008 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.HashReferenceCollection.lambda$getReference$0 (String, io.git.nanovc.HashReference)","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"     io.git.nanovc.RepoEngine.update_ref_in_heads (io.git.nanovc.Repo, String, String)","0,008 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.update_ref (io.git.nanovc.Repo, io.git.nanovc.HashReferenceCollection, String, String)","0,007 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.HashReferenceCollection.getReference (String)","0,005 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,004 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.HashReferenceCollection.lambda$getReference$0 (String, io.git.nanovc.HashReference)","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.add (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.add (Object, Object[], int)","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"     Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"    Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"   Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"  io.nanovc.memory.GitInspirationOperationalDecompositionTests.modify1B ()","0,087 ms (-0%)","0,0 ms (0%)","1"
"   io.git.nanovc.PorcelainCommands.checkout (String)","0,064 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.RepoHandler.checkout (String, int)","0,063 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.RepoEngine.checkout (io.git.nanovc.Repo, String, int)","0,063 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.walk_and_checkout_tree_recursively (io.git.nanovc.Repo, String, io.git.nanovc.RepoPath)","0,033 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.MutableContentArea.putContent (String, byte[])","0,014 ms (-0%)","0,0 ms (0%)","2"
"        io.git.nanovc.MutableContentArea.getContent (String)","0,011 ms (-0%)","0,0 ms (0%)","2"
"         Self time","0,011 ms (-0%)","0,0 ms (0%)","2"
"         java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","2"
"        Self time","0,002 ms (-0%)","0,0 ms (0%)","2"
"        java.util.ArrayList.add (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"         java.util.ArrayList.add (Object, Object[], int)","0,0 ms (0%)","0,0 ms (0%)","2"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"       Self time","0,005 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.PathBase.resolve (String)","0,004 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.PathBase.isAbsolute (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoPath.createInstance (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"         io.git.nanovc.RepoPath.createInstance (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.ImmutableContentArea.putContent (String, byte[])","0,004 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.ImmutableContentArea.putContent (io.git.nanovc.ImmutableContent)","0,003 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.ContentMap.putContent (io.git.nanovc.Content)","0,002 ms (-0%)","0,0 ms (0%)","1"
"          java.util.HashMap.put (Object, Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"           java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,0 ms (0%)","0,0 ms (0%)","1"
"            java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","1"
"            Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.cat_file (io.git.nanovc.Repo, String)","0,003 ms (-0%)","0,0 ms (0%)","2"
"        io.git.nanovc.RepoObjectStore.get (String)","0,002 ms (-0%)","0,0 ms (0%)","2"
"         java.util.HashMap.get (Object)","0,001 ms (-0%)","0,0 ms (0%)","2"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"          java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"       java.util.ArrayList.iterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.PathBase.toAbsolutePath ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.PathBase.isAbsolute (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.PathBase.toString ()","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,009 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.walk_rev_list_recursively (io.git.nanovc.RepoObjectStore, String, java.util.Map, java.util.List, int)","0,007 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,004 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoObjectStore.get (String)","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.get (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.add (Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.add (Object, Object[], int)","0,001 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.grow ()","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.ArrayList.grow (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.clearAreas (io.git.nanovc.Repo)","0,005 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.MutableContentArea.clear ()","0,001 ms (-0%)","0,0 ms (0%)","2"
"        java.util.ArrayList.clear ()","0,0 ms (0%)","0,0 ms (0%)","2"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"       io.git.nanovc.ImmutableContentArea.clear ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.clear ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.resolveCommit (io.git.nanovc.Repo, String)","0,004 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoObjectStore.get (String)","0,002 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.get (Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"         java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"      java.util.ArrayList.get (int)","0,001 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.elementData (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoPath.atRoot ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.ImmutableContentArea.freeze ()","0,0 ms (0%)","0,0 ms (0%)","1"
"     Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"    Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"   Self time","0,014 ms (-0%)","0,0 ms (0%)","1"
"   io.git.nanovc.RepoHandler.putWorkingAreaContent (String, byte[])","0,008 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.RepoEngine.putWorkingAreaContent (io.git.nanovc.Repo, String, byte[])","0,007 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.MutableContentArea.putContent (String, byte[])","0,007 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.MutableContentArea.getContent (String)","0,006 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,005 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.MutableContentArea.lambda$getContent$0 (String, io.git.nanovc.MutableContent)","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"     Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"    Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"  Self time","0,067 ms (-0%)","0,0 ms (0%)","1"
"  io.nanovc.memory.GitInspirationOperationalDecompositionTests.newContent ()","0,031 ms (-0%)","0,0 ms (0%)","1"
"   io.git.nanovc.RepoHandler.putWorkingAreaContent (String, byte[])","0,026 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.RepoEngine.putWorkingAreaContent (io.git.nanovc.Repo, String, byte[])","0,024 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.MutableContentArea.putContent (String, byte[])","0,023 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.MutableContentArea.getContent (String)","0,018 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,017 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,003 ms (-0%)","0,0 ms (0%)","1"
"      java.util.ArrayList.add (Object)","0,002 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.add (Object, Object[], int)","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.grow ()","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.grow (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"     Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"    Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"   Self time","0,005 ms (-0%)","0,0 ms (0%)","1"
" java.util.HashMap.put (Object, Object)","2,93 ms (-0%)","0,0 ms (0%)","196"
"  java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","1,75 ms (-0%)","0,0 ms (0%)","196"
"   Self time","1,69 ms (-0%)","0,0 ms (0%)","196"
"   java.util.HashMap.resize ()","0,040 ms (-0%)","0,0 ms (0%)","28"
"   java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,022 ms (-0%)","0,0 ms (0%)","98"
"  java.util.HashMap.hash (Object)","0,937 ms (-0%)","0,0 ms (0%)","196"
"  Self time","0,240 ms (-0%)","0,0 ms (0%)","196"
" io.nanovc.memory.OperationalDecompositionTests.NCB ()","1,50 ms (-0%)","0,0 ms (0%)","1"
"  io.nanovc.memory.GitInspirationOperationalDecompositionTests.branch ()","1,8 ms (-0%)","0,0 ms (0%)","1"
"   io.git.nanovc.PorcelainCommands.checkout (String)","0,978 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.RepoHandler.checkout (String, int)","0,957 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.RepoEngine.checkout (io.git.nanovc.Repo, String, int)","0,938 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.walk_and_checkout_tree_recursively (io.git.nanovc.Repo, String, io.git.nanovc.RepoPath)","0,797 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,702 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.MutableContentArea.putContent (String, byte[])","0,032 ms (-0%)","0,0 ms (0%)","2"
"        io.git.nanovc.MutableContentArea.getContent (String)","0,027 ms (-0%)","0,0 ms (0%)","2"
"         Self time","0,025 ms (-0%)","0,0 ms (0%)","2"
"         java.util.ArrayList.spliterator ()","0,002 ms (-0%)","0,0 ms (0%)","2"
"        Self time","0,003 ms (-0%)","0,0 ms (0%)","2"
"        java.util.ArrayList.add (Object)","0,002 ms (-0%)","0,0 ms (0%)","2"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"         java.util.ArrayList.add (Object, Object[], int)","0,0 ms (0%)","0,0 ms (0%)","2"
"       io.git.nanovc.RepoEngine$1.<clinit> ()","0,022 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,018 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.ObjectType.values ()","0,003 ms (-0%)","0,0 ms (0%)","1"
"       java.util.HashMap.get (Object)","0,011 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,011 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"        java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.cat_file (io.git.nanovc.Repo, String)","0,008 ms (-0%)","0,0 ms (0%)","2"
"        io.git.nanovc.RepoObjectStore.get (String)","0,005 ms (-0%)","0,0 ms (0%)","2"
"         java.util.HashMap.get (Object)","0,003 ms (-0%)","0,0 ms (0%)","2"
"          Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"          java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"         Self time","0,002 ms (-0%)","0,0 ms (0%)","2"
"        Self time","0,002 ms (-0%)","0,0 ms (0%)","2"
"       io.git.nanovc.ImmutableContentArea.putContent (String, byte[])","0,007 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.ImmutableContentArea.putContent (io.git.nanovc.ImmutableContent)","0,005 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.ContentMap.putContent (io.git.nanovc.Content)","0,003 ms (-0%)","0,0 ms (0%)","1"
"          java.util.HashMap.put (Object, Object)","0,002 ms (-0%)","0,0 ms (0%)","1"
"           java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,001 ms (-0%)","0,0 ms (0%)","1"
"            Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"            java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","1"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.PathBase.resolve (String)","0,004 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoPath.createInstance (String)","0,001 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.RepoPath.createInstance (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.PathBase.isAbsolute (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.get (int)","0,003 ms (-0%)","0,0 ms (0%)","3"
"        Self time","0,003 ms (-0%)","0,0 ms (0%)","3"
"        java.util.ArrayList.elementData (int)","0,0 ms (0%)","0,0 ms (0%)","3"
"       io.git.nanovc.PathBase.toAbsolutePath ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.PathBase.isAbsolute (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.iterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.PathBase.toString ()","0,0 ms (0%)","0,0 ms (0%)","1"
"       java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"       java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,069 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.walk_rev_list_recursively (io.git.nanovc.RepoObjectStore, String, java.util.Map, java.util.List, int)","0,040 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,032 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.add (Object)","0,005 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,003 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.add (Object, Object[], int)","0,002 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.grow ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"          java.util.ArrayList.grow (int)","0,001 ms (-0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoObjectStore.get (String)","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.get (Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"         java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.resolveCommit (io.git.nanovc.Repo, String)","0,019 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.HashReferenceCollection.getReference (String)","0,013 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,011 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.HashReferenceCollection.lambda$getReference$0 (String, io.git.nanovc.HashReference)","0,001 ms (-0%)","0,0 ms (0%)","2"
"        java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,003 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoObjectStore.get (String)","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.get (Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"         java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoObjectStore.get (io.git.nanovc.Hash)","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.get (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.clearAreas (io.git.nanovc.Repo)","0,009 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,005 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.MutableContentArea.clear ()","0,002 ms (-0%)","0,0 ms (0%)","2"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"        java.util.ArrayList.clear ()","0,0 ms (0%)","0,0 ms (0%)","2"
"       io.git.nanovc.ImmutableContentArea.clear ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.clear ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      java.util.ArrayList.get (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.elementData (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoPath.atRoot ()","0,0 ms (0%)","0,0 ms (0%)","1"
"      io.git.nanovc.ImmutableContentArea.freeze ()","0,0 ms (0%)","0,0 ms (0%)","1"
"     Self time","0,019 ms (-0%)","0,0 ms (0%)","1"
"    Self time","0,021 ms (-0%)","0,0 ms (0%)","1"
"   Self time","0,060 ms (-0%)","0,0 ms (0%)","1"
"   io.git.nanovc.RepoHandler.branch (String)","0,048 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.RepoEngine.branch (io.git.nanovc.Repo, String)","0,029 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.RepoEngine.resolveReference (io.git.nanovc.Repo, String)","0,018 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.resolveReference (io.git.nanovc.Repo, String)","0,017 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.HashReferenceCollection.getReference (String)","0,016 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,014 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.HashReferenceCollection.lambda$getReference$0 (String, io.git.nanovc.HashReference)","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"      Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.RepoEngine.update_ref_in_heads (io.git.nanovc.Repo, String, String)","0,008 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.update_ref (io.git.nanovc.Repo, io.git.nanovc.HashReferenceCollection, String, String)","0,008 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.HashReferenceCollection.getReference (String)","0,005 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,004 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.HashReferenceCollection.lambda$getReference$0 (String, io.git.nanovc.HashReference)","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.add (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.add (Object, Object[], int)","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"     Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"    Self time","0,019 ms (-0%)","0,0 ms (0%)","1"
"  io.nanovc.memory.GitInspirationOperationalDecompositionTests.commit ()","0,374 ms (-0%)","0,0 ms (0%)","1"
"   io.git.nanovc.RepoHandler.commitAll (String, boolean)","0,355 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.RepoEngine.commitAll (io.git.nanovc.Repo, String, String, java.time.ZonedDateTime, String, java.time.ZonedDateTime, boolean)","0,329 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.RepoEngine.commitAll_UseCommitParentHashes (io.git.nanovc.Repo, String, String, java.time.ZonedDateTime, String, java.time.ZonedDateTime, boolean, String[])","0,318 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.write_tree (io.git.nanovc.Repo)","0,187 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.hash_object_write (io.git.nanovc.Repo, io.git.nanovc.RepoObject)","0,113 ms (-0%)","0,0 ms (0%)","2"
"        io.git.nanovc.RepoEngine.hash_object (io.git.nanovc.ObjectType, byte[])","0,065 ms (-0%)","0,0 ms (0%)","2"
"         Self time","0,060 ms (-0%)","0,0 ms (0%)","2"
"         io.git.nanovc.Hex.bytesToHex (byte[])","0,005 ms (-0%)","0,0 ms (0%)","2"
"        io.git.nanovc.RepoObjectStore.put (io.git.nanovc.RepoObject)","0,029 ms (-0%)","0,0 ms (0%)","2"
"         java.util.HashMap.put (Object, Object)","0,015 ms (-0%)","0,0 ms (0%)","4"
"          Self time","0,010 ms (-0%)","0,0 ms (0%)","4"
"          java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,003 ms (-0%)","0,0 ms (0%)","4"
"           java.util.HashMap.resize ()","0,001 ms (-0%)","0,0 ms (0%)","3"
"           Self time","0,001 ms (-0%)","0,0 ms (0%)","4"
"           java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","4"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","4"
"         java.util.HashMap.computeIfAbsent (Object, java.util.function.Function)","0,006 ms (-0%)","0,0 ms (0%)","2"
"          Self time","0,004 ms (-0%)","0,0 ms (0%)","2"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"          java.util.HashMap.resize ()","0,0 ms (0%)","0,0 ms (0%)","1"
"          io.git.nanovc.RepoObjectStore.lambda$put$0 (String)","0,0 ms (0%)","0,0 ms (0%)","2"
"          java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","2"
"         Self time","0,004 ms (-0%)","0,0 ms (0%)","2"
"         java.util.HashMap.containsKey (Object)","0,002 ms (-0%)","0,0 ms (0%)","2"
"          Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"          java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"        io.git.nanovc.RepoObject.getByteArray ()","0,014 ms (-0%)","0,0 ms (0%)","2"
"         io.git.nanovc.Tree.writeContentToStream (java.io.DataOutputStream)","0,006 ms (-0%)","0,0 ms (0%)","1"
"          Self time","0,006 ms (-0%)","0,0 ms (0%)","1"
"          java.util.ArrayList.iterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,004 ms (-0%)","0,0 ms (0%)","2"
"         io.git.nanovc.Blob.writeContentToStream (java.io.DataOutputStream)","0,003 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,003 ms (-0%)","0,0 ms (0%)","2"
"        io.git.nanovc.Blob.getObjectType ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.Tree.getObjectType ()","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.PathBase.splitIntoParts ()","0,034 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,028 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.add (Object)","0,002 ms (-0%)","0,0 ms (0%)","2"
"         java.util.ArrayList.add (Object, Object[], int)","0,001 ms (-0%)","0,0 ms (0%)","2"
"          java.util.ArrayList.grow ()","0,0 ms (0%)","0,0 ms (0%)","1"
"           java.util.ArrayList.grow (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"        java.util.ArrayList.subList (int, int)","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.get (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.elementData (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.PathBase.lambda$splitIntoParts$0 (String)","0,0 ms (0%)","0,0 ms (0%)","2"
"        io.git.nanovc.PathBase.lambda$splitIntoParts$1 (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,014 ms (-0%)","0,0 ms (0%)","1"
"       java.util.HashMap.put (Object, Object)","0,010 ms (-0%)","0,0 ms (0%)","4"
"        java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,007 ms (-0%)","0,0 ms (0%)","4"
"         Self time","0,004 ms (-0%)","0,0 ms (0%)","4"
"         java.util.HashMap.resize ()","0,002 ms (-0%)","0,0 ms (0%)","4"
"         java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","4"
"        java.util.HashMap.hash (Object)","0,001 ms (-0%)","0,0 ms (0%)","4"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","4"
"       java.util.ArrayList.add (Object)","0,005 ms (-0%)","0,0 ms (0%)","3"
"        java.util.ArrayList.add (Object, Object[], int)","0,003 ms (-0%)","0,0 ms (0%)","3"
"         java.util.ArrayList.grow ()","0,002 ms (-0%)","0,0 ms (0%)","3"
"          java.util.ArrayList.grow (int)","0,001 ms (-0%)","0,0 ms (0%)","3"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","3"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","3"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","3"
"       io.git.nanovc.PathBase.resolve (String)","0,003 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.PathBase.isAbsolute (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoPath.createInstance (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"         io.git.nanovc.RepoPath.createInstance (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       java.util.HashMap.get (Object)","0,002 ms (-0%)","0,0 ms (0%)","4"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","4"
"        java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","4"
"        java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","4"
"       io.git.nanovc.RepoPath.atRoot ()","0,001 ms (-0%)","0,0 ms (0%)","2"
"       io.git.nanovc.PathBase.toString ()","0,0 ms (0%)","0,0 ms (0%)","4"
"       java.util.ArrayList.iterator ()","0,0 ms (0%)","0,0 ms (0%)","2"
"       io.git.nanovc.RepoPath.at (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.get (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.elementData (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.commit_tree (io.git.nanovc.Repo, String, String, String, java.time.ZonedDateTime, String, java.time.ZonedDateTime, String[])","0,101 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.hash_object_write (io.git.nanovc.Repo, io.git.nanovc.RepoObject)","0,099 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoEngine.hash_object (io.git.nanovc.ObjectType, byte[])","0,043 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,041 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.Hex.bytesToHex (byte[])","0,002 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoObject.getByteArray ()","0,024 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.Commit.writeContentToStream (java.io.DataOutputStream)","0,022 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoObjectStore.put (io.git.nanovc.RepoObject)","0,020 ms (-0%)","0,0 ms (0%)","1"
"         java.util.HashMap.put (Object, Object)","0,014 ms (-0%)","0,0 ms (0%)","2"
"          java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,013 ms (-0%)","0,0 ms (0%)","2"
"           Self time","0,012 ms (-0%)","0,0 ms (0%)","2"
"           java.util.HashMap.resize ()","0,0 ms (0%)","0,0 ms (0%)","1"
"           java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","2"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"         java.util.HashMap.computeIfAbsent (Object, java.util.function.Function)","0,002 ms (-0%)","0,0 ms (0%)","1"
"          Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          io.git.nanovc.RepoObjectStore.lambda$put$0 (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"         java.util.HashMap.containsKey (Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,010 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.Commit.getObjectType ()","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.update_ref_in_heads (io.git.nanovc.Repo, String, String)","0,014 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.update_ref (io.git.nanovc.Repo, io.git.nanovc.HashReferenceCollection, String, String)","0,014 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.HashReferenceCollection.getReference (String)","0,009 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,008 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.add (Object)","0,002 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.add (Object, Object[], int)","0,002 ms (-0%)","0,0 ms (0%)","1"
"          java.util.ArrayList.grow ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"           java.util.ArrayList.grow (int)","0,001 ms (-0%)","0,0 ms (0%)","1"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      java.util.ArrayList.forEach (java.util.function.Consumer)","0,008 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.lambda$commitAll_UseCommitParentHashes$7 (boolean, io.git.nanovc.Repo, io.git.nanovc.MutableContent)","0,006 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.ImmutableContentArea.putContent (String, byte[])","0,004 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.ImmutableContentArea.putContent (io.git.nanovc.ImmutableContent)","0,003 ms (-0%)","0,0 ms (0%)","1"
"          io.git.nanovc.ContentMap.putContent (io.git.nanovc.Content)","0,002 ms (-0%)","0,0 ms (0%)","1"
"           java.util.HashMap.put (Object, Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"            java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,001 ms (-0%)","0,0 ms (0%)","1"
"             java.util.HashMap.resize ()","0,0 ms (0%)","0,0 ms (0%)","1"
"             java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","1"
"             Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"            java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"            Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.ContentBase.getCloneOfContentAsByteArray ()","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.elementAt (Object[], int)","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,005 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.ImmutableContentArea.clear ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"       java.util.HashMap.clear ()","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      io.git.nanovc.ImmutableContentArea.freeze ()","0,0 ms (0%)","0,0 ms (0%)","1"
"     io.git.nanovc.RepoEngine.resolveReference (io.git.nanovc.Repo, String)","0,008 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.resolveReference (io.git.nanovc.Repo, String)","0,006 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.HashReferenceCollection.getReference (String)","0,005 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,005 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"      Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"     Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"    Self time","0,026 ms (-0%)","0,0 ms (0%)","1"
"   io.git.nanovc.RepoHandler.addAll (boolean)","0,016 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.RepoEngine.addAll (io.git.nanovc.Repo, boolean)","0,015 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.MutableContentArea.putContent (String, byte[])","0,007 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.MutableContentArea.getContent (String)","0,004 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,004 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"      java.util.ArrayList.add (Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.add (Object, Object[], int)","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.grow ()","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.grow (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"     io.git.nanovc.ContentBase.getCloneOfContentAsByteArray ()","0,005 ms (-0%)","0,0 ms (0%)","1"
"     Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"     java.util.ArrayList.iterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"    Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"   Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"   io.git.nanovc.MutableContentArea.clear ()","0,0 ms (0%)","0,0 ms (0%)","1"
"    java.util.ArrayList.clear ()","0,0 ms (0%)","0,0 ms (0%)","1"
"    Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"  io.nanovc.memory.GitInspirationOperationalDecompositionTests.newContent ()","0,022 ms (-0%)","0,0 ms (0%)","1"
"   io.git.nanovc.RepoHandler.putWorkingAreaContent (String, byte[])","0,019 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.RepoEngine.putWorkingAreaContent (io.git.nanovc.Repo, String, byte[])","0,018 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.MutableContentArea.putContent (String, byte[])","0,017 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.MutableContentArea.getContent (String)","0,012 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,011 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.spliterator ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"      java.util.ArrayList.add (Object)","0,003 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.add (Object, Object[], int)","0,002 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.grow ()","0,002 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.grow (int)","0,001 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"     Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"    Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"   Self time","0,003 ms (-0%)","0,0 ms (0%)","1"
"  Self time","0,020 ms (-0%)","0,0 ms (0%)","1"
" java.util.ArrayList.add (Object)","0,858 ms (-0%)","0,0 ms (0%)","327"
"  java.util.ArrayList.add (Object, Object[], int)","0,654 ms (-0%)","0,0 ms (0%)","327"
"   Self time","0,546 ms (-0%)","0,0 ms (0%)","327"
"   java.util.ArrayList.grow ()","0,107 ms (-0%)","0,0 ms (0%)","65"
"    java.util.ArrayList.grow (int)","0,067 ms (-0%)","0,0 ms (0%)","65"
"    Self time","0,040 ms (-0%)","0,0 ms (0%)","65"
"  Self time","0,204 ms (-0%)","0,0 ms (0%)","327"
" io.nanovc.memory.OperationalDecompositionTests.beforeEachTest ()","0,661 ms (-0%)","0,0 ms (0%)","7"
"  io.nanovc.memory.GitInspirationOperationalDecompositionTests.createRepo ()","0,619 ms (-0%)","0,0 ms (0%)","7"
"   io.git.nanovc.RepoHandler.init ()","0,511 ms (-0%)","0,0 ms (0%)","7"
"    Self time","0,353 ms (-0%)","0,0 ms (0%)","7"
"    io.git.nanovc.RepoEngine.init (io.git.nanovc.Repo)","0,129 ms (-0%)","0,0 ms (0%)","7"
"    java.util.HashMap.get (Object)","0,028 ms (-0%)","0,0 ms (0%)","7"
"     Self time","0,019 ms (-0%)","0,0 ms (0%)","7"
"     java.util.HashMap.hash (Object)","0,004 ms (-0%)","0,0 ms (0%)","7"
"     java.util.HashMap.getNode (int, Object)","0,004 ms (-0%)","0,0 ms (0%)","7"
"   Self time","0,072 ms (-0%)","0,0 ms (0%)","7"
"   io.git.nanovc.NanoVersionControl.newHandler ()","0,025 ms (-0%)","0,0 ms (0%)","7"
"   io.git.nanovc.RepoHandler.asNanoCommands ()","0,005 ms (-0%)","0,0 ms (0%)","7"
"   io.git.nanovc.RepoHandler.setAuthorAndCommitter (String)","0,004 ms (-0%)","0,0 ms (0%)","7"
"  Self time","0,042 ms (-0%)","0,0 ms (0%)","7"
" io.nanovc.memory.OperationalDecompositionTests.NCO ()","0,475 ms (-0%)","0,0 ms (0%)","1"
"  io.nanovc.memory.GitInspirationOperationalDecompositionTests.commit ()","0,341 ms (-0%)","0,0 ms (0%)","1"
"   io.git.nanovc.RepoHandler.commitAll (String, boolean)","0,327 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.RepoEngine.commitAll (io.git.nanovc.Repo, String, String, java.time.ZonedDateTime, String, java.time.ZonedDateTime, boolean)","0,300 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.RepoEngine.commitAll_UseCommitParentHashes (io.git.nanovc.Repo, String, String, java.time.ZonedDateTime, String, java.time.ZonedDateTime, boolean, String[])","0,290 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.write_tree (io.git.nanovc.Repo)","0,169 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.hash_object_write (io.git.nanovc.Repo, io.git.nanovc.RepoObject)","0,090 ms (-0%)","0,0 ms (0%)","2"
"        io.git.nanovc.RepoEngine.hash_object (io.git.nanovc.ObjectType, byte[])","0,050 ms (-0%)","0,0 ms (0%)","2"
"         Self time","0,045 ms (-0%)","0,0 ms (0%)","2"
"         io.git.nanovc.Hex.bytesToHex (byte[])","0,005 ms (-0%)","0,0 ms (0%)","2"
"        io.git.nanovc.RepoObjectStore.put (io.git.nanovc.RepoObject)","0,019 ms (-0%)","0,0 ms (0%)","2"
"         java.util.HashMap.computeIfAbsent (Object, java.util.function.Function)","0,007 ms (-0%)","0,0 ms (0%)","2"
"          Self time","0,004 ms (-0%)","0,0 ms (0%)","2"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"          java.util.HashMap.resize ()","0,0 ms (0%)","0,0 ms (0%)","1"
"          io.git.nanovc.RepoObjectStore.lambda$put$0 (String)","0,0 ms (0%)","0,0 ms (0%)","2"
"          java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","2"
"         java.util.HashMap.put (Object, Object)","0,005 ms (-0%)","0,0 ms (0%)","4"
"          java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,004 ms (-0%)","0,0 ms (0%)","4"
"           Self time","0,002 ms (-0%)","0,0 ms (0%)","4"
"           java.util.HashMap.resize ()","0,001 ms (-0%)","0,0 ms (0%)","3"
"           java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","4"
"          Self time","0,001 ms (-0%)","0,0 ms (0%)","4"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","4"
"         Self time","0,004 ms (-0%)","0,0 ms (0%)","2"
"         java.util.HashMap.containsKey (Object)","0,002 ms (-0%)","0,0 ms (0%)","2"
"          Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"          java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"        io.git.nanovc.RepoObject.getByteArray ()","0,016 ms (-0%)","0,0 ms (0%)","2"
"         io.git.nanovc.Tree.writeContentToStream (java.io.DataOutputStream)","0,006 ms (-0%)","0,0 ms (0%)","1"
"          Self time","0,006 ms (-0%)","0,0 ms (0%)","1"
"          java.util.ArrayList.iterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,005 ms (-0%)","0,0 ms (0%)","2"
"         io.git.nanovc.Blob.writeContentToStream (java.io.DataOutputStream)","0,003 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,003 ms (-0%)","0,0 ms (0%)","2"
"        io.git.nanovc.Blob.getObjectType ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.Tree.getObjectType ()","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.PathBase.splitIntoParts ()","0,039 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,033 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.add (Object)","0,002 ms (-0%)","0,0 ms (0%)","2"
"         java.util.ArrayList.add (Object, Object[], int)","0,001 ms (-0%)","0,0 ms (0%)","2"
"          java.util.ArrayList.grow ()","0,0 ms (0%)","0,0 ms (0%)","1"
"           java.util.ArrayList.grow (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"        java.util.ArrayList.subList (int, int)","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.get (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.elementData (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.PathBase.lambda$splitIntoParts$0 (String)","0,0 ms (0%)","0,0 ms (0%)","2"
"        io.git.nanovc.PathBase.lambda$splitIntoParts$1 (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,015 ms (-0%)","0,0 ms (0%)","1"
"       java.util.HashMap.put (Object, Object)","0,008 ms (-0%)","0,0 ms (0%)","4"
"        java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,005 ms (-0%)","0,0 ms (0%)","4"
"         java.util.HashMap.resize ()","0,002 ms (-0%)","0,0 ms (0%)","4"
"         Self time","0,002 ms (-0%)","0,0 ms (0%)","4"
"         java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","4"
"        java.util.HashMap.hash (Object)","0,001 ms (-0%)","0,0 ms (0%)","4"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","4"
"       java.util.ArrayList.add (Object)","0,005 ms (-0%)","0,0 ms (0%)","3"
"        java.util.ArrayList.add (Object, Object[], int)","0,003 ms (-0%)","0,0 ms (0%)","3"
"         java.util.ArrayList.grow ()","0,002 ms (-0%)","0,0 ms (0%)","3"
"          java.util.ArrayList.grow (int)","0,001 ms (-0%)","0,0 ms (0%)","3"
"          Self time","0,001 ms (-0%)","0,0 ms (0%)","3"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","3"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","3"
"       io.git.nanovc.PathBase.resolve (String)","0,003 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.PathBase.isAbsolute (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoPath.createInstance (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"         io.git.nanovc.RepoPath.createInstance (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       java.util.HashMap.get (Object)","0,002 ms (-0%)","0,0 ms (0%)","4"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","4"
"        java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","4"
"        java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","4"
"       io.git.nanovc.RepoPath.atRoot ()","0,001 ms (-0%)","0,0 ms (0%)","2"
"       io.git.nanovc.PathBase.toString ()","0,0 ms (0%)","0,0 ms (0%)","4"
"       java.util.ArrayList.iterator ()","0,0 ms (0%)","0,0 ms (0%)","2"
"       io.git.nanovc.RepoPath.at (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.get (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.elementData (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.commit_tree (io.git.nanovc.Repo, String, String, String, java.time.ZonedDateTime, String, java.time.ZonedDateTime, String[])","0,093 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.hash_object_write (io.git.nanovc.Repo, io.git.nanovc.RepoObject)","0,092 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoObject.getByteArray ()","0,046 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.Commit.writeContentToStream (java.io.DataOutputStream)","0,044 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoEngine.hash_object (io.git.nanovc.ObjectType, byte[])","0,035 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,033 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.Hex.bytesToHex (byte[])","0,002 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoObjectStore.put (io.git.nanovc.RepoObject)","0,008 ms (-0%)","0,0 ms (0%)","1"
"         java.util.HashMap.computeIfAbsent (Object, java.util.function.Function)","0,002 ms (-0%)","0,0 ms (0%)","1"
"          Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          io.git.nanovc.RepoObjectStore.lambda$put$0 (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.put (Object, Object)","0,002 ms (-0%)","0,0 ms (0%)","2"
"          java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,001 ms (-0%)","0,0 ms (0%)","2"
"           java.util.HashMap.resize ()","0,0 ms (0%)","0,0 ms (0%)","1"
"           java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","2"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"         java.util.HashMap.containsKey (Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.Commit.getObjectType ()","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.update_ref_in_heads (io.git.nanovc.Repo, String, String)","0,012 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.update_ref (io.git.nanovc.Repo, io.git.nanovc.HashReferenceCollection, String, String)","0,011 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.HashReferenceCollection.getReference (String)","0,007 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,006 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.add (Object)","0,002 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.add (Object, Object[], int)","0,001 ms (-0%)","0,0 ms (0%)","1"
"          java.util.ArrayList.grow ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"           java.util.ArrayList.grow (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      java.util.ArrayList.forEach (java.util.function.Consumer)","0,008 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.lambda$commitAll_UseCommitParentHashes$7 (boolean, io.git.nanovc.Repo, io.git.nanovc.MutableContent)","0,006 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.ImmutableContentArea.putContent (String, byte[])","0,004 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.ImmutableContentArea.putContent (io.git.nanovc.ImmutableContent)","0,003 ms (-0%)","0,0 ms (0%)","1"
"          io.git.nanovc.ContentMap.putContent (io.git.nanovc.Content)","0,002 ms (-0%)","0,0 ms (0%)","1"
"           java.util.HashMap.put (Object, Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"            java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,001 ms (-0%)","0,0 ms (0%)","1"
"             java.util.HashMap.resize ()","0,0 ms (0%)","0,0 ms (0%)","1"
"             java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","1"
"             Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"            java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"            Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.ContentBase.getCloneOfContentAsByteArray ()","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.elementAt (Object[], int)","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,005 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.ImmutableContentArea.clear ()","0,0 ms (0%)","0,0 ms (0%)","1"
"       java.util.HashMap.clear ()","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      io.git.nanovc.ImmutableContentArea.freeze ()","0,0 ms (0%)","0,0 ms (0%)","1"
"     io.git.nanovc.RepoEngine.resolveReference (io.git.nanovc.Repo, String)","0,008 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.resolveReference (io.git.nanovc.Repo, String)","0,006 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.HashReferenceCollection.getReference (String)","0,005 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,004 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"      Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"     Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"    Self time","0,027 ms (-0%)","0,0 ms (0%)","1"
"   io.git.nanovc.RepoHandler.addAll (boolean)","0,010 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.RepoEngine.addAll (io.git.nanovc.Repo, boolean)","0,010 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.MutableContentArea.putContent (String, byte[])","0,006 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.MutableContentArea.getContent (String)","0,003 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,003 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"      java.util.ArrayList.add (Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.add (Object, Object[], int)","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.grow ()","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.grow (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"     Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.ContentBase.getCloneOfContentAsByteArray ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"     java.util.ArrayList.iterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"    Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"   Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"   io.git.nanovc.MutableContentArea.clear ()","0,0 ms (0%)","0,0 ms (0%)","1"
"    java.util.ArrayList.clear ()","0,0 ms (0%)","0,0 ms (0%)","1"
"    Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"  io.nanovc.memory.GitInspirationOperationalDecompositionTests.checkout ()","0,073 ms (-0%)","0,0 ms (0%)","1"
"   io.git.nanovc.PorcelainCommands.checkout (String)","0,058 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.RepoHandler.checkout (String, int)","0,056 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.RepoEngine.checkout (io.git.nanovc.Repo, String, int)","0,056 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.walk_and_checkout_tree_recursively (io.git.nanovc.Repo, String, io.git.nanovc.RepoPath)","0,028 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.MutableContentArea.putContent (String, byte[])","0,013 ms (-0%)","0,0 ms (0%)","2"
"        io.git.nanovc.MutableContentArea.getContent (String)","0,010 ms (-0%)","0,0 ms (0%)","2"
"         Self time","0,009 ms (-0%)","0,0 ms (0%)","2"
"         java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","2"
"        Self time","0,002 ms (-0%)","0,0 ms (0%)","2"
"        java.util.ArrayList.add (Object)","0,001 ms (-0%)","0,0 ms (0%)","2"
"         java.util.ArrayList.add (Object, Object[], int)","0,0 ms (0%)","0,0 ms (0%)","2"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"       Self time","0,004 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.PathBase.resolve (String)","0,003 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.PathBase.isAbsolute (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoPath.createInstance (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"         io.git.nanovc.RepoPath.createInstance (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.ImmutableContentArea.putContent (String, byte[])","0,003 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.ImmutableContentArea.putContent (io.git.nanovc.ImmutableContent)","0,002 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.ContentMap.putContent (io.git.nanovc.Content)","0,001 ms (-0%)","0,0 ms (0%)","1"
"          java.util.HashMap.put (Object, Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"           java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"           java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,0 ms (0%)","0,0 ms (0%)","1"
"            java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","1"
"            Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.cat_file (io.git.nanovc.Repo, String)","0,002 ms (-0%)","0,0 ms (0%)","2"
"        io.git.nanovc.RepoObjectStore.get (String)","0,001 ms (-0%)","0,0 ms (0%)","2"
"         java.util.HashMap.get (Object)","0,001 ms (-0%)","0,0 ms (0%)","2"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"          java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"       java.util.ArrayList.iterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.PathBase.toAbsolutePath ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.PathBase.isAbsolute (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.PathBase.toString ()","0,0 ms (0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.walk_rev_list_recursively (io.git.nanovc.RepoObjectStore, String, java.util.Map, java.util.List, int)","0,011 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.add (Object)","0,006 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.add (Object, Object[], int)","0,005 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.grow ()","0,004 ms (-0%)","0,0 ms (0%)","1"
"          Self time","0,004 ms (-0%)","0,0 ms (0%)","1"
"          java.util.ArrayList.grow (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,004 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoObjectStore.get (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"        java.util.HashMap.get (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,006 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.clearAreas (io.git.nanovc.Repo)","0,004 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.MutableContentArea.clear ()","0,001 ms (-0%)","0,0 ms (0%)","2"
"        java.util.ArrayList.clear ()","0,0 ms (0%)","0,0 ms (0%)","2"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"       io.git.nanovc.ImmutableContentArea.clear ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.clear ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.resolveCommit (io.git.nanovc.Repo, String)","0,003 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoObjectStore.get (String)","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.HashMap.get (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      java.util.ArrayList.get (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.elementData (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoPath.atRoot ()","0,0 ms (0%)","0,0 ms (0%)","1"
"      io.git.nanovc.ImmutableContentArea.freeze ()","0,0 ms (0%)","0,0 ms (0%)","1"
"     Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"    Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"   Self time","0,015 ms (-0%)","0,0 ms (0%)","1"
"  io.nanovc.memory.GitInspirationOperationalDecompositionTests.newContent ()","0,032 ms (-0%)","0,0 ms (0%)","1"
"   io.git.nanovc.RepoHandler.putWorkingAreaContent (String, byte[])","0,028 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.RepoEngine.putWorkingAreaContent (io.git.nanovc.Repo, String, byte[])","0,027 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.MutableContentArea.putContent (String, byte[])","0,027 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.MutableContentArea.getContent (String)","0,021 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,020 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"      java.util.ArrayList.add (Object)","0,003 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.add (Object, Object[], int)","0,002 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.grow ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.grow (int)","0,001 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"     Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"    Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"   Self time","0,003 ms (-0%)","0,0 ms (0%)","1"
"  Self time","0,028 ms (-0%)","0,0 ms (0%)","1"
" java.util.ArrayList.addAll (java.util.Collection)","0,380 ms (-0%)","15,4 ms (-0%)","85"
"  java.util.ArrayList.toArray ()","0,258 ms (-0%)","15,5 ms (-0%)","85"
"  Self time","0,110 ms (-0%)","0,0 ms (0%)","85"
"  java.util.ArrayList.grow (int)","0,011 ms (-0%)","0,0 ms (0%)","14"
" io.nanovc.memory.OperationalDecompositionTests.NC ()","0,362 ms (-0%)","0,0 ms (0%)","1"
"  io.nanovc.memory.GitInspirationOperationalDecompositionTests.commit ()","0,323 ms (-0%)","0,0 ms (0%)","1"
"   io.git.nanovc.RepoHandler.commitAll (String, boolean)","0,308 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.RepoEngine.commitAll (io.git.nanovc.Repo, String, String, java.time.ZonedDateTime, String, java.time.ZonedDateTime, boolean)","0,280 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.RepoEngine.commitAll_UseCommitParentHashes (io.git.nanovc.Repo, String, String, java.time.ZonedDateTime, String, java.time.ZonedDateTime, boolean, String[])","0,268 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.write_tree (io.git.nanovc.Repo)","0,153 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.hash_object_write (io.git.nanovc.Repo, io.git.nanovc.RepoObject)","0,079 ms (-0%)","0,0 ms (0%)","2"
"        io.git.nanovc.RepoEngine.hash_object (io.git.nanovc.ObjectType, byte[])","0,040 ms (-0%)","0,0 ms (0%)","2"
"         Self time","0,036 ms (-0%)","0,0 ms (0%)","2"
"         io.git.nanovc.Hex.bytesToHex (byte[])","0,004 ms (-0%)","0,0 ms (0%)","2"
"        io.git.nanovc.RepoObjectStore.put (io.git.nanovc.RepoObject)","0,018 ms (-0%)","0,0 ms (0%)","2"
"         java.util.HashMap.computeIfAbsent (Object, java.util.function.Function)","0,006 ms (-0%)","0,0 ms (0%)","2"
"          Self time","0,004 ms (-0%)","0,0 ms (0%)","2"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"          java.util.HashMap.resize ()","0,0 ms (0%)","0,0 ms (0%)","1"
"          io.git.nanovc.RepoObjectStore.lambda$put$0 (String)","0,0 ms (0%)","0,0 ms (0%)","2"
"          java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","2"
"         java.util.HashMap.put (Object, Object)","0,005 ms (-0%)","0,0 ms (0%)","4"
"          java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,003 ms (-0%)","0,0 ms (0%)","4"
"           java.util.HashMap.resize ()","0,001 ms (-0%)","0,0 ms (0%)","3"
"           Self time","0,001 ms (-0%)","0,0 ms (0%)","4"
"           java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","4"
"          Self time","0,001 ms (-0%)","0,0 ms (0%)","4"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","4"
"         Self time","0,003 ms (-0%)","0,0 ms (0%)","2"
"         java.util.HashMap.containsKey (Object)","0,002 ms (-0%)","0,0 ms (0%)","2"
"          Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"          java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"        io.git.nanovc.RepoObject.getByteArray ()","0,016 ms (-0%)","0,0 ms (0%)","2"
"         io.git.nanovc.Tree.writeContentToStream (java.io.DataOutputStream)","0,006 ms (-0%)","0,0 ms (0%)","1"
"          Self time","0,006 ms (-0%)","0,0 ms (0%)","1"
"          java.util.ArrayList.iterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,005 ms (-0%)","0,0 ms (0%)","2"
"         io.git.nanovc.Blob.writeContentToStream (java.io.DataOutputStream)","0,003 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,003 ms (-0%)","0,0 ms (0%)","2"
"        io.git.nanovc.Blob.getObjectType ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.Tree.getObjectType ()","0,0 ms (0%)","0,0 ms (0%)","1"
"       io.git.nanovc.PathBase.splitIntoParts ()","0,032 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,027 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.add (Object)","0,002 ms (-0%)","0,0 ms (0%)","2"
"         java.util.ArrayList.add (Object, Object[], int)","0,001 ms (-0%)","0,0 ms (0%)","2"
"          java.util.ArrayList.grow ()","0,0 ms (0%)","0,0 ms (0%)","1"
"           java.util.ArrayList.grow (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"        java.util.ArrayList.subList (int, int)","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.get (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.elementData (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.PathBase.lambda$splitIntoParts$0 (String)","0,0 ms (0%)","0,0 ms (0%)","2"
"        io.git.nanovc.PathBase.lambda$splitIntoParts$1 (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,016 ms (-0%)","0,0 ms (0%)","1"
"       java.util.HashMap.put (Object, Object)","0,008 ms (-0%)","0,0 ms (0%)","4"
"        java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,005 ms (-0%)","0,0 ms (0%)","4"
"         java.util.HashMap.resize ()","0,002 ms (-0%)","0,0 ms (0%)","4"
"         Self time","0,002 ms (-0%)","0,0 ms (0%)","4"
"         java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","4"
"        java.util.HashMap.hash (Object)","0,001 ms (-0%)","0,0 ms (0%)","4"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","4"
"       java.util.ArrayList.add (Object)","0,005 ms (-0%)","0,0 ms (0%)","3"
"        java.util.ArrayList.add (Object, Object[], int)","0,003 ms (-0%)","0,0 ms (0%)","3"
"         java.util.ArrayList.grow ()","0,002 ms (-0%)","0,0 ms (0%)","3"
"          java.util.ArrayList.grow (int)","0,001 ms (-0%)","0,0 ms (0%)","3"
"          Self time","0,001 ms (-0%)","0,0 ms (0%)","3"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","3"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","3"
"       io.git.nanovc.PathBase.resolve (String)","0,003 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.PathBase.isAbsolute (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoPath.createInstance (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"         io.git.nanovc.RepoPath.createInstance (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       java.util.HashMap.get (Object)","0,002 ms (-0%)","0,0 ms (0%)","4"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","4"
"        java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","4"
"        java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","4"
"       io.git.nanovc.RepoPath.atRoot ()","0,001 ms (-0%)","0,0 ms (0%)","2"
"       io.git.nanovc.PathBase.toString ()","0,0 ms (0%)","0,0 ms (0%)","4"
"       java.util.ArrayList.iterator ()","0,0 ms (0%)","0,0 ms (0%)","2"
"       io.git.nanovc.RepoPath.at (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.get (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.elementData (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.commit_tree (io.git.nanovc.Repo, String, String, String, java.time.ZonedDateTime, String, java.time.ZonedDateTime, String[])","0,088 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.hash_object_write (io.git.nanovc.Repo, io.git.nanovc.RepoObject)","0,087 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoEngine.hash_object (io.git.nanovc.ObjectType, byte[])","0,041 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,039 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.Hex.bytesToHex (byte[])","0,002 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoObject.getByteArray ()","0,025 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.Commit.writeContentToStream (java.io.DataOutputStream)","0,023 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.RepoObjectStore.put (io.git.nanovc.RepoObject)","0,018 ms (-0%)","0,0 ms (0%)","1"
"         java.util.HashMap.computeIfAbsent (Object, java.util.function.Function)","0,012 ms (-0%)","0,0 ms (0%)","1"
"          java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,009 ms (-0%)","0,0 ms (0%)","1"
"          Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          io.git.nanovc.RepoObjectStore.lambda$put$0 (String)","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.HashMap.put (Object, Object)","0,002 ms (-0%)","0,0 ms (0%)","2"
"          java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,001 ms (-0%)","0,0 ms (0%)","2"
"           java.util.HashMap.resize ()","0,0 ms (0%)","0,0 ms (0%)","1"
"           java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","2"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","2"
"         java.util.HashMap.containsKey (Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"          java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          java.util.HashMap.getNode (int, Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.Commit.getObjectType ()","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.update_ref_in_heads (io.git.nanovc.Repo, String, String)","0,012 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.update_ref (io.git.nanovc.Repo, io.git.nanovc.HashReferenceCollection, String, String)","0,011 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.HashReferenceCollection.getReference (String)","0,007 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,007 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.add (Object)","0,002 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.add (Object, Object[], int)","0,001 ms (-0%)","0,0 ms (0%)","1"
"          java.util.ArrayList.grow ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"           java.util.ArrayList.grow (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      java.util.ArrayList.forEach (java.util.function.Consumer)","0,008 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.RepoEngine.lambda$commitAll_UseCommitParentHashes$7 (boolean, io.git.nanovc.Repo, io.git.nanovc.MutableContent)","0,006 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.ImmutableContentArea.putContent (String, byte[])","0,004 ms (-0%)","0,0 ms (0%)","1"
"         io.git.nanovc.ImmutableContentArea.putContent (io.git.nanovc.ImmutableContent)","0,003 ms (-0%)","0,0 ms (0%)","1"
"          io.git.nanovc.ContentMap.putContent (io.git.nanovc.Content)","0,002 ms (-0%)","0,0 ms (0%)","1"
"           java.util.HashMap.put (Object, Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"            java.util.HashMap.putVal (int, Object, Object, boolean, boolean)","0,001 ms (-0%)","0,0 ms (0%)","1"
"             java.util.HashMap.resize ()","0,0 ms (0%)","0,0 ms (0%)","1"
"             java.util.HashMap.newNode (int, Object, Object, java.util.HashMap.Node)","0,0 ms (0%)","0,0 ms (0%)","1"
"             Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"            java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","1"
"            Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"           Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"          Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"        io.git.nanovc.ContentBase.getCloneOfContentAsByteArray ()","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.elementAt (Object[], int)","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,005 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.ImmutableContentArea.clear ()","0,0 ms (0%)","0,0 ms (0%)","1"
"       java.util.HashMap.clear ()","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      io.git.nanovc.ImmutableContentArea.freeze ()","0,0 ms (0%)","0,0 ms (0%)","1"
"     io.git.nanovc.RepoEngine.resolveReference (io.git.nanovc.Repo, String)","0,008 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.RepoEngine.resolveReference (io.git.nanovc.Repo, String)","0,007 ms (-0%)","0,0 ms (0%)","1"
"       io.git.nanovc.HashReferenceCollection.getReference (String)","0,006 ms (-0%)","0,0 ms (0%)","1"
"        Self time","0,005 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"      Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"     Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"    Self time","0,028 ms (-0%)","0,0 ms (0%)","1"
"   io.git.nanovc.RepoHandler.addAll (boolean)","0,011 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.RepoEngine.addAll (io.git.nanovc.Repo, boolean)","0,011 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.MutableContentArea.putContent (String, byte[])","0,007 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.MutableContentArea.getContent (String)","0,004 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,004 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.spliterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"      java.util.ArrayList.add (Object)","0,001 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.add (Object, Object[], int)","0,001 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.grow ()","0,0 ms (0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.grow (int)","0,0 ms (0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,001 ms (-0%)","0,0 ms (0%)","1"
"     Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.ContentBase.getCloneOfContentAsByteArray ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"     java.util.ArrayList.iterator ()","0,0 ms (0%)","0,0 ms (0%)","1"
"    Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"   Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"   io.git.nanovc.MutableContentArea.clear ()","0,0 ms (0%)","0,0 ms (0%)","1"
"    java.util.ArrayList.clear ()","0,0 ms (0%)","0,0 ms (0%)","1"
"    Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"  io.nanovc.memory.GitInspirationOperationalDecompositionTests.newContent ()","0,026 ms (-0%)","0,0 ms (0%)","1"
"   io.git.nanovc.RepoHandler.putWorkingAreaContent (String, byte[])","0,021 ms (-0%)","0,0 ms (0%)","1"
"    io.git.nanovc.RepoEngine.putWorkingAreaContent (io.git.nanovc.Repo, String, byte[])","0,020 ms (-0%)","0,0 ms (0%)","1"
"     io.git.nanovc.MutableContentArea.putContent (String, byte[])","0,019 ms (-0%)","0,0 ms (0%)","1"
"      io.git.nanovc.MutableContentArea.getContent (String)","0,013 ms (-0%)","0,0 ms (0%)","1"
"       Self time","0,012 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.spliterator ()","0,001 ms (-0%)","0,0 ms (0%)","1"
"      java.util.ArrayList.add (Object)","0,003 ms (-0%)","0,0 ms (0%)","1"
"       java.util.ArrayList.add (Object, Object[], int)","0,002 ms (-0%)","0,0 ms (0%)","1"
"        java.util.ArrayList.grow ()","0,002 ms (-0%)","0,0 ms (0%)","1"
"         java.util.ArrayList.grow (int)","0,001 ms (-0%)","0,0 ms (0%)","1"
"         Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"        Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"       Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"      Self time","0,002 ms (-0%)","0,0 ms (0%)","1"
"     Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"    Self time","0,0 ms (0%)","0,0 ms (0%)","1"
"   Self time","0,004 ms (-0%)","0,0 ms (0%)","1"
"  Self time","0,012 ms (-0%)","0,0 ms (0%)","1"
" java.util.HashMap.prepareArray (Object[])","0,351 ms (-0%)","0,0 ms (0%)","252"
" java.util.ArrayList.get (int)","0,340 ms (-0%)","0,0 ms (0%)","115"
"  Self time","0,311 ms (-0%)","0,0 ms (0%)","115"
"  java.util.ArrayList.elementData (int)","0,028 ms (-0%)","0,0 ms (0%)","115"
" java.util.ArrayList.spliterator ()","0,230 ms (-0%)","0,0 ms (0%)","381"
" java.util.ArrayList.hashCode ()","0,122 ms (-0%)","0,0 ms (0%)","35"
"  Self time","0,078 ms (-0%)","0,0 ms (0%)","35"
"  java.util.ArrayList.hashCodeRange (int, int)","0,023 ms (-0%)","0,0 ms (0%)","35"
"  java.util.ArrayList.checkForComodification (int)","0,020 ms (-0%)","0,0 ms (0%)","35"
" java.util.HashMap.hash (Object)","0,109 ms (-0%)","0,0 ms (0%)","283"
" java.util.HashMap.getNode (int, Object)","0,072 ms (-0%)","0,0 ms (0%)","283"
" java.util.ArrayList.listIterator (int)","0,061 ms (-0%)","0,0 ms (0%)","21"
"  Self time","0,055 ms (-0%)","0,0 ms (0%)","21"
"  java.util.ArrayList.rangeCheckForAdd (int)","0,006 ms (-0%)","0,0 ms (0%)","21"
" java.util.HashMap.get (Object)","0,034 ms (-0%)","0,0 ms (0%)","13"
"  Self time","0,025 ms (-0%)","0,0 ms (0%)","13"
"  java.util.HashMap.hash (Object)","0,005 ms (-0%)","0,0 ms (0%)","13"
"  java.util.HashMap.getNode (int, Object)","0,004 ms (-0%)","0,0 ms (0%)","13"
" java.util.ArrayList.iterator ()","0,028 ms (-0%)","0,0 ms (0%)","34"
" java.util.HashMap.tableSizeFor (int)","0,023 ms (-0%)","0,0 ms (0%)","42"
" java.util.ArrayList.sort (java.util.Comparator)","0,020 ms (-0%)","0,0 ms (0%)","7"
" java.util.ArrayList.isEmpty ()","0,016 ms (-0%)","0,0 ms (0%)","34"
" java.util.HashMap.containsKey (Object)","0,016 ms (-0%)","0,0 ms (0%)","7"
"  Self time","0,012 ms (-0%)","0,0 ms (0%)","7"
"  java.util.HashMap.hash (Object)","0,002 ms (-0%)","0,0 ms (0%)","7"
"  java.util.HashMap.getNode (int, Object)","0,001 ms (-0%)","0,0 ms (0%)","7"
" java.util.ArrayList.toArray ()","0,016 ms (-0%)","0,0 ms (0%)","7"
" java.util.HashMap.remove (Object)","0,004 ms (-0%)","0,0 ms (0%)","2"
"  java.util.HashMap.removeNode (int, Object, Object, boolean, boolean)","0,002 ms (-0%)","0,0 ms (0%)","2"
"  Self time","0,001 ms (-0%)","0,0 ms (0%)","2"
"  java.util.HashMap.hash (Object)","0,0 ms (0%)","0,0 ms (0%)","2"
" java.util.ArrayList.elementAt (Object[], int)","0,002 ms (-0%)","0,0 ms (0%)","7"
" java.util.ArrayList.remove (Object)","0,002 ms (-0%)","0,0 ms (0%)","2"
"  Self time","0,002 ms (-0%)","0,0 ms (0%)","2"
"  java.util.ArrayList.fastRemove (Object[], int)","0,0 ms (0%)","0,0 ms (0%)","1"
" java.util.ArrayList.clear ()","0,001 ms (-0%)","0,0 ms (0%)","2"
